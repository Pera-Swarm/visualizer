{"version":3,"file":"main.bundle.js","mappings":"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","sources":["webpack://pera-swarm-visualizer/./src/js/data/config.js","webpack://pera-swarm-visualizer/./src/js/utils/detector.js","webpack://pera-swarm-visualizer/./src/js/app/components/renderer.js","webpack://pera-swarm-visualizer/./src/js/app/components/label.js","webpack://pera-swarm-visualizer/./src/js/app/components/camera.js","webpack://pera-swarm-visualizer/./src/js/app/components/light.js","webpack://pera-swarm-visualizer/./src/js/app/components/controls.js","webpack://pera-swarm-visualizer/./src/js/app/components/environment.js","webpack://pera-swarm-visualizer/./src/js/app/helpers/vertexNormalsHelper.js","webpack://pera-swarm-visualizer/./src/js/app/helpers/meshHelper.js","webpack://pera-swarm-visualizer/./src/js/utils/helpers.js","webpack://pera-swarm-visualizer/./src/js/app/model/texture.js","webpack://pera-swarm-visualizer/./src/js/app/loaders/GLTFLoader.js","webpack://pera-swarm-visualizer/./src/js/utils/keyboard.js","webpack://pera-swarm-visualizer/./src/js/app/managers/interaction.js","webpack://pera-swarm-visualizer/./src/js/app/managers/datGUI.js","webpack://pera-swarm-visualizer/./src/js/app/components/obstacle.js","webpack://pera-swarm-visualizer/./src/js/app/components/robot.js","webpack://pera-swarm-visualizer/./src/js/app/helpers/urlHelper.js","webpack://pera-swarm-visualizer/./src/js/app/managers/mqttClient.js","webpack://pera-swarm-visualizer/./src/js/app/main.js","webpack://pera-swarm-visualizer/./src/js/app.js"],"sourcesContent":["import TWEEN from '@tweenjs/tween.js';\r\n\r\nlet resolvedConfig;\r\n\r\n// This object contains the state of the app\r\nconst config = {\r\n    scale: 1,\r\n    arena: {\r\n        size: 180,\r\n        minX: -90,\r\n        maxX: 90,\r\n        minY: -90,\r\n        maxY: 90\r\n    },\r\n    mqtt: {\r\n        server: localStorage.getItem('pera-swarm-server') || 'webservices.ceykod.com',\r\n        port: parseInt(localStorage.getItem('pera-swarm-port')) || 8883,\r\n        path: localStorage.getItem('pera-swarm-path') || '/mqtt',\r\n        channel: localStorage.getItem('pera-swarm-channel') || 'v1'\r\n    },\r\n    mixedReality: {\r\n        obstacles: 'M',\r\n        robots: 'M'\r\n    },\r\n    selectedReality: 'M',\r\n    selectedRealities: {\r\n        real: true,\r\n        virtual: true\r\n    },\r\n    hiddenOpacity: 0.3,\r\n    isDev: true,\r\n    isShowingStats: true,\r\n    isShowingLables: true,\r\n    labelsVisibility: {\r\n        obstacles: false,\r\n        robots: false\r\n    },\r\n    isShowingRobotSnapshots: true,\r\n    isLoaded: false,\r\n    isTweening: false,\r\n    isRotating: false,\r\n    isMouseMoving: false,\r\n    isMouseOver: false,\r\n    maxAnisotropy: 1,\r\n    dpr: 1,\r\n    easing: TWEEN.Easing.Quadratic.InOut,\r\n    duration: 500,\r\n    texture: {\r\n        path: './assets/textures/',\r\n        imageFiles: [{ name: 'UV', image: 'UV_Grid_Sm.jpg' }]\r\n    },\r\n    mesh: {\r\n        enableHelper: false,\r\n        wireframe: false,\r\n        translucent: false,\r\n        material: {\r\n            color: 0xffffff,\r\n            emissive: 0xffffff\r\n        }\r\n    },\r\n    fog: {\r\n        color: 0xffffff,\r\n        near: 0.00025\r\n    },\r\n    camera: {\r\n        fov: 50,\r\n        near: 50,\r\n        far: 1000,\r\n        aspect: 1,\r\n        posX: 0,\r\n        posY: 0,\r\n        posZ: 0\r\n    },\r\n    controls: {\r\n        autoRotate: false,\r\n        autoRotateSpeed: -1.5,\r\n        rotateSpeed: 1.5,\r\n        zoomSpeed: 0.8,\r\n        minDistance: 100,\r\n        maxDistance: 800,\r\n        minPolarAngle: 0 /*Math.PI / 6,*/,\r\n        maxPolarAngle: (7 / 16) * Math.PI,\r\n        minAzimuthAngle: -Infinity,\r\n        maxAzimuthAngle: Infinity,\r\n        enableDamping: true,\r\n        dampingFactor: 0.5,\r\n        enableZoom: true,\r\n        target: {\r\n            x: 0,\r\n            y: 0,\r\n            z: 0\r\n        }\r\n    },\r\n    ambientLight: {\r\n        enabled: true,\r\n        color: 0x141414\r\n    },\r\n    directionalLight: {\r\n        enabled: true,\r\n        color: 0xf0f0f0,\r\n        intensity: 0.4,\r\n        x: -75,\r\n        y: 280,\r\n        z: 150\r\n    },\r\n    shadow: {\r\n        enabled: true,\r\n        helperEnabled: false,\r\n        bias: 0,\r\n        mapWidth: 2048,\r\n        mapHeight: 2048,\r\n        near: 250,\r\n        far: 400,\r\n        top: 100,\r\n        right: 100,\r\n        bottom: -100,\r\n        left: -100\r\n    },\r\n    pointLight: {\r\n        enabled: true,\r\n        color: 0xffffff,\r\n        intensity: 0.34,\r\n        distance: 115,\r\n        x: 0,\r\n        y: 0,\r\n        z: 0\r\n    },\r\n    hemiLight: {\r\n        enabled: true,\r\n        color: 0xc8c8c8,\r\n        groundColor: 0xffffff,\r\n        intensity: 0.55,\r\n        x: 0,\r\n        y: 0,\r\n        z: 0\r\n    }\r\n};\r\n\r\n// Check localstorage for updated config, if not use above config\r\nconst storedConfig = localStorage.getItem(document.location.href + '.config');\r\nresolvedConfig = storedConfig !== null && storedConfig !== undefined ? JSON.parse(storedConfig) : config;\r\n\r\n// method to presist config data with localStorage\r\nexport const saveConfig = (data) => {\r\n    localStorage.setItem(document.location.href + '.config', JSON.stringify({ ...config, ...data }));\r\n};\r\n\r\nexport default resolvedConfig;\r\n","/**\n * @author alteredq / http://alteredqualia.com/\n * @author mr.doob / http://mrdoob.com/\n */\n\nexport default {\n    canvas: !!window.CanvasRenderingContext2D,\n    webgl: (function () {\n        try {\n            var canvas = document.createElement('canvas');\n\n            return !!(\n                window.WebGLRenderingContext &&\n                (canvas.getContext('webgl') || canvas.getContext('experimental-webgl'))\n            );\n        } catch (e) {\n            return false;\n        }\n    })(),\n\n    workers: !!window.Worker,\n    fileapi: window.File && window.FileReader && window.FileList && window.Blob,\n\n    getWebGLErrorMessage: function () {\n        var element = document.createElement('div');\n        element.id = 'webgl-error-message';\n        element.style.fontFamily = 'monospace';\n        element.style.fontSize = '13px';\n        element.style.fontWeight = 'normal';\n        element.style.textAlign = 'center';\n        element.style.background = '#fff';\n        element.style.color = '#000';\n        element.style.padding = '1.5em';\n        element.style.width = '400px';\n        element.style.margin = '5em auto 0';\n\n        if (!this.webgl) {\n            element.innerHTML = window.WebGLRenderingContext\n                ? [\n                      'Your graphics card does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000000\">WebGL</a>.<br />',\n                      'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000000\">here</a>.'\n                  ].join('\\n')\n                : [\n                      'Your browser does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000000\">WebGL</a>.<br/>',\n                      'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000000\">here</a>.'\n                  ].join('\\n');\n        }\n\n        return element;\n    },\n\n    addGetWebGLMessage: function (parameters) {\n        var parent, id, element;\n\n        parameters = parameters || {};\n\n        parent = parameters.parent !== undefined ? parameters.parent : document.body;\n        id = parameters.id !== undefined ? parameters.id : 'oldie';\n\n        element = this.getWebGLErrorMessage();\n        element.id = id;\n\n        parent.appendChild(element);\n    }\n};\n","import * as THREE from 'three';\n\nimport Config from '../../data/config';\n\n// Main webGL renderer class\nexport default class Renderer {\n    constructor(scene, container) {\n        // Properties\n        this.scene = scene;\n        this.container = container;\n\n        // Create WebGL renderer and set its antialias\n        this.threeRenderer = new THREE.WebGLRenderer({ antialias: true });\n\n        // Set clear color to fog to enable fog or to hex color for no fog\n        this.threeRenderer.setClearColor(scene.fog.color);\n        this.threeRenderer.setPixelRatio(window.devicePixelRatio); // For retina\n\n        // Appends canvas\n        container.appendChild(this.threeRenderer.domElement);\n\n        // Shadow map options\n        this.threeRenderer.shadowMap.enabled = true;\n        this.threeRenderer.shadowMap.type = THREE.PCFSoftShadowMap;\n\n        // Get anisotropy for textures\n        Config.maxAnisotropy = this.threeRenderer.capabilities.getMaxAnisotropy();\n\n        // Initial size update set to canvas container\n        this.updateSize();\n\n        // Listeners\n        document.addEventListener('DOMContentLoaded', () => this.updateSize(), false);\n        window.addEventListener('resize', () => this.updateSize(), false);\n    }\n\n    updateSize() {\n        this.threeRenderer.setSize(this.container.offsetWidth, this.container.offsetHeight);\n    }\n\n    render(scene, camera) {\n        // Renders scene to canvas target\n        this.threeRenderer.render(scene, camera);\n    }\n}\n","import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { CSS2DRenderer, CSS2DObject } from 'three/examples/jsm/renderers/CSS2DRenderer.js';\nimport Config from '../../data/config';\n\nexport default function () {\n    const renderer = new CSS2DRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.domElement.style.position = 'absolute';\n    renderer.domElement.style.top = '0px';\n    renderer.isShowingLables = Config.isShowingLables;\n    renderer.isShowingObstacleLables = Config.labelsVisibility.obstacles;\n    renderer.isShowingRobotLables = Config.labelsVisibility.robots;\n    renderer.updateSize = function () {\n        renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    document.addEventListener('DOMContentLoaded', () => renderer.updateSize(), false);\n    window.addEventListener('resize', () => renderer.updateSize(), false);\n    return renderer;\n}\n\nexport const addLabel = (prefix, object, mesh, visibility) => {\n    if (mesh !== undefined) {\n        const element = document.createElement('div');\n        element.className = 'label';\n\n        // TODO: use names, insted of IDs\n        element.textContent = object.name + ' [' + mesh.reality + ']';\n\n        element.style.marginTop = '-1.2em';\n        const elementLabel = new CSS2DObject(element);\n        elementLabel.name = `Label[${object.id}]`;\n        elementLabel.position.set(0, 1, 0);\n        elementLabel.visible = visibility;\n        mesh.add(elementLabel);\n        mesh.removeLabel = () => {\n            mesh.remove(elementLabel);\n        };\n    }\n};\n\nexport const removeLabel = (mesh) => {\n    if (mesh !== undefined && mesh.removeLabel !== undefined) {\n        mesh.removeLabel();\n    }\n};\n","import * as THREE from 'three';\n\nimport Config from '../../data/config';\n\n// Class that creates and updates the main camera\nexport default class Camera {\n    constructor(renderer) {\n        const width = renderer.domElement.width;\n        const height = renderer.domElement.height;\n\n        // Create and position a Perspective Camera\n        this.threeCamera = new THREE.PerspectiveCamera(\n            Config.camera.fov,\n            width / height,\n            Config.camera.near,\n            Config.camera.far\n        );\n        this.threeCamera.position.set(Config.camera.posX, Config.camera.posY, Config.camera.posZ);\n        this.threeCamera.up.set(0, 0, 1);\n\n        // Initial sizing\n        this.updateSize(renderer);\n\n        // Listeners\n        window.addEventListener('resize', () => this.updateSize(renderer), false);\n    }\n\n    updateSize(renderer) {\n        // Update camera aspect ratio with window aspect ratio\n        this.threeCamera.aspect = renderer.domElement.width / renderer.domElement.height;\n\n        // Always call updateProjectionMatrix on camera change\n        this.threeCamera.updateProjectionMatrix();\n    }\n}\n","import * as THREE from 'three';\n\nimport Config from '../../data/config';\n\n// Sets up and places all lights in scene\nexport default class Light {\n    constructor(scene) {\n        this.scene = scene;\n\n        this.init();\n    }\n\n    init() {\n        // Ambient\n        this.ambientLight = new THREE.AmbientLight(Config.ambientLight.color);\n        this.ambientLight.visible = Config.ambientLight.enabled;\n\n        // Point light\n        this.pointLight = new THREE.PointLight(\n            Config.pointLight.color,\n            Config.pointLight.intensity,\n            Config.pointLight.distance\n        );\n        this.pointLight.position.set(Config.pointLight.x, Config.pointLight.y, Config.pointLight.z);\n        this.pointLight.visible = Config.pointLight.enabled;\n\n        // Directional light\n        this.directionalLight = new THREE.DirectionalLight(\n            Config.directionalLight.color,\n            Config.directionalLight.intensity\n        );\n        this.directionalLight.position.set(\n            Config.directionalLight.x,\n            Config.directionalLight.y,\n            Config.directionalLight.z\n        );\n        this.directionalLight.visible = Config.directionalLight.enabled;\n\n        // Shadow map\n        this.directionalLight.castShadow = Config.shadow.enabled;\n        this.directionalLight.shadow.bias = Config.shadow.bias;\n        this.directionalLight.shadow.camera.near = Config.shadow.near;\n        this.directionalLight.shadow.camera.far = Config.shadow.far;\n        this.directionalLight.shadow.camera.left = Config.shadow.left;\n        this.directionalLight.shadow.camera.right = Config.shadow.right;\n        this.directionalLight.shadow.camera.top = Config.shadow.top;\n        this.directionalLight.shadow.camera.bottom = Config.shadow.bottom;\n        this.directionalLight.shadow.mapSize.width = Config.shadow.mapWidth;\n        this.directionalLight.shadow.mapSize.height = Config.shadow.mapHeight;\n\n        // Shadow camera helper\n        this.directionalLightHelper = new THREE.CameraHelper(this.directionalLight.shadow.camera);\n        this.directionalLightHelper.visible = Config.shadow.helperEnabled;\n\n        // Hemisphere light\n        this.hemiLight = new THREE.HemisphereLight(\n            Config.hemiLight.color,\n            Config.hemiLight.groundColor,\n            Config.hemiLight.intensity\n        );\n        this.hemiLight.position.set(Config.hemiLight.x, Config.hemiLight.y, Config.hemiLight.z);\n        this.hemiLight.visible = Config.hemiLight.enabled;\n    }\n\n    place(lightName) {\n        switch (lightName) {\n            case 'ambient':\n                this.scene.add(this.ambientLight);\n                break;\n\n            case 'directional':\n                this.scene.add(this.directionalLight);\n                this.scene.add(this.directionalLightHelper);\n                break;\n\n            case 'point':\n                this.scene.add(this.pointLight);\n                break;\n\n            case 'hemi':\n                this.scene.add(this.hemiLight);\n                break;\n        }\n    }\n}\n","import * as THREE from 'three';\n\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport Config from '../../data/config';\n\n// Controls based on orbit controls\nexport default class Controls {\n    constructor(camera, container) {\n        this.threeControls = new OrbitControls(camera, container);\n\n        this.init();\n    }\n\n    init() {\n        this.threeControls.target.set(Config.controls.target.x, Config.controls.target.y, Config.controls.target.z);\n        this.threeControls.autoRotate = Config.controls.autoRotate;\n        this.threeControls.autoRotateSpeed = Config.controls.autoRotateSpeed;\n        this.threeControls.rotateSpeed = Config.controls.rotateSpeed;\n        this.threeControls.zoomSpeed = Config.controls.zoomSpeed;\n        this.threeControls.minDistance = Config.controls.minDistance;\n        this.threeControls.maxDistance = Config.controls.maxDistance;\n        this.threeControls.minPolarAngle = Config.controls.minPolarAngle;\n        this.threeControls.maxPolarAngle = Config.controls.maxPolarAngle;\n        this.threeControls.enableDamping = Config.controls.enableDamping;\n        this.threeControls.enableZoom = Config.controls.enableZoom;\n        this.threeControls.dampingFactor = Config.controls.dampingFactor;\n\n        this.threeControls.enableRotate = true;\n\n        // Avoid null situations\n        if (Config.controls.minAzimuthAngle == null) {\n            this.threeControls.minAzimuthAngle = -Infinity;\n        } else {\n            this.threeControls.minAzimuthAngle = Config.controls.minAzimuthAngle;\n        }\n\n        // Avoid null situations\n        if (Config.controls.maxAzimuthAngle == null) {\n            this.threeControls.maxAzimuthAngle = Infinity;\n        } else {\n            this.threeControls.maxAzimuthAngle = Config.controls.maxAzimuthAngle;\n        }\n\n        /*this.threeControls.mouseButtons = {\n            LEFT: THREE.MOUSE.ROTATE,\n            MIDDLE: THREE.MOUSE.DOLLY,\n            RIGHT: THREE.MOUSE.PAN\n        }*/\n    }\n}\n","import * as THREE from 'three';\n\nimport Config from '../../data/config';\n\nexport default class Environment {\n    constructor() {\n        console.log(`Environment: Scale: ${scene_scale}, arenaSize:${Config.arena.size}`);\n\n        var geometry = new THREE.PlaneBufferGeometry(Config.arena.size, Config.arena.size);\n        var material = new THREE.MeshPhongMaterial({\n            color: 0x999999,\n            depthWrite: false\n        });\n        material.userData.originalColor = new THREE.Color(0x999999);\n\n        // Ground\n        var ground = new THREE.Mesh(geometry, material);\n        ground.scale.set(scene_scale, scene_scale, scene_scale);\n        ground.position.set(0, 0, 0);\n        ground.receiveShadow = true;\n        scene.add(ground);\n\n        // Grid\n        var grid = new THREE.GridHelper(Config.arena.size, Math.round(Config.arena.size / 10), 0x000000, 0x5b5b5b);\n        grid.rotation.x = -Math.PI / 2;\n        grid.scale.set(scene_scale, scene_scale, scene_scale);\n        grid.position.set(0, 0, 0);\n        grid.material.opacity = 0.35;\n        grid.material.transparent = true;\n        scene.add(grid);\n    }\n}\n","/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nimport { BufferGeometry, Float32BufferAttribute, LineSegments, LineBasicMaterial, Matrix3, Vector3 } from 'three';\n\nconst _v1 = new Vector3();\nconst _v2 = new Vector3();\nconst _normalMatrix = new Matrix3();\nconst _keys = ['a', 'b', 'c'];\n\nfunction VertexNormalsHelper(object, size, hex) {\n    this.object = object;\n    this.size = size !== undefined ? size : 0.1;\n\n    const color = hex !== undefined ? hex : 0xff0000;\n\n    //\n\n    let nNormals = 0;\n\n    const objGeometry = this.object.geometry;\n\n    if (objGeometry && objGeometry.isGeometry) {\n        nNormals = objGeometry.faces.length * 3;\n    } else if (objGeometry && objGeometry.isBufferGeometry) {\n        nNormals = objGeometry.attributes.normal.count;\n    }\n\n    //\n\n    const geometry = new BufferGeometry();\n    const positions = new Float32BufferAttribute(nNormals * 2 * 3, 3);\n\n    geometry.setAttribute('position', positions);\n\n    LineSegments.call(this, geometry, new LineBasicMaterial({ color: color, toneMapped: false }));\n\n    this.type = 'VertexNormalsHelper';\n\n    //\n\n    this.matrixAutoUpdate = false;\n\n    this.update();\n}\n\nVertexNormalsHelper.prototype = Object.create(LineSegments.prototype);\nVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\nVertexNormalsHelper.prototype.update = function () {\n    let idx;\n    this.object.updateMatrixWorld(true);\n\n    _normalMatrix.getNormalMatrix(this.object.matrixWorld);\n\n    const matrixWorld = this.object.matrixWorld;\n    const position = this.geometry.attributes.position;\n\n    //\n\n    const objGeometry = this.object.geometry;\n\n    if (objGeometry && objGeometry.isGeometry) {\n        const vertices = objGeometry.vertices;\n\n        const faces = objGeometry.faces;\n\n        idx = 0;\n\n        for (let i = 0, l = faces.length; i < l; i++) {\n            const face = faces[i];\n\n            for (let j = 0, jl = face.vertexNormals.length; j < jl; j++) {\n                const vertex = vertices[face[_keys[j]]];\n                const normal = face.vertexNormals[j];\n\n                _v1.copy(vertex).applyMatrix4(matrixWorld);\n                _v2.copy(normal).applyMatrix3(_normalMatrix).normalize().multiplyScalar(this.size).add(_v1);\n\n                position.setXYZ(idx, _v1.x, _v1.y, _v1.z);\n\n                idx = idx + 1;\n\n                position.setXYZ(idx, _v2.x, _v2.y, _v2.z);\n\n                idx = idx + 1;\n            }\n        }\n    } else if (objGeometry && objGeometry.isBufferGeometry) {\n        const objPos = objGeometry.attributes.position;\n        const objNorm = objGeometry.attributes.normal;\n\n        idx = 0;\n\n        // for simplicity, ignore index and drawcalls, and render every normal\n\n        for (var j = 0, jl = objPos.count; j < jl; j++) {\n            _v1.set(objPos.getX(j), objPos.getY(j), objPos.getZ(j)).applyMatrix4(matrixWorld);\n            _v2.set(objNorm.getX(j), objNorm.getY(j), objNorm.getZ(j));\n            _v2.applyMatrix3(_normalMatrix).normalize().multiplyScalar(this.size).add(_v1);\n\n            position.setXYZ(idx, _v1.x, _v1.y, _v1.z);\n\n            idx = idx + 1;\n\n            position.setXYZ(idx, _v2.x, _v2.y, _v2.z);\n\n            idx = idx + 1;\n        }\n    }\n\n    position.needsUpdate = true;\n};\n\nexport { VertexNormalsHelper };\n","import * as THREE from 'three';\nimport { VertexNormalsHelper } from './vertexNormalsHelper';\n\n// Simple mesh helper that shows edges, wireframes, and face and vertex normals\nexport default class MeshHelper {\n    constructor(scene, mesh) {\n        this.mesh = mesh;\n        this.scene = scene;\n\n        const wireframe = new THREE.WireframeGeometry(this.mesh.geometry);\n        this.wireLine = new THREE.LineSegments(wireframe);\n        this.wireLine.material.depthTest = false;\n        this.wireLine.material.opacity = 0.25;\n        this.wireLine.material.transparent = true;\n\n        const edges = new THREE.EdgesGeometry(this.mesh.geometry);\n        this.edgesLine = new THREE.LineSegments(edges);\n        this.edgesLine.material.depthTest = false;\n        this.edgesLine.material.opacity = 0.25;\n        this.edgesLine.material.transparent = true;\n\n        this.vertexHelper = new VertexNormalsHelper(this.mesh, 2);\n        this.boxHelper = new THREE.BoxHelper(this.mesh);\n    }\n\n    enable() {\n        this.mesh.add(this.wireLine);\n        this.mesh.add(this.edgesLine);\n\n        this.scene.add(this.vertexHelper);\n        this.scene.add(this.boxHelper);\n    }\n\n    disable() {\n        this.mesh.remove(this.wireLine);\n        this.mesh.remove(this.edgesLine);\n\n        this.scene.remove(this.vertexHelper);\n        this.scene.remove(this.boxHelper);\n    }\n}\n","// Provides simple static functions that are used multiple times in the app\nexport default class Helpers {\n    static throttle(fn, threshhold, scope) {\n        threshhold || (threshhold = 250);\n        let last, deferTimer;\n\n        return function () {\n            const context = scope || this;\n\n            const now = +new Date(),\n                args = arguments;\n\n            if (last && now < last + threshhold) {\n                clearTimeout(deferTimer);\n                deferTimer = setTimeout(function () {\n                    last = now;\n                    fn.apply(context, args);\n                }, threshhold);\n            } else {\n                last = now;\n                fn.apply(context, args);\n            }\n        };\n    }\n\n    static logProgress() {\n        return function (xhr) {\n            if (xhr.lengthComputable) {\n                const percentComplete = (xhr.loaded / xhr.total) * 100;\n\n                console.log(Math.round(percentComplete, 2) + '% downloaded');\n            }\n        };\n    }\n\n    static logError() {\n        return function (xhr) {\n            console.error(xhr);\n        };\n    }\n\n    static handleColorChange(color) {\n        return (value) => {\n            if (typeof value === 'string') {\n                value = value.replace('#', '0x');\n            }\n\n            color.setHex(value);\n        };\n    }\n\n    static update(mesh) {\n        this.needsUpdate(mesh.material, mesh.geometry);\n    }\n\n    static needsUpdate(material, geometry) {\n        return function () {\n            material.shading = +material.shading; //Ensure number\n            material.vertexColors = +material.vertexColors; //Ensure number\n            material.side = +material.side; //Ensure number\n            material.needsUpdate = true;\n            geometry.verticesNeedUpdate = true;\n            geometry.normalsNeedUpdate = true;\n            geometry.colorsNeedUpdate = true;\n        };\n    }\n\n    static updateTexture(material, materialKey, textures) {\n        return function (key) {\n            material[materialKey] = textures[key];\n            material.needsUpdate = true;\n        };\n    }\n}\n","import * as THREE from 'three';\n// Promise polyfill for IE\nimport { Promise } from 'es6-promise';\n\nimport Helpers from '../../utils/helpers';\nimport Config from '../../data/config';\n\n// This class preloads all textures in the imageFiles array in the Config via ES6 Promises.\n// Once all textures are done loading the model itself will be loaded after the Promise .then() callback.\n// Using promises to preload textures prevents issues when applying textures to materials\n// before the textures have loaded.\nexport default class Texture {\n    constructor() {\n        // Prop that will contain all loaded textures\n        this.textures = {};\n    }\n\n    load() {\n        const loader = new THREE.TextureLoader();\n        const maxAnisotropy = Config.maxAnisotropy;\n        const imageFiles = Config.texture.imageFiles;\n        const promiseArray = [];\n\n        loader.setPath(Config.texture.path);\n\n        imageFiles.forEach((imageFile) => {\n            // Add an individual Promise for each image in array\n            promiseArray.push(\n                new Promise((resolve, reject) => {\n                    // Each Promise will attempt to load the image file\n                    loader.load(\n                        imageFile.image,\n                        // This gets called on load with the loaded texture\n                        (texture) => {\n                            texture.anisotropy = maxAnisotropy;\n\n                            // Resolve Promise with object of texture if it is instance of THREE.Texture\n                            const modelOBJ = {};\n                            modelOBJ[imageFile.name] = texture;\n                            if (modelOBJ[imageFile.name] instanceof THREE.Texture) resolve(modelOBJ);\n                        },\n                        Helpers.logProgress(),\n                        (xhr) => reject(new Error(xhr + 'An error occurred loading while loading ' + imageFile.image))\n                    );\n                })\n            );\n        });\n\n        // Iterate through all Promises in array and return another Promise when all have resolved or console log reason when any reject\n        return Promise.all(promiseArray).then(\n            (textures) => {\n                // Set the textures prop object to have name be the resolved texture\n                for (let i = 0; i < textures.length; i++) {\n                    this.textures[Object.keys(textures[i])[0]] = textures[i][Object.keys(textures[i])[0]];\n                }\n            },\n            (reason) => console.log(reason)\n        );\n    }\n}\n","/**\n * @author Rich Tibbett / https://github.com/richtr\n * @author mrdoob / http://mrdoob.com/\n * @author Tony Parisi / http://www.tonyparisi.com/\n * @author Takahiro / https://github.com/takahirox\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nimport {\n    AnimationClip,\n    Bone,\n    Box3,\n    BufferAttribute,\n    BufferGeometry,\n    ClampToEdgeWrapping,\n    Color,\n    DirectionalLight,\n    DoubleSide,\n    FileLoader,\n    FrontSide,\n    Group,\n    InterleavedBuffer,\n    InterleavedBufferAttribute,\n    Interpolant,\n    InterpolateDiscrete,\n    InterpolateLinear,\n    Line,\n    LineBasicMaterial,\n    LineLoop,\n    LineSegments,\n    LinearFilter,\n    LinearMipmapLinearFilter,\n    LinearMipmapNearestFilter,\n    Loader,\n    LoaderUtils,\n    Material,\n    MathUtils,\n    Matrix4,\n    Mesh,\n    MeshBasicMaterial,\n    MeshPhysicalMaterial,\n    MeshStandardMaterial,\n    MirroredRepeatWrapping,\n    NearestFilter,\n    NearestMipmapLinearFilter,\n    NearestMipmapNearestFilter,\n    NumberKeyframeTrack,\n    Object3D,\n    OrthographicCamera,\n    PerspectiveCamera,\n    PointLight,\n    Points,\n    PointsMaterial,\n    PropertyBinding,\n    QuaternionKeyframeTrack,\n    RGBAFormat,\n    RGBFormat,\n    RepeatWrapping,\n    Skeleton,\n    SkinnedMesh,\n    Sphere,\n    SpotLight,\n    TangentSpaceNormalMap,\n    TextureLoader,\n    TriangleFanDrawMode,\n    TriangleStripDrawMode,\n    Vector2,\n    Vector3,\n    VectorKeyframeTrack,\n    sRGBEncoding\n} from 'three';\n\nconst GLTFLoader = (function () {\n    function GLTFLoader(manager) {\n        Loader.call(this, manager);\n\n        this.dracoLoader = null;\n        this.ddsLoader = null;\n    }\n\n    GLTFLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n        constructor: GLTFLoader,\n\n        load: function (url, onLoad, onProgress, onError) {\n            var scope = this;\n\n            var resourcePath;\n\n            if (this.resourcePath !== '') {\n                resourcePath = this.resourcePath;\n            } else if (this.path !== '') {\n                resourcePath = this.path;\n            } else {\n                resourcePath = LoaderUtils.extractUrlBase(url);\n            }\n\n            // Tells the LoadingManager to track an extra item, which resolves after\n            // the model is fully loaded. This means the count of items loaded will\n            // be incorrect, but ensures manager.onLoad() does not fire early.\n            scope.manager.itemStart(url);\n\n            var _onError = function (e) {\n                if (onError) {\n                    onError(e);\n                } else {\n                    console.error(e);\n                }\n\n                scope.manager.itemError(url);\n                scope.manager.itemEnd(url);\n            };\n\n            var loader = new FileLoader(scope.manager);\n\n            loader.setPath(this.path);\n            loader.setResponseType('arraybuffer');\n\n            if (scope.crossOrigin === 'use-credentials') {\n                loader.setWithCredentials(true);\n            }\n\n            loader.load(\n                url,\n                function (data) {\n                    try {\n                        scope.parse(\n                            data,\n                            resourcePath,\n                            function (gltf) {\n                                onLoad(gltf);\n\n                                scope.manager.itemEnd(url);\n                            },\n                            _onError\n                        );\n                    } catch (e) {\n                        _onError(e);\n                    }\n                },\n                onProgress,\n                _onError\n            );\n        },\n\n        setDRACOLoader: function (dracoLoader) {\n            this.dracoLoader = dracoLoader;\n            return this;\n        },\n\n        setDDSLoader: function (ddsLoader) {\n            this.ddsLoader = ddsLoader;\n            return this;\n        },\n\n        parse: function (data, path, onLoad, onError) {\n            var content;\n            var extensions = {};\n\n            if (typeof data === 'string') {\n                content = data;\n            } else {\n                var magic = LoaderUtils.decodeText(new Uint8Array(data, 0, 4));\n\n                if (magic === BINARY_EXTENSION_HEADER_MAGIC) {\n                    try {\n                        extensions[EXTENSIONS.KHR_BINARY_GLTF] = new GLTFBinaryExtension(data);\n                    } catch (error) {\n                        if (onError) onError(error);\n                        return;\n                    }\n\n                    content = extensions[EXTENSIONS.KHR_BINARY_GLTF].content;\n                } else {\n                    content = LoaderUtils.decodeText(new Uint8Array(data));\n                }\n            }\n\n            var json = JSON.parse(content);\n\n            if (json.asset === undefined || json.asset.version[0] < 2) {\n                if (onError)\n                    onError(new Error('THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported.'));\n                return;\n            }\n\n            if (json.extensionsUsed) {\n                for (var i = 0; i < json.extensionsUsed.length; ++i) {\n                    var extensionName = json.extensionsUsed[i];\n                    var extensionsRequired = json.extensionsRequired || [];\n\n                    switch (extensionName) {\n                        case EXTENSIONS.KHR_LIGHTS_PUNCTUAL:\n                            extensions[extensionName] = new GLTFLightsExtension(json);\n                            break;\n\n                        case EXTENSIONS.KHR_MATERIALS_CLEARCOAT:\n                            extensions[extensionName] = new GLTFMaterialsClearcoatExtension();\n                            break;\n\n                        case EXTENSIONS.KHR_MATERIALS_UNLIT:\n                            extensions[extensionName] = new GLTFMaterialsUnlitExtension();\n                            break;\n\n                        case EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:\n                            extensions[extensionName] = new GLTFMaterialsPbrSpecularGlossinessExtension();\n                            break;\n\n                        case EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\n                            extensions[extensionName] = new GLTFDracoMeshCompressionExtension(json, this.dracoLoader);\n                            break;\n\n                        case EXTENSIONS.MSFT_TEXTURE_DDS:\n                            extensions[extensionName] = new GLTFTextureDDSExtension(this.ddsLoader);\n                            break;\n\n                        case EXTENSIONS.KHR_TEXTURE_TRANSFORM:\n                            extensions[extensionName] = new GLTFTextureTransformExtension();\n                            break;\n\n                        case EXTENSIONS.KHR_MESH_QUANTIZATION:\n                            extensions[extensionName] = new GLTFMeshQuantizationExtension();\n                            break;\n\n                        default:\n                            if (extensionsRequired.indexOf(extensionName) >= 0) {\n                                console.warn('THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".');\n                            }\n                    }\n                }\n            }\n\n            var parser = new GLTFParser(json, extensions, {\n                path: path || this.resourcePath || '',\n                crossOrigin: this.crossOrigin,\n                manager: this.manager\n            });\n\n            parser.parse(onLoad, onError);\n        }\n    });\n\n    /* GLTFREGISTRY */\n\n    function GLTFRegistry() {\n        var objects = {};\n\n        return {\n            get: function (key) {\n                return objects[key];\n            },\n\n            add: function (key, object) {\n                objects[key] = object;\n            },\n\n            remove: function (key) {\n                delete objects[key];\n            },\n\n            removeAll: function () {\n                objects = {};\n            }\n        };\n    }\n\n    /*********************************/\n    /********** EXTENSIONS ***********/\n    /*********************************/\n\n    var EXTENSIONS = {\n        KHR_BINARY_GLTF: 'KHR_binary_glTF',\n        KHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\n        KHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\n        KHR_MATERIALS_CLEARCOAT: 'KHR_materials_clearcoat',\n        KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\n        KHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\n        KHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',\n        KHR_MESH_QUANTIZATION: 'KHR_mesh_quantization',\n        MSFT_TEXTURE_DDS: 'MSFT_texture_dds'\n    };\n\n    /**\n     * DDS Texture Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds\n     *\n     */\n    function GLTFTextureDDSExtension(ddsLoader) {\n        if (!ddsLoader) {\n            throw new Error('THREE.GLTFLoader: Attempting to load .dds texture without importing DDSLoader');\n        }\n\n        this.name = EXTENSIONS.MSFT_TEXTURE_DDS;\n        this.ddsLoader = ddsLoader;\n    }\n\n    /**\n     * Punctual Lights Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n     */\n    function GLTFLightsExtension(json) {\n        this.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\n\n        var extension = (json.extensions && json.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL]) || {};\n        this.lightDefs = extension.lights || [];\n    }\n\n    GLTFLightsExtension.prototype.loadLight = function (lightIndex) {\n        var lightDef = this.lightDefs[lightIndex];\n        var lightNode;\n\n        var color = new Color(0xffffff);\n        if (lightDef.color !== undefined) color.fromArray(lightDef.color);\n\n        var range = lightDef.range !== undefined ? lightDef.range : 0;\n\n        switch (lightDef.type) {\n            case 'directional':\n                lightNode = new DirectionalLight(color);\n                lightNode.target.position.set(0, 0, -1);\n                lightNode.add(lightNode.target);\n                break;\n\n            case 'point':\n                lightNode = new PointLight(color);\n                lightNode.distance = range;\n                break;\n\n            case 'spot':\n                lightNode = new SpotLight(color);\n                lightNode.distance = range;\n                // Handle spotlight properties.\n                lightDef.spot = lightDef.spot || {};\n                lightDef.spot.innerConeAngle =\n                    lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\n                lightDef.spot.outerConeAngle =\n                    lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\n                lightNode.angle = lightDef.spot.outerConeAngle;\n                lightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\n                lightNode.target.position.set(0, 0, -1);\n                lightNode.add(lightNode.target);\n                break;\n\n            default:\n                throw new Error('THREE.GLTFLoader: Unexpected light type, \"' + lightDef.type + '\".');\n        }\n\n        // Some lights (e.g. spot) default to a position other than the origin. Reset the position\n        // here, because node-level parsing will only override position if explicitly specified.\n        lightNode.position.set(0, 0, 0);\n\n        lightNode.decay = 2;\n\n        if (lightDef.intensity !== undefined) lightNode.intensity = lightDef.intensity;\n\n        lightNode.name = lightDef.name || 'light_' + lightIndex;\n\n        return Promise.resolve(lightNode);\n    };\n\n    /**\n     * Unlit Materials Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\n     */\n    function GLTFMaterialsUnlitExtension() {\n        this.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\n    }\n\n    GLTFMaterialsUnlitExtension.prototype.getMaterialType = function () {\n        return MeshBasicMaterial;\n    };\n\n    GLTFMaterialsUnlitExtension.prototype.extendParams = function (materialParams, materialDef, parser) {\n        var pending = [];\n\n        materialParams.color = new Color(1.0, 1.0, 1.0);\n        materialParams.opacity = 1.0;\n\n        var metallicRoughness = materialDef.pbrMetallicRoughness;\n\n        if (metallicRoughness) {\n            if (Array.isArray(metallicRoughness.baseColorFactor)) {\n                var array = metallicRoughness.baseColorFactor;\n\n                materialParams.color.fromArray(array);\n                materialParams.opacity = array[3];\n            }\n\n            if (metallicRoughness.baseColorTexture !== undefined) {\n                pending.push(parser.assignTexture(materialParams, 'map', metallicRoughness.baseColorTexture));\n            }\n        }\n\n        return Promise.all(pending);\n    };\n\n    /**\n     * Clearcoat Materials Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_clearcoat\n     */\n    function GLTFMaterialsClearcoatExtension() {\n        this.name = EXTENSIONS.KHR_MATERIALS_CLEARCOAT;\n    }\n\n    GLTFMaterialsClearcoatExtension.prototype.getMaterialType = function () {\n        return MeshPhysicalMaterial;\n    };\n\n    GLTFMaterialsClearcoatExtension.prototype.extendParams = function (materialParams, materialDef, parser) {\n        var pending = [];\n\n        var extension = materialDef.extensions[this.name];\n\n        if (extension.clearcoatFactor !== undefined) {\n            materialParams.clearcoat = extension.clearcoatFactor;\n        }\n\n        if (extension.clearcoatTexture !== undefined) {\n            pending.push(parser.assignTexture(materialParams, 'clearcoatMap', extension.clearcoatTexture));\n        }\n\n        if (extension.clearcoatRoughnessFactor !== undefined) {\n            materialParams.clearcoatRoughness = extension.clearcoatRoughnessFactor;\n        }\n\n        if (extension.clearcoatRoughnessTexture !== undefined) {\n            pending.push(\n                parser.assignTexture(materialParams, 'clearcoatRoughnessMap', extension.clearcoatRoughnessTexture)\n            );\n        }\n\n        if (extension.clearcoatNormalTexture !== undefined) {\n            pending.push(parser.assignTexture(materialParams, 'clearcoatNormalMap', extension.clearcoatNormalTexture));\n\n            if (extension.clearcoatNormalTexture.scale !== undefined) {\n                var scale = extension.clearcoatNormalTexture.scale;\n\n                materialParams.clearcoatNormalScale = new Vector2(scale, scale);\n            }\n        }\n\n        return Promise.all(pending);\n    };\n\n    /* BINARY EXTENSION */\n    var BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\n    var BINARY_EXTENSION_HEADER_LENGTH = 12;\n    var BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4e4f534a, BIN: 0x004e4942 };\n\n    function GLTFBinaryExtension(data) {\n        this.name = EXTENSIONS.KHR_BINARY_GLTF;\n        this.content = null;\n        this.body = null;\n\n        var headerView = new DataView(data, 0, BINARY_EXTENSION_HEADER_LENGTH);\n\n        this.header = {\n            magic: LoaderUtils.decodeText(new Uint8Array(data.slice(0, 4))),\n            version: headerView.getUint32(4, true),\n            length: headerView.getUint32(8, true)\n        };\n\n        if (this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC) {\n            throw new Error('THREE.GLTFLoader: Unsupported glTF-Binary header.');\n        } else if (this.header.version < 2.0) {\n            throw new Error('THREE.GLTFLoader: Legacy binary file detected.');\n        }\n\n        var chunkView = new DataView(data, BINARY_EXTENSION_HEADER_LENGTH);\n        var chunkIndex = 0;\n\n        while (chunkIndex < chunkView.byteLength) {\n            var chunkLength = chunkView.getUint32(chunkIndex, true);\n            chunkIndex += 4;\n\n            var chunkType = chunkView.getUint32(chunkIndex, true);\n            chunkIndex += 4;\n\n            if (chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON) {\n                var contentArray = new Uint8Array(data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength);\n                this.content = LoaderUtils.decodeText(contentArray);\n            } else if (chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN) {\n                var byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n                this.body = data.slice(byteOffset, byteOffset + chunkLength);\n            }\n\n            // Clients must ignore chunks with unknown types.\n\n            chunkIndex += chunkLength;\n        }\n\n        if (this.content === null) {\n            throw new Error('THREE.GLTFLoader: JSON content not found.');\n        }\n    }\n\n    /**\n     * DRACO Mesh Compression Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression\n     */\n    function GLTFDracoMeshCompressionExtension(json, dracoLoader) {\n        if (!dracoLoader) {\n            throw new Error('THREE.GLTFLoader: No DRACOLoader instance provided.');\n        }\n\n        this.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\n        this.json = json;\n        this.dracoLoader = dracoLoader;\n        this.dracoLoader.preload();\n    }\n\n    GLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function (primitive, parser) {\n        var json = this.json;\n        var dracoLoader = this.dracoLoader;\n        var bufferViewIndex = primitive.extensions[this.name].bufferView;\n        var gltfAttributeMap = primitive.extensions[this.name].attributes;\n        var threeAttributeMap = {};\n        var attributeNormalizedMap = {};\n        var attributeTypeMap = {};\n\n        for (var attributeName in gltfAttributeMap) {\n            var threeAttributeName = ATTRIBUTES[attributeName] || attributeName.toLowerCase();\n\n            threeAttributeMap[threeAttributeName] = gltfAttributeMap[attributeName];\n        }\n\n        for (attributeName in primitive.attributes) {\n            var threeAttributeName = ATTRIBUTES[attributeName] || attributeName.toLowerCase();\n\n            if (gltfAttributeMap[attributeName] !== undefined) {\n                var accessorDef = json.accessors[primitive.attributes[attributeName]];\n                var componentType = WEBGL_COMPONENT_TYPES[accessorDef.componentType];\n\n                attributeTypeMap[threeAttributeName] = componentType;\n                attributeNormalizedMap[threeAttributeName] = accessorDef.normalized === true;\n            }\n        }\n\n        return parser.getDependency('bufferView', bufferViewIndex).then(function (bufferView) {\n            return new Promise(function (resolve) {\n                dracoLoader.decodeDracoFile(\n                    bufferView,\n                    function (geometry) {\n                        for (var attributeName in geometry.attributes) {\n                            var attribute = geometry.attributes[attributeName];\n                            var normalized = attributeNormalizedMap[attributeName];\n\n                            if (normalized !== undefined) attribute.normalized = normalized;\n                        }\n\n                        resolve(geometry);\n                    },\n                    threeAttributeMap,\n                    attributeTypeMap\n                );\n            });\n        });\n    };\n\n    /**\n     * Texture Transform Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_transform\n     */\n    function GLTFTextureTransformExtension() {\n        this.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM;\n    }\n\n    GLTFTextureTransformExtension.prototype.extendTexture = function (texture, transform) {\n        texture = texture.clone();\n\n        if (transform.offset !== undefined) {\n            texture.offset.fromArray(transform.offset);\n        }\n\n        if (transform.rotation !== undefined) {\n            texture.rotation = transform.rotation;\n        }\n\n        if (transform.scale !== undefined) {\n            texture.repeat.fromArray(transform.scale);\n        }\n\n        if (transform.texCoord !== undefined) {\n            console.warn('THREE.GLTFLoader: Custom UV sets in \"' + this.name + '\" extension not yet supported.');\n        }\n\n        texture.needsUpdate = true;\n\n        return texture;\n    };\n\n    /**\n     * Specular-Glossiness Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\n     */\n\n    /**\n     * A sub class of StandardMaterial with some of the functionality\n     * changed via the `onBeforeCompile` callback\n     * @pailhead\n     */\n\n    function GLTFMeshStandardSGMaterial(params) {\n        MeshStandardMaterial.call(this);\n\n        this.isGLTFSpecularGlossinessMaterial = true;\n\n        //various chunks that need replacing\n        var specularMapParsFragmentChunk = ['#ifdef USE_SPECULARMAP', '\tuniform sampler2D specularMap;', '#endif'].join(\n            '\\n'\n        );\n\n        var glossinessMapParsFragmentChunk = [\n            '#ifdef USE_GLOSSINESSMAP',\n            '\tuniform sampler2D glossinessMap;',\n            '#endif'\n        ].join('\\n');\n\n        var specularMapFragmentChunk = [\n            'vec3 specularFactor = specular;',\n            '#ifdef USE_SPECULARMAP',\n            '\tvec4 texelSpecular = texture2D( specularMap, vUv );',\n            '\ttexelSpecular = sRGBToLinear( texelSpecular );',\n            '\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\n            '\tspecularFactor *= texelSpecular.rgb;',\n            '#endif'\n        ].join('\\n');\n\n        var glossinessMapFragmentChunk = [\n            'float glossinessFactor = glossiness;',\n            '#ifdef USE_GLOSSINESSMAP',\n            '\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\n            '\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\n            '\tglossinessFactor *= texelGlossiness.a;',\n            '#endif'\n        ].join('\\n');\n\n        var lightPhysicalFragmentChunk = [\n            'PhysicalMaterial material;',\n            'material.diffuseColor = diffuseColor.rgb;',\n            'vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );',\n            'float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );',\n            'material.specularRoughness = max( 1.0 - glossinessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.',\n            'material.specularRoughness += geometryRoughness;',\n            'material.specularRoughness = min( material.specularRoughness, 1.0 );',\n            'material.specularColor = specularFactor.rgb;'\n        ].join('\\n');\n\n        var uniforms = {\n            specular: { value: new Color().setHex(0xffffff) },\n            glossiness: { value: 1 },\n            specularMap: { value: null },\n            glossinessMap: { value: null }\n        };\n\n        this._extraUniforms = uniforms;\n\n        // please see #14031 or #13198 for an alternate approach\n        this.onBeforeCompile = function (shader) {\n            for (var uniformName in uniforms) {\n                shader.uniforms[uniformName] = uniforms[uniformName];\n            }\n\n            shader.fragmentShader = shader.fragmentShader.replace('uniform float roughness;', 'uniform vec3 specular;');\n            shader.fragmentShader = shader.fragmentShader.replace(\n                'uniform float metalness;',\n                'uniform float glossiness;'\n            );\n            shader.fragmentShader = shader.fragmentShader.replace(\n                '#include <roughnessmap_pars_fragment>',\n                specularMapParsFragmentChunk\n            );\n            shader.fragmentShader = shader.fragmentShader.replace(\n                '#include <metalnessmap_pars_fragment>',\n                glossinessMapParsFragmentChunk\n            );\n            shader.fragmentShader = shader.fragmentShader.replace(\n                '#include <roughnessmap_fragment>',\n                specularMapFragmentChunk\n            );\n            shader.fragmentShader = shader.fragmentShader.replace(\n                '#include <metalnessmap_fragment>',\n                glossinessMapFragmentChunk\n            );\n            shader.fragmentShader = shader.fragmentShader.replace(\n                '#include <lights_physical_fragment>',\n                lightPhysicalFragmentChunk\n            );\n        };\n\n        /*eslint-disable*/\n        Object.defineProperties(this, {\n            specular: {\n                get: function () {\n                    return uniforms.specular.value;\n                },\n                set: function (v) {\n                    uniforms.specular.value = v;\n                }\n            },\n            specularMap: {\n                get: function () {\n                    return uniforms.specularMap.value;\n                },\n                set: function (v) {\n                    uniforms.specularMap.value = v;\n                }\n            },\n            glossiness: {\n                get: function () {\n                    return uniforms.glossiness.value;\n                },\n                set: function (v) {\n                    uniforms.glossiness.value = v;\n                }\n            },\n            glossinessMap: {\n                get: function () {\n                    return uniforms.glossinessMap.value;\n                },\n                set: function (v) {\n                    uniforms.glossinessMap.value = v;\n                    //how about something like this - @pailhead\n                    if (v) {\n                        this.defines.USE_GLOSSINESSMAP = '';\n                        // set USE_ROUGHNESSMAP to enable vUv\n                        this.defines.USE_ROUGHNESSMAP = '';\n                    } else {\n                        delete this.defines.USE_ROUGHNESSMAP;\n                        delete this.defines.USE_GLOSSINESSMAP;\n                    }\n                }\n            }\n        });\n\n        /*eslint-enable*/\n        delete this.metalness;\n        delete this.roughness;\n        delete this.metalnessMap;\n        delete this.roughnessMap;\n\n        this.setValues(params);\n    }\n\n    GLTFMeshStandardSGMaterial.prototype = Object.create(MeshStandardMaterial.prototype);\n    GLTFMeshStandardSGMaterial.prototype.constructor = GLTFMeshStandardSGMaterial;\n\n    GLTFMeshStandardSGMaterial.prototype.copy = function (source) {\n        MeshStandardMaterial.prototype.copy.call(this, source);\n        this.specularMap = source.specularMap;\n        this.specular.copy(source.specular);\n        this.glossinessMap = source.glossinessMap;\n        this.glossiness = source.glossiness;\n        delete this.metalness;\n        delete this.roughness;\n        delete this.metalnessMap;\n        delete this.roughnessMap;\n        return this;\n    };\n\n    function GLTFMaterialsPbrSpecularGlossinessExtension() {\n        return {\n            name: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\n\n            specularGlossinessParams: [\n                'color',\n                'map',\n                'lightMap',\n                'lightMapIntensity',\n                'aoMap',\n                'aoMapIntensity',\n                'emissive',\n                'emissiveIntensity',\n                'emissiveMap',\n                'bumpMap',\n                'bumpScale',\n                'normalMap',\n                'normalMapType',\n                'displacementMap',\n                'displacementScale',\n                'displacementBias',\n                'specularMap',\n                'specular',\n                'glossinessMap',\n                'glossiness',\n                'alphaMap',\n                'envMap',\n                'envMapIntensity',\n                'refractionRatio'\n            ],\n\n            getMaterialType: function () {\n                return GLTFMeshStandardSGMaterial;\n            },\n\n            extendParams: function (materialParams, materialDef, parser) {\n                var pbrSpecularGlossiness = materialDef.extensions[this.name];\n\n                materialParams.color = new Color(1.0, 1.0, 1.0);\n                materialParams.opacity = 1.0;\n\n                var pending = [];\n\n                if (Array.isArray(pbrSpecularGlossiness.diffuseFactor)) {\n                    var array = pbrSpecularGlossiness.diffuseFactor;\n\n                    materialParams.color.fromArray(array);\n                    materialParams.opacity = array[3];\n                }\n\n                if (pbrSpecularGlossiness.diffuseTexture !== undefined) {\n                    pending.push(parser.assignTexture(materialParams, 'map', pbrSpecularGlossiness.diffuseTexture));\n                }\n\n                materialParams.emissive = new Color(0.0, 0.0, 0.0);\n                materialParams.glossiness =\n                    pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\n                materialParams.specular = new Color(1.0, 1.0, 1.0);\n\n                if (Array.isArray(pbrSpecularGlossiness.specularFactor)) {\n                    materialParams.specular.fromArray(pbrSpecularGlossiness.specularFactor);\n                }\n\n                if (pbrSpecularGlossiness.specularGlossinessTexture !== undefined) {\n                    var specGlossMapDef = pbrSpecularGlossiness.specularGlossinessTexture;\n                    pending.push(parser.assignTexture(materialParams, 'glossinessMap', specGlossMapDef));\n                    pending.push(parser.assignTexture(materialParams, 'specularMap', specGlossMapDef));\n                }\n\n                return Promise.all(pending);\n            },\n\n            createMaterial: function (materialParams) {\n                var material = new GLTFMeshStandardSGMaterial(materialParams);\n                material.fog = true;\n\n                material.color = materialParams.color;\n\n                material.map = materialParams.map === undefined ? null : materialParams.map;\n\n                material.lightMap = null;\n                material.lightMapIntensity = 1.0;\n\n                material.aoMap = materialParams.aoMap === undefined ? null : materialParams.aoMap;\n                material.aoMapIntensity = 1.0;\n\n                material.emissive = materialParams.emissive;\n                material.emissiveIntensity = 1.0;\n                material.emissiveMap = materialParams.emissiveMap === undefined ? null : materialParams.emissiveMap;\n\n                material.bumpMap = materialParams.bumpMap === undefined ? null : materialParams.bumpMap;\n                material.bumpScale = 1;\n\n                material.normalMap = materialParams.normalMap === undefined ? null : materialParams.normalMap;\n                material.normalMapType = TangentSpaceNormalMap;\n\n                if (materialParams.normalScale) material.normalScale = materialParams.normalScale;\n\n                material.displacementMap = null;\n                material.displacementScale = 1;\n                material.displacementBias = 0;\n\n                material.specularMap = materialParams.specularMap === undefined ? null : materialParams.specularMap;\n                material.specular = materialParams.specular;\n\n                material.glossinessMap =\n                    materialParams.glossinessMap === undefined ? null : materialParams.glossinessMap;\n                material.glossiness = materialParams.glossiness;\n\n                material.alphaMap = null;\n\n                material.envMap = materialParams.envMap === undefined ? null : materialParams.envMap;\n                material.envMapIntensity = 1.0;\n\n                material.refractionRatio = 0.98;\n\n                return material;\n            }\n        };\n    }\n\n    /**\n     * Mesh Quantization Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_mesh_quantization\n     */\n    function GLTFMeshQuantizationExtension() {\n        this.name = EXTENSIONS.KHR_MESH_QUANTIZATION;\n    }\n\n    /*********************************/\n    /********** INTERPOLATION ********/\n    /*********************************/\n\n    // Spline Interpolation\n    // Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\n    function GLTFCubicSplineInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n        Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n    }\n\n    GLTFCubicSplineInterpolant.prototype = Object.create(Interpolant.prototype);\n    GLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant;\n\n    GLTFCubicSplineInterpolant.prototype.copySampleValue_ = function (index) {\n        // Copies a sample value to the result buffer. See description of glTF\n        // CUBICSPLINE values layout in interpolate_() function below.\n\n        var result = this.resultBuffer,\n            values = this.sampleValues,\n            valueSize = this.valueSize,\n            offset = index * valueSize * 3 + valueSize;\n\n        for (var i = 0; i !== valueSize; i++) {\n            result[i] = values[offset + i];\n        }\n\n        return result;\n    };\n\n    GLTFCubicSplineInterpolant.prototype.beforeStart_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n    GLTFCubicSplineInterpolant.prototype.afterEnd_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n    GLTFCubicSplineInterpolant.prototype.interpolate_ = function (i1, t0, t, t1) {\n        var result = this.resultBuffer;\n        var values = this.sampleValues;\n        var stride = this.valueSize;\n\n        var stride2 = stride * 2;\n        var stride3 = stride * 3;\n\n        var td = t1 - t0;\n\n        var p = (t - t0) / td;\n        var pp = p * p;\n        var ppp = pp * p;\n\n        var offset1 = i1 * stride3;\n        var offset0 = offset1 - stride3;\n\n        var s2 = -2 * ppp + 3 * pp;\n        var s3 = ppp - pp;\n        var s0 = 1 - s2;\n        var s1 = s3 - pp + p;\n\n        // Layout of keyframe output values for CUBICSPLINE animations:\n        //   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\n        for (var i = 0; i !== stride; i++) {\n            var p0 = values[offset0 + i + stride]; // splineVertex_k\n            var m0 = values[offset0 + i + stride2] * td; // outTangent_k * (t_k+1 - t_k)\n            var p1 = values[offset1 + i + stride]; // splineVertex_k+1\n            var m1 = values[offset1 + i] * td; // inTangent_k+1 * (t_k+1 - t_k)\n\n            result[i] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\n        }\n\n        return result;\n    };\n\n    /*********************************/\n    /********** INTERNALS ************/\n    /*********************************/\n\n    /* CONSTANTS */\n\n    var WEBGL_CONSTANTS = {\n        FLOAT: 5126,\n        //FLOAT_MAT2: 35674,\n        FLOAT_MAT3: 35675,\n        FLOAT_MAT4: 35676,\n        FLOAT_VEC2: 35664,\n        FLOAT_VEC3: 35665,\n        FLOAT_VEC4: 35666,\n        LINEAR: 9729,\n        REPEAT: 10497,\n        SAMPLER_2D: 35678,\n        POINTS: 0,\n        LINES: 1,\n        LINE_LOOP: 2,\n        LINE_STRIP: 3,\n        TRIANGLES: 4,\n        TRIANGLE_STRIP: 5,\n        TRIANGLE_FAN: 6,\n        UNSIGNED_BYTE: 5121,\n        UNSIGNED_SHORT: 5123\n    };\n\n    var WEBGL_COMPONENT_TYPES = {\n        5120: Int8Array,\n        5121: Uint8Array,\n        5122: Int16Array,\n        5123: Uint16Array,\n        5125: Uint32Array,\n        5126: Float32Array\n    };\n\n    var WEBGL_FILTERS = {\n        9728: NearestFilter,\n        9729: LinearFilter,\n        9984: NearestMipmapNearestFilter,\n        9985: LinearMipmapNearestFilter,\n        9986: NearestMipmapLinearFilter,\n        9987: LinearMipmapLinearFilter\n    };\n\n    var WEBGL_WRAPPINGS = {\n        33071: ClampToEdgeWrapping,\n        33648: MirroredRepeatWrapping,\n        10497: RepeatWrapping\n    };\n\n    var WEBGL_TYPE_SIZES = {\n        SCALAR: 1,\n        VEC2: 2,\n        VEC3: 3,\n        VEC4: 4,\n        MAT2: 4,\n        MAT3: 9,\n        MAT4: 16\n    };\n\n    var ATTRIBUTES = {\n        POSITION: 'position',\n        NORMAL: 'normal',\n        TANGENT: 'tangent',\n        TEXCOORD_0: 'uv',\n        TEXCOORD_1: 'uv2',\n        COLOR_0: 'color',\n        WEIGHTS_0: 'skinWeight',\n        JOINTS_0: 'skinIndex'\n    };\n\n    var PATH_PROPERTIES = {\n        scale: 'scale',\n        translation: 'position',\n        rotation: 'quaternion',\n        weights: 'morphTargetInfluences'\n    };\n\n    var INTERPOLATION = {\n        CUBICSPLINE: undefined, // We use a custom interpolant (GLTFCubicSplineInterpolation) for CUBICSPLINE tracks. Each\n        // keyframe track will be initialized with a default interpolation type, then modified.\n        LINEAR: InterpolateLinear,\n        STEP: InterpolateDiscrete\n    };\n\n    var ALPHA_MODES = {\n        OPAQUE: 'OPAQUE',\n        MASK: 'MASK',\n        BLEND: 'BLEND'\n    };\n\n    var MIME_TYPE_FORMATS = {\n        'image/png': RGBAFormat,\n        'image/jpeg': RGBFormat\n    };\n\n    /* UTILITY FUNCTIONS */\n\n    function resolveURL(url, path) {\n        // Invalid URL\n        if (typeof url !== 'string' || url === '') return '';\n\n        // Host Relative URL\n        if (/^https?:\\/\\//i.test(path) && /^\\//.test(url)) {\n            // eslint-disable-next-line no-useless-escape\n            path = path.replace(/(^https?:\\/\\/[^\\/]+).*/i, '$1');\n        }\n\n        // Absolute URL http://,https://,//\n        if (/^(https?:)?\\/\\//i.test(url)) return url;\n\n        // Data URI\n        if (/^data:.*,.*$/i.test(url)) return url;\n\n        // Blob URL\n        if (/^blob:.*$/i.test(url)) return url;\n\n        // Relative URL\n        return path + url;\n    }\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\n     */\n    function createDefaultMaterial(cache) {\n        if (cache['DefaultMaterial'] === undefined) {\n            cache['DefaultMaterial'] = new MeshStandardMaterial({\n                color: 0xffffff,\n                emissive: 0x000000,\n                metalness: 1,\n                roughness: 1,\n                transparent: false,\n                depthTest: true,\n                side: FrontSide\n            });\n        }\n\n        return cache['DefaultMaterial'];\n    }\n\n    function addUnknownExtensionsToUserData(knownExtensions, object, objectDef) {\n        // Add unknown glTF extensions to an object's userData.\n\n        for (var name in objectDef.extensions) {\n            if (knownExtensions[name] === undefined) {\n                object.userData.gltfExtensions = object.userData.gltfExtensions || {};\n                object.userData.gltfExtensions[name] = objectDef.extensions[name];\n            }\n        }\n    }\n\n    /**\n     * @param {Object3D|Material|BufferGeometry} object\n     * @param {GLTF.definition} gltfDef\n     */\n    function assignExtrasToUserData(object, gltfDef) {\n        if (gltfDef.extras !== undefined) {\n            if (typeof gltfDef.extras === 'object') {\n                Object.assign(object.userData, gltfDef.extras);\n            } else {\n                console.warn('THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras);\n            }\n        }\n    }\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\n     *\n     * @param {BufferGeometry} geometry\n     * @param {Array<GLTF.Target>} targets\n     * @param {GLTFParser} parser\n     * @return {Promise<BufferGeometry>}\n     */\n    function addMorphTargets(geometry, targets, parser) {\n        var hasMorphPosition = false;\n        var hasMorphNormal = false;\n\n        for (var i = 0, il = targets.length; i < il; i++) {\n            var target = targets[i];\n\n            if (target.POSITION !== undefined) hasMorphPosition = true;\n            if (target.NORMAL !== undefined) hasMorphNormal = true;\n\n            if (hasMorphPosition && hasMorphNormal) break;\n        }\n\n        if (!hasMorphPosition && !hasMorphNormal) return Promise.resolve(geometry);\n\n        var pendingPositionAccessors = [];\n        var pendingNormalAccessors = [];\n\n        for (var i = 0, il = targets.length; i < il; i++) {\n            var target = targets[i];\n\n            if (hasMorphPosition) {\n                var pendingAccessor =\n                    target.POSITION !== undefined\n                        ? parser.getDependency('accessor', target.POSITION)\n                        : geometry.attributes.position;\n\n                pendingPositionAccessors.push(pendingAccessor);\n            }\n\n            if (hasMorphNormal) {\n                var pendingAccessor =\n                    target.NORMAL !== undefined\n                        ? parser.getDependency('accessor', target.NORMAL)\n                        : geometry.attributes.normal;\n\n                pendingNormalAccessors.push(pendingAccessor);\n            }\n        }\n\n        return Promise.all([Promise.all(pendingPositionAccessors), Promise.all(pendingNormalAccessors)]).then(function (\n            accessors\n        ) {\n            var morphPositions = accessors[0];\n            var morphNormals = accessors[1];\n\n            if (hasMorphPosition) geometry.morphAttributes.position = morphPositions;\n            if (hasMorphNormal) geometry.morphAttributes.normal = morphNormals;\n            geometry.morphTargetsRelative = true;\n\n            return geometry;\n        });\n    }\n\n    /**\n     * @param {Mesh} mesh\n     * @param {GLTF.Mesh} meshDef\n     */\n    function updateMorphTargets(mesh, meshDef) {\n        mesh.updateMorphTargets();\n\n        if (meshDef.weights !== undefined) {\n            for (var i = 0, il = meshDef.weights.length; i < il; i++) {\n                mesh.morphTargetInfluences[i] = meshDef.weights[i];\n            }\n        }\n\n        // .extras has user-defined data, so check that .extras.targetNames is an array.\n        if (meshDef.extras && Array.isArray(meshDef.extras.targetNames)) {\n            var targetNames = meshDef.extras.targetNames;\n\n            if (mesh.morphTargetInfluences.length === targetNames.length) {\n                mesh.morphTargetDictionary = {};\n\n                for (var i = 0, il = targetNames.length; i < il; i++) {\n                    mesh.morphTargetDictionary[targetNames[i]] = i;\n                }\n            } else {\n                console.warn('THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.');\n            }\n        }\n    }\n\n    function createPrimitiveKey(primitiveDef) {\n        var dracoExtension = primitiveDef.extensions && primitiveDef.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION];\n        var geometryKey;\n\n        if (dracoExtension) {\n            geometryKey =\n                'draco:' +\n                dracoExtension.bufferView +\n                ':' +\n                dracoExtension.indices +\n                ':' +\n                createAttributesKey(dracoExtension.attributes);\n        } else {\n            geometryKey =\n                primitiveDef.indices + ':' + createAttributesKey(primitiveDef.attributes) + ':' + primitiveDef.mode;\n        }\n\n        return geometryKey;\n    }\n\n    function createAttributesKey(attributes) {\n        var attributesKey = '';\n\n        var keys = Object.keys(attributes).sort();\n\n        for (var i = 0, il = keys.length; i < il; i++) {\n            attributesKey += keys[i] + ':' + attributes[keys[i]] + ';';\n        }\n\n        return attributesKey;\n    }\n\n    /* GLTF PARSER */\n\n    function GLTFParser(json, extensions, options) {\n        this.json = json || {};\n        this.extensions = extensions || {};\n        this.options = options || {};\n\n        // loader object cache\n        this.cache = new GLTFRegistry();\n\n        // BufferGeometry caching\n        this.primitiveCache = {};\n\n        this.textureLoader = new TextureLoader(this.options.manager);\n        this.textureLoader.setCrossOrigin(this.options.crossOrigin);\n\n        this.fileLoader = new FileLoader(this.options.manager);\n        this.fileLoader.setResponseType('arraybuffer');\n\n        if (this.options.crossOrigin === 'use-credentials') {\n            this.fileLoader.setWithCredentials(true);\n        }\n    }\n\n    GLTFParser.prototype.parse = function (onLoad, onError) {\n        var parser = this;\n        var json = this.json;\n        var extensions = this.extensions;\n\n        // Clear the loader cache\n        this.cache.removeAll();\n\n        // Mark the special nodes/meshes in json for efficient parse\n        this.markDefs();\n\n        Promise.all([this.getDependencies('scene'), this.getDependencies('animation'), this.getDependencies('camera')])\n            .then(function (dependencies) {\n                var result = {\n                    scene: dependencies[0][json.scene || 0],\n                    scenes: dependencies[0],\n                    animations: dependencies[1],\n                    cameras: dependencies[2],\n                    asset: json.asset,\n                    parser: parser,\n                    userData: {}\n                };\n\n                addUnknownExtensionsToUserData(extensions, result, json);\n\n                assignExtrasToUserData(result, json);\n\n                onLoad(result);\n            })\n            .catch(onError);\n    };\n\n    /**\n     * Marks the special nodes/meshes in json for efficient parse.\n     */\n    GLTFParser.prototype.markDefs = function () {\n        var nodeDefs = this.json.nodes || [];\n        var skinDefs = this.json.skins || [];\n        var meshDefs = this.json.meshes || [];\n\n        var meshReferences = {};\n        var meshUses = {};\n\n        // Nothing in the node definition indicates whether it is a Bone or an\n        // Object3D. Use the skins' joint references to mark bones.\n        for (var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex++) {\n            var joints = skinDefs[skinIndex].joints;\n\n            for (var i = 0, il = joints.length; i < il; i++) {\n                nodeDefs[joints[i]].isBone = true;\n            }\n        }\n\n        // Meshes can (and should) be reused by multiple nodes in a glTF asset. To\n        // avoid having more than one Mesh with the same name, count\n        // references and rename instances below.\n        //\n        // Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n        for (var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex++) {\n            var nodeDef = nodeDefs[nodeIndex];\n\n            if (nodeDef.mesh !== undefined) {\n                if (meshReferences[nodeDef.mesh] === undefined) {\n                    meshReferences[nodeDef.mesh] = meshUses[nodeDef.mesh] = 0;\n                }\n\n                meshReferences[nodeDef.mesh]++;\n\n                // Nothing in the mesh definition indicates whether it is\n                // a SkinnedMesh or Mesh. Use the node's mesh reference\n                // to mark SkinnedMesh if node has skin.\n                if (nodeDef.skin !== undefined) {\n                    meshDefs[nodeDef.mesh].isSkinnedMesh = true;\n                }\n            }\n        }\n\n        this.json.meshReferences = meshReferences;\n        this.json.meshUses = meshUses;\n    };\n\n    /**\n     * Requests the specified dependency asynchronously, with caching.\n     * @param {string} type\n     * @param {number} index\n     * @return {Promise<Object3D|Material|THREE.Texture|AnimationClip|ArrayBuffer|Object>}\n     */\n    GLTFParser.prototype.getDependency = function (type, index) {\n        var cacheKey = type + ':' + index;\n        var dependency = this.cache.get(cacheKey);\n\n        if (!dependency) {\n            switch (type) {\n                case 'scene':\n                    dependency = this.loadScene(index);\n                    break;\n\n                case 'node':\n                    dependency = this.loadNode(index);\n                    break;\n\n                case 'mesh':\n                    dependency = this.loadMesh(index);\n                    break;\n\n                case 'accessor':\n                    dependency = this.loadAccessor(index);\n                    break;\n\n                case 'bufferView':\n                    dependency = this.loadBufferView(index);\n                    break;\n\n                case 'buffer':\n                    dependency = this.loadBuffer(index);\n                    break;\n\n                case 'material':\n                    dependency = this.loadMaterial(index);\n                    break;\n\n                case 'texture':\n                    dependency = this.loadTexture(index);\n                    break;\n\n                case 'skin':\n                    dependency = this.loadSkin(index);\n                    break;\n\n                case 'animation':\n                    dependency = this.loadAnimation(index);\n                    break;\n\n                case 'camera':\n                    dependency = this.loadCamera(index);\n                    break;\n\n                case 'light':\n                    dependency = this.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].loadLight(index);\n                    break;\n\n                default:\n                    throw new Error('Unknown type: ' + type);\n            }\n\n            this.cache.add(cacheKey, dependency);\n        }\n\n        return dependency;\n    };\n\n    /**\n     * Requests all dependencies of the specified type asynchronously, with caching.\n     * @param {string} type\n     * @return {Promise<Array<Object>>}\n     */\n    GLTFParser.prototype.getDependencies = function (type) {\n        var dependencies = this.cache.get(type);\n\n        if (!dependencies) {\n            var parser = this;\n            var defs = this.json[type + (type === 'mesh' ? 'es' : 's')] || [];\n\n            dependencies = Promise.all(\n                defs.map(function (def, index) {\n                    return parser.getDependency(type, index);\n                })\n            );\n\n            this.cache.add(type, dependencies);\n        }\n\n        return dependencies;\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n     * @param {number} bufferIndex\n     * @return {Promise<ArrayBuffer>}\n     */\n    GLTFParser.prototype.loadBuffer = function (bufferIndex) {\n        var bufferDef = this.json.buffers[bufferIndex];\n        var loader = this.fileLoader;\n\n        if (bufferDef.type && bufferDef.type !== 'arraybuffer') {\n            throw new Error('THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.');\n        }\n\n        // If present, GLB container is required to be the first buffer.\n        if (bufferDef.uri === undefined && bufferIndex === 0) {\n            return Promise.resolve(this.extensions[EXTENSIONS.KHR_BINARY_GLTF].body);\n        }\n\n        var options = this.options;\n\n        return new Promise(function (resolve, reject) {\n            loader.load(resolveURL(bufferDef.uri, options.path), resolve, undefined, function () {\n                reject(new Error('THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".'));\n            });\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n     * @param {number} bufferViewIndex\n     * @return {Promise<ArrayBuffer>}\n     */\n    GLTFParser.prototype.loadBufferView = function (bufferViewIndex) {\n        var bufferViewDef = this.json.bufferViews[bufferViewIndex];\n\n        return this.getDependency('buffer', bufferViewDef.buffer).then(function (buffer) {\n            var byteLength = bufferViewDef.byteLength || 0;\n            var byteOffset = bufferViewDef.byteOffset || 0;\n            return buffer.slice(byteOffset, byteOffset + byteLength);\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\n     * @param {number} accessorIndex\n     * @return {Promise<BufferAttribute|InterleavedBufferAttribute>}\n     */\n    GLTFParser.prototype.loadAccessor = function (accessorIndex) {\n        var parser = this;\n        var json = this.json;\n\n        var accessorDef = this.json.accessors[accessorIndex];\n\n        if (accessorDef.bufferView === undefined && accessorDef.sparse === undefined) {\n            // Ignore empty accessors, which may be used to declare runtime\n            // information about attributes coming from another source (e.g. Draco\n            // compression extension).\n            return Promise.resolve(null);\n        }\n\n        var pendingBufferViews = [];\n\n        if (accessorDef.bufferView !== undefined) {\n            pendingBufferViews.push(this.getDependency('bufferView', accessorDef.bufferView));\n        } else {\n            pendingBufferViews.push(null);\n        }\n\n        if (accessorDef.sparse !== undefined) {\n            pendingBufferViews.push(this.getDependency('bufferView', accessorDef.sparse.indices.bufferView));\n            pendingBufferViews.push(this.getDependency('bufferView', accessorDef.sparse.values.bufferView));\n        }\n\n        return Promise.all(pendingBufferViews).then(function (bufferViews) {\n            var bufferView = bufferViews[0];\n\n            var itemSize = WEBGL_TYPE_SIZES[accessorDef.type];\n            var TypedArray = WEBGL_COMPONENT_TYPES[accessorDef.componentType];\n\n            // For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n            var elementBytes = TypedArray.BYTES_PER_ELEMENT;\n            var itemBytes = elementBytes * itemSize;\n            var byteOffset = accessorDef.byteOffset || 0;\n            var byteStride =\n                accessorDef.bufferView !== undefined ? json.bufferViews[accessorDef.bufferView].byteStride : undefined;\n            var normalized = accessorDef.normalized === true;\n            var array, bufferAttribute;\n\n            // The buffer is not interleaved if the stride is the item size in bytes.\n            if (byteStride && byteStride !== itemBytes) {\n                // Each \"slice\" of the buffer, as defined by 'count' elements of 'byteStride' bytes, gets its own InterleavedBuffer\n                // This makes sure that IBA.count reflects accessor.count properly\n                var ibSlice = Math.floor(byteOffset / byteStride);\n                var ibCacheKey =\n                    'InterleavedBuffer:' +\n                    accessorDef.bufferView +\n                    ':' +\n                    accessorDef.componentType +\n                    ':' +\n                    ibSlice +\n                    ':' +\n                    accessorDef.count;\n                var ib = parser.cache.get(ibCacheKey);\n\n                if (!ib) {\n                    array = new TypedArray(\n                        bufferView,\n                        ibSlice * byteStride,\n                        (accessorDef.count * byteStride) / elementBytes\n                    );\n\n                    // Integer parameters to IB/IBA are in array elements, not bytes.\n                    ib = new InterleavedBuffer(array, byteStride / elementBytes);\n\n                    parser.cache.add(ibCacheKey, ib);\n                }\n\n                bufferAttribute = new InterleavedBufferAttribute(\n                    ib,\n                    itemSize,\n                    (byteOffset % byteStride) / elementBytes,\n                    normalized\n                );\n            } else {\n                if (bufferView === null) {\n                    array = new TypedArray(accessorDef.count * itemSize);\n                } else {\n                    array = new TypedArray(bufferView, byteOffset, accessorDef.count * itemSize);\n                }\n\n                bufferAttribute = new BufferAttribute(array, itemSize, normalized);\n            }\n\n            // https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n            if (accessorDef.sparse !== undefined) {\n                var itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\n                var TypedArrayIndices = WEBGL_COMPONENT_TYPES[accessorDef.sparse.indices.componentType];\n\n                var byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\n                var byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\n\n                var sparseIndices = new TypedArrayIndices(\n                    bufferViews[1],\n                    byteOffsetIndices,\n                    accessorDef.sparse.count * itemSizeIndices\n                );\n                var sparseValues = new TypedArray(\n                    bufferViews[2],\n                    byteOffsetValues,\n                    accessorDef.sparse.count * itemSize\n                );\n\n                if (bufferView !== null) {\n                    // Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n                    bufferAttribute = new BufferAttribute(\n                        bufferAttribute.array.slice(),\n                        bufferAttribute.itemSize,\n                        bufferAttribute.normalized\n                    );\n                }\n\n                for (var i = 0, il = sparseIndices.length; i < il; i++) {\n                    var index = sparseIndices[i];\n\n                    bufferAttribute.setX(index, sparseValues[i * itemSize]);\n                    if (itemSize >= 2) bufferAttribute.setY(index, sparseValues[i * itemSize + 1]);\n                    if (itemSize >= 3) bufferAttribute.setZ(index, sparseValues[i * itemSize + 2]);\n                    if (itemSize >= 4) bufferAttribute.setW(index, sparseValues[i * itemSize + 3]);\n                    if (itemSize >= 5)\n                        throw new Error('THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.');\n                }\n            }\n\n            return bufferAttribute;\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\n     * @param {number} textureIndex\n     * @return {Promise<THREE.Texture>}\n     */\n    GLTFParser.prototype.loadTexture = function (textureIndex) {\n        var parser = this;\n        var json = this.json;\n        var options = this.options;\n        var textureLoader = this.textureLoader;\n\n        var URL = self.URL || self.webkitURL;\n\n        var textureDef = json.textures[textureIndex];\n\n        var textureExtensions = textureDef.extensions || {};\n\n        var source;\n\n        if (textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS]) {\n            source = json.images[textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS].source];\n        } else {\n            source = json.images[textureDef.source];\n        }\n\n        var sourceURI = source.uri;\n        var isObjectURL = false;\n\n        if (source.bufferView !== undefined) {\n            // Load binary image data from bufferView, if provided.\n\n            sourceURI = parser.getDependency('bufferView', source.bufferView).then(function (bufferView) {\n                isObjectURL = true;\n                var blob = new Blob([bufferView], { type: source.mimeType });\n                sourceURI = URL.createObjectURL(blob);\n                return sourceURI;\n            });\n        }\n\n        return Promise.resolve(sourceURI)\n            .then(function (sourceURI) {\n                // Load Texture resource.\n\n                var loader = options.manager.getHandler(sourceURI);\n\n                if (!loader) {\n                    loader = textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS]\n                        ? parser.extensions[EXTENSIONS.MSFT_TEXTURE_DDS].ddsLoader\n                        : textureLoader;\n                }\n\n                return new Promise(function (resolve, reject) {\n                    loader.load(resolveURL(sourceURI, options.path), resolve, undefined, reject);\n                });\n            })\n            .then(function (texture) {\n                // Clean up resources and configure Texture.\n\n                if (isObjectURL === true) {\n                    URL.revokeObjectURL(sourceURI);\n                }\n\n                texture.flipY = false;\n\n                if (textureDef.name) texture.name = textureDef.name;\n\n                // Ignore unknown mime types, like DDS files.\n                if (source.mimeType in MIME_TYPE_FORMATS) {\n                    texture.format = MIME_TYPE_FORMATS[source.mimeType];\n                }\n\n                var samplers = json.samplers || {};\n                var sampler = samplers[textureDef.sampler] || {};\n\n                texture.magFilter = WEBGL_FILTERS[sampler.magFilter] || LinearFilter;\n                texture.minFilter = WEBGL_FILTERS[sampler.minFilter] || LinearMipmapLinearFilter;\n                texture.wrapS = WEBGL_WRAPPINGS[sampler.wrapS] || RepeatWrapping;\n                texture.wrapT = WEBGL_WRAPPINGS[sampler.wrapT] || RepeatWrapping;\n\n                return texture;\n            });\n    };\n\n    /**\n     * Asynchronously assigns a texture to the given material parameters.\n     * @param {Object} materialParams\n     * @param {string} mapName\n     * @param {Object} mapDef\n     * @return {Promise}\n     */\n    GLTFParser.prototype.assignTexture = function (materialParams, mapName, mapDef) {\n        var parser = this;\n\n        return this.getDependency('texture', mapDef.index).then(function (texture) {\n            if (!texture.isCompressedTexture) {\n                switch (mapName) {\n                    case 'aoMap':\n                    case 'emissiveMap':\n                    case 'metalnessMap':\n                    case 'normalMap':\n                    case 'roughnessMap':\n                        texture.format = RGBFormat;\n                        break;\n                }\n            }\n\n            // Materials sample aoMap from UV set 1 and other maps from UV set 0 - this can't be configured\n            // However, we will copy UV set 0 to UV set 1 on demand for aoMap\n            if (\n                mapDef.texCoord !== undefined &&\n                mapDef.texCoord != 0 &&\n                !(mapName === 'aoMap' && mapDef.texCoord == 1)\n            ) {\n                console.warn(\n                    'THREE.GLTFLoader: Custom UV set ' +\n                        mapDef.texCoord +\n                        ' for texture ' +\n                        mapName +\n                        ' not yet supported.'\n                );\n            }\n\n            if (parser.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM]) {\n                var transform =\n                    mapDef.extensions !== undefined ? mapDef.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM] : undefined;\n\n                if (transform) {\n                    texture = parser.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM].extendTexture(texture, transform);\n                }\n            }\n\n            materialParams[mapName] = texture;\n        });\n    };\n\n    /**\n     * Assigns final material to a Mesh, Line, or Points instance. The instance\n     * already has a material (generated from the glTF material options alone)\n     * but reuse of the same glTF material may require multiple threejs materials\n     * to accomodate different primitive types, defines, etc. New materials will\n     * be created if necessary, and reused from a cache.\n     * @param  {Object3D} mesh Mesh, Line, or Points instance.\n     */\n    GLTFParser.prototype.assignFinalMaterial = function (mesh) {\n        var geometry = mesh.geometry;\n        var material = mesh.material;\n\n        var useVertexTangents = geometry.attributes.tangent !== undefined;\n        var useVertexColors = geometry.attributes.color !== undefined;\n        var useFlatShading = geometry.attributes.normal === undefined;\n        var useSkinning = mesh.isSkinnedMesh === true;\n        var useMorphTargets = Object.keys(geometry.morphAttributes).length > 0;\n        var useMorphNormals = useMorphTargets && geometry.morphAttributes.normal !== undefined;\n\n        if (mesh.isPoints) {\n            var cacheKey = 'PointsMaterial:' + material.uuid;\n\n            var pointsMaterial = this.cache.get(cacheKey);\n\n            if (!pointsMaterial) {\n                pointsMaterial = new PointsMaterial();\n                Material.prototype.copy.call(pointsMaterial, material);\n                pointsMaterial.color.copy(material.color);\n                pointsMaterial.map = material.map;\n                pointsMaterial.sizeAttenuation = false; // glTF spec says points should be 1px\n\n                this.cache.add(cacheKey, pointsMaterial);\n            }\n\n            material = pointsMaterial;\n        } else if (mesh.isLine) {\n            var cacheKey = 'LineBasicMaterial:' + material.uuid;\n\n            var lineMaterial = this.cache.get(cacheKey);\n\n            if (!lineMaterial) {\n                lineMaterial = new LineBasicMaterial();\n                Material.prototype.copy.call(lineMaterial, material);\n                lineMaterial.color.copy(material.color);\n\n                this.cache.add(cacheKey, lineMaterial);\n            }\n\n            material = lineMaterial;\n        }\n\n        // Clone the material if it will be modified\n        if (useVertexTangents || useVertexColors || useFlatShading || useSkinning || useMorphTargets) {\n            var cacheKey = 'ClonedMaterial:' + material.uuid + ':';\n\n            if (material.isGLTFSpecularGlossinessMaterial) cacheKey += 'specular-glossiness:';\n            if (useSkinning) cacheKey += 'skinning:';\n            if (useVertexTangents) cacheKey += 'vertex-tangents:';\n            if (useVertexColors) cacheKey += 'vertex-colors:';\n            if (useFlatShading) cacheKey += 'flat-shading:';\n            if (useMorphTargets) cacheKey += 'morph-targets:';\n            if (useMorphNormals) cacheKey += 'morph-normals:';\n\n            var cachedMaterial = this.cache.get(cacheKey);\n\n            if (!cachedMaterial) {\n                cachedMaterial = material.clone();\n\n                if (useSkinning) cachedMaterial.skinning = true;\n                if (useVertexTangents) cachedMaterial.vertexTangents = true;\n                if (useVertexColors) cachedMaterial.vertexColors = true;\n                if (useFlatShading) cachedMaterial.flatShading = true;\n                if (useMorphTargets) cachedMaterial.morphTargets = true;\n                if (useMorphNormals) cachedMaterial.morphNormals = true;\n\n                this.cache.add(cacheKey, cachedMaterial);\n            }\n\n            material = cachedMaterial;\n        }\n\n        // workarounds for mesh and geometry\n\n        if (material.aoMap && geometry.attributes.uv2 === undefined && geometry.attributes.uv !== undefined) {\n            geometry.setAttribute('uv2', geometry.attributes.uv);\n        }\n\n        // https://github.com/mrdoob/three.js/issues/11438#issuecomment-507003995\n        if (material.normalScale && !useVertexTangents) {\n            material.normalScale.y = -material.normalScale.y;\n        }\n\n        if (material.clearcoatNormalScale && !useVertexTangents) {\n            material.clearcoatNormalScale.y = -material.clearcoatNormalScale.y;\n        }\n\n        mesh.material = material;\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\n     * @param {number} materialIndex\n     * @return {Promise<Material>}\n     */\n    GLTFParser.prototype.loadMaterial = function (materialIndex) {\n        var parser = this;\n        var json = this.json;\n        var extensions = this.extensions;\n        var materialDef = json.materials[materialIndex];\n\n        var materialType;\n        var materialParams = {};\n        var materialExtensions = materialDef.extensions || {};\n\n        var pending = [];\n\n        if (materialExtensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS]) {\n            var sgExtension = extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS];\n            materialType = sgExtension.getMaterialType();\n            pending.push(sgExtension.extendParams(materialParams, materialDef, parser));\n        } else if (materialExtensions[EXTENSIONS.KHR_MATERIALS_UNLIT]) {\n            var kmuExtension = extensions[EXTENSIONS.KHR_MATERIALS_UNLIT];\n            materialType = kmuExtension.getMaterialType();\n            pending.push(kmuExtension.extendParams(materialParams, materialDef, parser));\n        } else {\n            // Specification:\n            // https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n\n            materialType = MeshStandardMaterial;\n\n            var metallicRoughness = materialDef.pbrMetallicRoughness || {};\n\n            materialParams.color = new Color(1.0, 1.0, 1.0);\n            materialParams.opacity = 1.0;\n\n            if (Array.isArray(metallicRoughness.baseColorFactor)) {\n                var array = metallicRoughness.baseColorFactor;\n\n                materialParams.color.fromArray(array);\n                materialParams.opacity = array[3];\n            }\n\n            if (metallicRoughness.baseColorTexture !== undefined) {\n                pending.push(parser.assignTexture(materialParams, 'map', metallicRoughness.baseColorTexture));\n            }\n\n            materialParams.metalness =\n                metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\n            materialParams.roughness =\n                metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\n\n            if (metallicRoughness.metallicRoughnessTexture !== undefined) {\n                pending.push(\n                    parser.assignTexture(materialParams, 'metalnessMap', metallicRoughness.metallicRoughnessTexture)\n                );\n                pending.push(\n                    parser.assignTexture(materialParams, 'roughnessMap', metallicRoughness.metallicRoughnessTexture)\n                );\n            }\n        }\n\n        if (materialDef.doubleSided === true) {\n            materialParams.side = DoubleSide;\n        }\n\n        var alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\n\n        if (alphaMode === ALPHA_MODES.BLEND) {\n            materialParams.transparent = true;\n\n            // See: https://github.com/mrdoob/three.js/issues/17706\n            materialParams.depthWrite = false;\n        } else {\n            materialParams.transparent = false;\n\n            if (alphaMode === ALPHA_MODES.MASK) {\n                materialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\n            }\n        }\n\n        if (materialDef.normalTexture !== undefined && materialType !== MeshBasicMaterial) {\n            pending.push(parser.assignTexture(materialParams, 'normalMap', materialDef.normalTexture));\n\n            materialParams.normalScale = new Vector2(1, 1);\n\n            if (materialDef.normalTexture.scale !== undefined) {\n                materialParams.normalScale.set(materialDef.normalTexture.scale, materialDef.normalTexture.scale);\n            }\n        }\n\n        if (materialDef.occlusionTexture !== undefined && materialType !== MeshBasicMaterial) {\n            pending.push(parser.assignTexture(materialParams, 'aoMap', materialDef.occlusionTexture));\n\n            if (materialDef.occlusionTexture.strength !== undefined) {\n                materialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\n            }\n        }\n\n        if (materialDef.emissiveFactor !== undefined && materialType !== MeshBasicMaterial) {\n            materialParams.emissive = new Color().fromArray(materialDef.emissiveFactor);\n        }\n\n        if (materialDef.emissiveTexture !== undefined && materialType !== MeshBasicMaterial) {\n            pending.push(parser.assignTexture(materialParams, 'emissiveMap', materialDef.emissiveTexture));\n        }\n\n        if (materialExtensions[EXTENSIONS.KHR_MATERIALS_CLEARCOAT]) {\n            var clearcoatExtension = extensions[EXTENSIONS.KHR_MATERIALS_CLEARCOAT];\n            materialType = clearcoatExtension.getMaterialType();\n            pending.push(clearcoatExtension.extendParams(materialParams, { extensions: materialExtensions }, parser));\n        }\n\n        return Promise.all(pending).then(function () {\n            var material;\n\n            if (materialType === GLTFMeshStandardSGMaterial) {\n                material = extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].createMaterial(materialParams);\n            } else {\n                material = new materialType(materialParams);\n            }\n\n            if (materialDef.name) material.name = materialDef.name;\n\n            // baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\n            if (material.map) material.map.encoding = sRGBEncoding;\n            if (material.emissiveMap) material.emissiveMap.encoding = sRGBEncoding;\n\n            assignExtrasToUserData(material, materialDef);\n\n            if (materialDef.extensions) addUnknownExtensionsToUserData(extensions, material, materialDef);\n\n            return material;\n        });\n    };\n\n    /**\n     * @param {BufferGeometry} geometry\n     * @param {GLTF.Primitive} primitiveDef\n     * @param {GLTFParser} parser\n     */\n    function computeBounds(geometry, primitiveDef, parser) {\n        var attributes = primitiveDef.attributes;\n\n        var box = new Box3();\n\n        if (attributes.POSITION !== undefined) {\n            var accessor = parser.json.accessors[attributes.POSITION];\n\n            var min = accessor.min;\n            var max = accessor.max;\n\n            // glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n            if (min !== undefined && max !== undefined) {\n                box.set(new Vector3(min[0], min[1], min[2]), new Vector3(max[0], max[1], max[2]));\n            } else {\n                console.warn('THREE.GLTFLoader: Missing min/max properties for accessor POSITION.');\n\n                return;\n            }\n        } else {\n            return;\n        }\n\n        var targets = primitiveDef.targets;\n\n        if (targets !== undefined) {\n            var maxDisplacement = new Vector3();\n            var vector = new Vector3();\n\n            for (var i = 0, il = targets.length; i < il; i++) {\n                var target = targets[i];\n\n                if (target.POSITION !== undefined) {\n                    var accessor = parser.json.accessors[target.POSITION];\n                    var min = accessor.min;\n                    var max = accessor.max;\n\n                    // glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n                    if (min !== undefined && max !== undefined) {\n                        // we need to get max of absolute components because target weight is [-1,1]\n                        vector.setX(Math.max(Math.abs(min[0]), Math.abs(max[0])));\n                        vector.setY(Math.max(Math.abs(min[1]), Math.abs(max[1])));\n                        vector.setZ(Math.max(Math.abs(min[2]), Math.abs(max[2])));\n\n                        // Note: this assumes that the sum of all weights is at most 1. This isn't quite correct - it's more conservative\n                        // to assume that each target can have a max weight of 1. However, for some use cases - notably, when morph targets\n                        // are used to implement key-frame animations and as such only two are active at a time - this results in very large\n                        // boxes. So for now we make a box that's sometimes a touch too small but is hopefully mostly of reasonable size.\n                        maxDisplacement.max(vector);\n                    } else {\n                        console.warn('THREE.GLTFLoader: Missing min/max properties for accessor POSITION.');\n                    }\n                }\n            }\n\n            // As per comment above this box isn't conservative, but has a reasonable size for a very large number of morph targets.\n            box.expandByVector(maxDisplacement);\n        }\n\n        geometry.boundingBox = box;\n\n        var sphere = new Sphere();\n\n        box.getCenter(sphere.center);\n        sphere.radius = box.min.distanceTo(box.max) / 2;\n\n        geometry.boundingSphere = sphere;\n    }\n\n    /**\n     * @param {BufferGeometry} geometry\n     * @param {GLTF.Primitive} primitiveDef\n     * @param {GLTFParser} parser\n     * @return {Promise<BufferGeometry>}\n     */\n    function addPrimitiveAttributes(geometry, primitiveDef, parser) {\n        var attributes = primitiveDef.attributes;\n\n        var pending = [];\n\n        function assignAttributeAccessor(accessorIndex, attributeName) {\n            return parser.getDependency('accessor', accessorIndex).then(function (accessor) {\n                geometry.setAttribute(attributeName, accessor);\n            });\n        }\n\n        for (var gltfAttributeName in attributes) {\n            var threeAttributeName = ATTRIBUTES[gltfAttributeName] || gltfAttributeName.toLowerCase();\n\n            // Skip attributes already provided by e.g. Draco extension.\n            if (threeAttributeName in geometry.attributes) continue;\n\n            pending.push(assignAttributeAccessor(attributes[gltfAttributeName], threeAttributeName));\n        }\n\n        if (primitiveDef.indices !== undefined && !geometry.index) {\n            var accessor = parser.getDependency('accessor', primitiveDef.indices).then(function (accessor) {\n                geometry.setIndex(accessor);\n            });\n\n            pending.push(accessor);\n        }\n\n        assignExtrasToUserData(geometry, primitiveDef);\n\n        computeBounds(geometry, primitiveDef, parser);\n\n        return Promise.all(pending).then(function () {\n            return primitiveDef.targets !== undefined\n                ? addMorphTargets(geometry, primitiveDef.targets, parser)\n                : geometry;\n        });\n    }\n\n    /**\n     * @param {BufferGeometry} geometry\n     * @param {Number} drawMode\n     * @return {BufferGeometry}\n     */\n    function toTrianglesDrawMode(geometry, drawMode) {\n        var index = geometry.getIndex();\n\n        // generate index if not present\n\n        if (index === null) {\n            var indices = [];\n\n            var position = geometry.getAttribute('position');\n\n            if (position !== undefined) {\n                for (var i = 0; i < position.count; i++) {\n                    indices.push(i);\n                }\n\n                geometry.setIndex(indices);\n                index = geometry.getIndex();\n            } else {\n                console.error(\n                    'THREE.GLTFLoader.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.'\n                );\n                return geometry;\n            }\n        }\n\n        //\n\n        var numberOfTriangles = index.count - 2;\n        var newIndices = [];\n\n        if (drawMode === TriangleFanDrawMode) {\n            // gl.TRIANGLE_FAN\n\n            for (var i = 1; i <= numberOfTriangles; i++) {\n                newIndices.push(index.getX(0));\n                newIndices.push(index.getX(i));\n                newIndices.push(index.getX(i + 1));\n            }\n        } else {\n            // gl.TRIANGLE_STRIP\n\n            for (var i = 0; i < numberOfTriangles; i++) {\n                if (i % 2 === 0) {\n                    newIndices.push(index.getX(i));\n                    newIndices.push(index.getX(i + 1));\n                    newIndices.push(index.getX(i + 2));\n                } else {\n                    newIndices.push(index.getX(i + 2));\n                    newIndices.push(index.getX(i + 1));\n                    newIndices.push(index.getX(i));\n                }\n            }\n        }\n\n        if (newIndices.length / 3 !== numberOfTriangles) {\n            console.error('THREE.GLTFLoader.toTrianglesDrawMode(): Unable to generate correct amount of triangles.');\n        }\n\n        // build final geometry\n\n        var newGeometry = geometry.clone();\n        newGeometry.setIndex(newIndices);\n\n        return newGeometry;\n    }\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\n     *\n     * Creates BufferGeometries from primitives.\n     *\n     * @param {Array<GLTF.Primitive>} primitives\n     * @return {Promise<Array<BufferGeometry>>}\n     */\n    GLTFParser.prototype.loadGeometries = function (primitives) {\n        var parser = this;\n        var extensions = this.extensions;\n        var cache = this.primitiveCache;\n\n        function createDracoPrimitive(primitive) {\n            return extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION]\n                .decodePrimitive(primitive, parser)\n                .then(function (geometry) {\n                    return addPrimitiveAttributes(geometry, primitive, parser);\n                });\n        }\n\n        var pending = [];\n\n        for (var i = 0, il = primitives.length; i < il; i++) {\n            var primitive = primitives[i];\n            var cacheKey = createPrimitiveKey(primitive);\n\n            // See if we've already created this geometry\n            var cached = cache[cacheKey];\n\n            if (cached) {\n                // Use the cached geometry if it exists\n                pending.push(cached.promise);\n            } else {\n                var geometryPromise;\n\n                if (primitive.extensions && primitive.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION]) {\n                    // Use DRACO geometry if available\n                    geometryPromise = createDracoPrimitive(primitive);\n                } else {\n                    // Otherwise create a new geometry\n                    geometryPromise = addPrimitiveAttributes(new BufferGeometry(), primitive, parser);\n                }\n\n                // Cache this geometry\n                cache[cacheKey] = { primitive: primitive, promise: geometryPromise };\n\n                pending.push(geometryPromise);\n            }\n        }\n\n        return Promise.all(pending);\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n     * @param {number} meshIndex\n     * @return {Promise<Group|Mesh|SkinnedMesh>}\n     */\n    GLTFParser.prototype.loadMesh = function (meshIndex) {\n        var parser = this;\n        var json = this.json;\n\n        var meshDef = json.meshes[meshIndex];\n        var primitives = meshDef.primitives;\n\n        var pending = [];\n\n        for (var i = 0, il = primitives.length; i < il; i++) {\n            var material =\n                primitives[i].material === undefined\n                    ? createDefaultMaterial(this.cache)\n                    : this.getDependency('material', primitives[i].material);\n\n            pending.push(material);\n        }\n\n        pending.push(parser.loadGeometries(primitives));\n\n        return Promise.all(pending).then(function (results) {\n            var materials = results.slice(0, results.length - 1);\n            var geometries = results[results.length - 1];\n\n            var meshes = [];\n\n            for (var i = 0, il = geometries.length; i < il; i++) {\n                var geometry = geometries[i];\n                var primitive = primitives[i];\n\n                // 1. create Mesh\n\n                var mesh;\n\n                var material = materials[i];\n\n                if (\n                    primitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\n                    primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\n                    primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\n                    primitive.mode === undefined\n                ) {\n                    // .isSkinnedMesh isn't in glTF spec. See .markDefs()\n                    mesh =\n                        meshDef.isSkinnedMesh === true\n                            ? new SkinnedMesh(geometry, material)\n                            : new Mesh(geometry, material);\n\n                    if (mesh.isSkinnedMesh === true && !mesh.geometry.attributes.skinWeight.normalized) {\n                        // we normalize floating point skin weight array to fix malformed assets (see #15319)\n                        // it's important to skip this for non-float32 data since normalizeSkinWeights assumes non-normalized inputs\n                        mesh.normalizeSkinWeights();\n                    }\n\n                    if (primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP) {\n                        mesh.geometry = toTrianglesDrawMode(mesh.geometry, TriangleStripDrawMode);\n                    } else if (primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN) {\n                        mesh.geometry = toTrianglesDrawMode(mesh.geometry, TriangleFanDrawMode);\n                    }\n                } else if (primitive.mode === WEBGL_CONSTANTS.LINES) {\n                    mesh = new LineSegments(geometry, material);\n                } else if (primitive.mode === WEBGL_CONSTANTS.LINE_STRIP) {\n                    mesh = new Line(geometry, material);\n                } else if (primitive.mode === WEBGL_CONSTANTS.LINE_LOOP) {\n                    mesh = new LineLoop(geometry, material);\n                } else if (primitive.mode === WEBGL_CONSTANTS.POINTS) {\n                    mesh = new Points(geometry, material);\n                } else {\n                    throw new Error('THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode);\n                }\n\n                if (Object.keys(mesh.geometry.morphAttributes).length > 0) {\n                    updateMorphTargets(mesh, meshDef);\n                }\n\n                mesh.name = meshDef.name || 'mesh_' + meshIndex;\n\n                if (geometries.length > 1) mesh.name += '_' + i;\n\n                assignExtrasToUserData(mesh, meshDef);\n\n                parser.assignFinalMaterial(mesh);\n\n                meshes.push(mesh);\n            }\n\n            if (meshes.length === 1) {\n                return meshes[0];\n            }\n\n            var group = new Group();\n\n            for (var i = 0, il = meshes.length; i < il; i++) {\n                group.add(meshes[i]);\n            }\n\n            return group;\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\n     * @param {number} cameraIndex\n     * @return {Promise<THREE.Camera>}\n     */\n    GLTFParser.prototype.loadCamera = function (cameraIndex) {\n        var camera;\n        var cameraDef = this.json.cameras[cameraIndex];\n        var params = cameraDef[cameraDef.type];\n\n        if (!params) {\n            console.warn('THREE.GLTFLoader: Missing camera parameters.');\n            return;\n        }\n\n        if (cameraDef.type === 'perspective') {\n            camera = new PerspectiveCamera(\n                MathUtils.radToDeg(params.yfov),\n                params.aspectRatio || 1,\n                params.znear || 1,\n                params.zfar || 2e6\n            );\n        } else if (cameraDef.type === 'orthographic') {\n            camera = new OrthographicCamera(\n                -params.xmag,\n                params.xmag,\n                params.ymag,\n                -params.ymag,\n                params.znear,\n                params.zfar\n            );\n        }\n\n        if (cameraDef.name) camera.name = cameraDef.name;\n\n        assignExtrasToUserData(camera, cameraDef);\n\n        return Promise.resolve(camera);\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\n     * @param {number} skinIndex\n     * @return {Promise<Object>}\n     */\n    GLTFParser.prototype.loadSkin = function (skinIndex) {\n        var skinDef = this.json.skins[skinIndex];\n\n        var skinEntry = { joints: skinDef.joints };\n\n        if (skinDef.inverseBindMatrices === undefined) {\n            return Promise.resolve(skinEntry);\n        }\n\n        return this.getDependency('accessor', skinDef.inverseBindMatrices).then(function (accessor) {\n            skinEntry.inverseBindMatrices = accessor;\n\n            return skinEntry;\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n     * @param {number} animationIndex\n     * @return {Promise<AnimationClip>}\n     */\n    GLTFParser.prototype.loadAnimation = function (animationIndex) {\n        var json = this.json;\n\n        var animationDef = json.animations[animationIndex];\n\n        var pendingNodes = [];\n        var pendingInputAccessors = [];\n        var pendingOutputAccessors = [];\n        var pendingSamplers = [];\n        var pendingTargets = [];\n\n        for (var i = 0, il = animationDef.channels.length; i < il; i++) {\n            var channel = animationDef.channels[i];\n            var sampler = animationDef.samplers[channel.sampler];\n            var target = channel.target;\n            var name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\n            var input = animationDef.parameters !== undefined ? animationDef.parameters[sampler.input] : sampler.input;\n            var output =\n                animationDef.parameters !== undefined ? animationDef.parameters[sampler.output] : sampler.output;\n\n            pendingNodes.push(this.getDependency('node', name));\n            pendingInputAccessors.push(this.getDependency('accessor', input));\n            pendingOutputAccessors.push(this.getDependency('accessor', output));\n            pendingSamplers.push(sampler);\n            pendingTargets.push(target);\n        }\n\n        return Promise.all([\n            Promise.all(pendingNodes),\n            Promise.all(pendingInputAccessors),\n            Promise.all(pendingOutputAccessors),\n            Promise.all(pendingSamplers),\n            Promise.all(pendingTargets)\n        ]).then(function (dependencies) {\n            var nodes = dependencies[0];\n            var inputAccessors = dependencies[1];\n            var outputAccessors = dependencies[2];\n            var samplers = dependencies[3];\n            var targets = dependencies[4];\n\n            var tracks = [];\n\n            for (var i = 0, il = nodes.length; i < il; i++) {\n                var node = nodes[i];\n                var inputAccessor = inputAccessors[i];\n                var outputAccessor = outputAccessors[i];\n                var sampler = samplers[i];\n                var target = targets[i];\n\n                if (node === undefined) continue;\n\n                node.updateMatrix();\n                node.matrixAutoUpdate = true;\n\n                var TypedKeyframeTrack;\n\n                switch (PATH_PROPERTIES[target.path]) {\n                    case PATH_PROPERTIES.weights:\n                        TypedKeyframeTrack = NumberKeyframeTrack;\n                        break;\n\n                    case PATH_PROPERTIES.rotation:\n                        TypedKeyframeTrack = QuaternionKeyframeTrack;\n                        break;\n\n                    case PATH_PROPERTIES.position:\n                    case PATH_PROPERTIES.scale:\n                    default:\n                        TypedKeyframeTrack = VectorKeyframeTrack;\n                        break;\n                }\n\n                var targetName = node.name ? node.name : node.uuid;\n\n                var interpolation =\n                    sampler.interpolation !== undefined ? INTERPOLATION[sampler.interpolation] : InterpolateLinear;\n\n                var targetNames = [];\n\n                if (PATH_PROPERTIES[target.path] === PATH_PROPERTIES.weights) {\n                    // Node may be a Group (glTF mesh with several primitives) or a Mesh.\n                    node.traverse(function (object) {\n                        if (object.isMesh === true && object.morphTargetInfluences) {\n                            targetNames.push(object.name ? object.name : object.uuid);\n                        }\n                    });\n                } else {\n                    targetNames.push(targetName);\n                }\n\n                var outputArray = outputAccessor.array;\n\n                if (outputAccessor.normalized) {\n                    var scale;\n\n                    if (outputArray.constructor === Int8Array) {\n                        scale = 1 / 127;\n                    } else if (outputArray.constructor === Uint8Array) {\n                        scale = 1 / 255;\n                    } else if (outputArray.constructor == Int16Array) {\n                        scale = 1 / 32767;\n                    } else if (outputArray.constructor === Uint16Array) {\n                        scale = 1 / 65535;\n                    } else {\n                        throw new Error('THREE.GLTFLoader: Unsupported output accessor component type.');\n                    }\n\n                    var scaled = new Float32Array(outputArray.length);\n\n                    for (var j = 0, jl = outputArray.length; j < jl; j++) {\n                        scaled[j] = outputArray[j] * scale;\n                    }\n\n                    outputArray = scaled;\n                }\n\n                for (var j = 0, jl = targetNames.length; j < jl; j++) {\n                    var track = new TypedKeyframeTrack(\n                        targetNames[j] + '.' + PATH_PROPERTIES[target.path],\n                        inputAccessor.array,\n                        outputArray,\n                        interpolation\n                    );\n\n                    // Override interpolation with custom factory method.\n                    if (sampler.interpolation === 'CUBICSPLINE') {\n                        track.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline(result) {\n                            // A CUBICSPLINE keyframe in glTF has three output values for each input value,\n                            // representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n                            // must be divided by three to get the interpolant's sampleSize argument.\n\n                            return new GLTFCubicSplineInterpolant(\n                                this.times,\n                                this.values,\n                                this.getValueSize() / 3,\n                                result\n                            );\n                        };\n\n                        // Mark as CUBICSPLINE. `track.getInterpolation()` doesn't support custom interpolants.\n                        track.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\n                    }\n\n                    tracks.push(track);\n                }\n            }\n\n            var name = animationDef.name ? animationDef.name : 'animation_' + animationIndex;\n\n            return new AnimationClip(name, undefined, tracks);\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\n     * @param {number} nodeIndex\n     * @return {Promise<Object3D>}\n     */\n    GLTFParser.prototype.loadNode = function (nodeIndex) {\n        var json = this.json;\n        var extensions = this.extensions;\n        var parser = this;\n\n        var meshReferences = json.meshReferences;\n        var meshUses = json.meshUses;\n\n        var nodeDef = json.nodes[nodeIndex];\n\n        return (function () {\n            var pending = [];\n\n            if (nodeDef.mesh !== undefined) {\n                pending.push(\n                    parser.getDependency('mesh', nodeDef.mesh).then(function (mesh) {\n                        var node;\n\n                        if (meshReferences[nodeDef.mesh] > 1) {\n                            var instanceNum = meshUses[nodeDef.mesh]++;\n\n                            node = mesh.clone();\n                            node.name += '_instance_' + instanceNum;\n                        } else {\n                            node = mesh;\n                        }\n\n                        // if weights are provided on the node, override weights on the mesh.\n                        if (nodeDef.weights !== undefined) {\n                            node.traverse(function (o) {\n                                if (!o.isMesh) return;\n\n                                for (var i = 0, il = nodeDef.weights.length; i < il; i++) {\n                                    o.morphTargetInfluences[i] = nodeDef.weights[i];\n                                }\n                            });\n                        }\n\n                        return node;\n                    })\n                );\n            }\n\n            if (nodeDef.camera !== undefined) {\n                pending.push(parser.getDependency('camera', nodeDef.camera));\n            }\n\n            if (\n                nodeDef.extensions &&\n                nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL] &&\n                nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].light !== undefined\n            ) {\n                pending.push(parser.getDependency('light', nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].light));\n            }\n\n            return Promise.all(pending);\n        })().then(function (objects) {\n            var node;\n\n            // .isBone isn't in glTF spec. See .markDefs\n            if (nodeDef.isBone === true) {\n                node = new Bone();\n            } else if (objects.length > 1) {\n                node = new Group();\n            } else if (objects.length === 1) {\n                node = objects[0];\n            } else {\n                node = new Object3D();\n            }\n\n            if (node !== objects[0]) {\n                for (var i = 0, il = objects.length; i < il; i++) {\n                    node.add(objects[i]);\n                }\n            }\n\n            if (nodeDef.name) {\n                node.userData.name = nodeDef.name;\n                node.name = PropertyBinding.sanitizeNodeName(nodeDef.name);\n            }\n\n            assignExtrasToUserData(node, nodeDef);\n\n            if (nodeDef.extensions) addUnknownExtensionsToUserData(extensions, node, nodeDef);\n\n            if (nodeDef.matrix !== undefined) {\n                var matrix = new Matrix4();\n                matrix.fromArray(nodeDef.matrix);\n                node.applyMatrix4(matrix);\n            } else {\n                if (nodeDef.translation !== undefined) {\n                    node.position.fromArray(nodeDef.translation);\n                }\n\n                if (nodeDef.rotation !== undefined) {\n                    node.quaternion.fromArray(nodeDef.rotation);\n                }\n\n                if (nodeDef.scale !== undefined) {\n                    node.scale.fromArray(nodeDef.scale);\n                }\n            }\n\n            return node;\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\n     * @param {number} sceneIndex\n     * @return {Promise<Group>}\n     */\n    GLTFParser.prototype.loadScene = (function () {\n        // scene node hierachy builder\n\n        function buildNodeHierachy(nodeId, parentObject, json, parser) {\n            var nodeDef = json.nodes[nodeId];\n\n            return parser\n                .getDependency('node', nodeId)\n                .then(function (node) {\n                    if (nodeDef.skin === undefined) return node;\n\n                    // build skeleton here as well\n\n                    var skinEntry;\n\n                    return parser\n                        .getDependency('skin', nodeDef.skin)\n                        .then(function (skin) {\n                            skinEntry = skin;\n\n                            var pendingJoints = [];\n\n                            for (var i = 0, il = skinEntry.joints.length; i < il; i++) {\n                                pendingJoints.push(parser.getDependency('node', skinEntry.joints[i]));\n                            }\n\n                            return Promise.all(pendingJoints);\n                        })\n                        .then(function (jointNodes) {\n                            node.traverse(function (mesh) {\n                                if (!mesh.isMesh) return;\n\n                                var bones = [];\n                                var boneInverses = [];\n\n                                for (var j = 0, jl = jointNodes.length; j < jl; j++) {\n                                    var jointNode = jointNodes[j];\n\n                                    if (jointNode) {\n                                        bones.push(jointNode);\n\n                                        var mat = new Matrix4();\n\n                                        if (skinEntry.inverseBindMatrices !== undefined) {\n                                            mat.fromArray(skinEntry.inverseBindMatrices.array, j * 16);\n                                        }\n\n                                        boneInverses.push(mat);\n                                    } else {\n                                        console.warn(\n                                            'THREE.GLTFLoader: Joint \"%s\" could not be found.',\n                                            skinEntry.joints[j]\n                                        );\n                                    }\n                                }\n\n                                mesh.bind(new Skeleton(bones, boneInverses), mesh.matrixWorld);\n                            });\n\n                            return node;\n                        });\n                })\n                .then(function (node) {\n                    // build node hierachy\n\n                    parentObject.add(node);\n\n                    var pending = [];\n\n                    if (nodeDef.children) {\n                        var children = nodeDef.children;\n\n                        for (var i = 0, il = children.length; i < il; i++) {\n                            var child = children[i];\n                            pending.push(buildNodeHierachy(child, node, json, parser));\n                        }\n                    }\n\n                    return Promise.all(pending);\n                });\n        }\n\n        return function loadScene(sceneIndex) {\n            var json = this.json;\n            var extensions = this.extensions;\n            var sceneDef = this.json.scenes[sceneIndex];\n            var parser = this;\n\n            // Loader returns Group, not Scene.\n            // See: https://github.com/mrdoob/three.js/issues/18342#issuecomment-578981172\n            var scene = new Group();\n            if (sceneDef.name) scene.name = sceneDef.name;\n\n            assignExtrasToUserData(scene, sceneDef);\n\n            if (sceneDef.extensions) addUnknownExtensionsToUserData(extensions, scene, sceneDef);\n\n            var nodeIds = sceneDef.nodes || [];\n\n            var pending = [];\n\n            for (var i = 0, il = nodeIds.length; i < il; i++) {\n                pending.push(buildNodeHierachy(nodeIds[i], scene, json, parser));\n            }\n\n            return Promise.all(pending).then(function () {\n                return scene;\n            });\n        };\n    })();\n\n    return GLTFLoader;\n})();\n\nexport { GLTFLoader };\n","const ALIAS = {\n    left: 37,\n    up: 38,\n    right: 39,\n    down: 40,\n    space: 32,\n    tab: 9,\n    escape: 27\n};\n\nexport default class Keyboard {\n    constructor(domElement) {\n        this.domElement = domElement || document;\n        this.keyCodes = {};\n\n        // bind keyEvents\n        this.domElement.addEventListener('keydown', (event) => this.onKeyChange(event), false);\n        this.domElement.addEventListener('keyup', (event) => this.onKeyChange(event), false);\n\n        // bind window blur\n        window.addEventListener('blur', () => this.onBlur, false);\n    }\n\n    destroy() {\n        this.domElement.removeEventListener('keydown', (event) => this.onKeyChange(event), false);\n        this.domElement.removeEventListener('keyup', (event) => this.onKeyChange(event), false);\n\n        // unbind window blur event\n        window.removeEventListener('blur', () => this.onBlur, false);\n    }\n\n    onBlur() {\n        for (const prop in this.keyCodes) this.keyCodes[prop] = false;\n    }\n\n    onKeyChange(event) {\n        // log to debug\n        //console.log('onKeyChange', event, event.keyCode, event.shiftKey, event.ctrlKey, event.altKey, event.metaKey)\n\n        // update this.keyCodes\n        const keyCode = event.keyCode;\n        this.keyCodes[keyCode] = event.type === 'keydown';\n    }\n\n    pressed(keyDesc) {\n        const keys = keyDesc.split('+');\n        for (let i = 0; i < keys.length; i++) {\n            const key = keys[i];\n            let pressed = false;\n            if (Object.keys(ALIAS).indexOf(key) != -1) {\n                pressed = this.keyCodes[ALIAS[key]];\n            } else {\n                pressed = this.keyCodes[key.toUpperCase().charCodeAt(0)];\n            }\n            if (!pressed) return false;\n        }\n\n        return true;\n    }\n\n    eventMatches(event, keyDesc) {\n        const aliases = ALIAS;\n        const aliasKeys = Object.keys(aliases);\n        const keys = keyDesc.split('+');\n        // log to debug\n        // console.log('eventMatches', event, event.keyCode, event.shiftKey, event.ctrlKey, event.altKey, event.metaKey)\n        for (let i = 0; i < keys.length; i++) {\n            const key = keys[i];\n            let pressed = false;\n            if (key === 'shift') {\n                pressed = event.shiftKey ? true : false;\n            } else if (key === 'ctrl') {\n                pressed = event.ctrlKey ? true : false;\n            } else if (key === 'alt') {\n                pressed = event.altKey ? true : false;\n            } else if (key === 'meta') {\n                pressed = event.metaKey ? true : false;\n            } else if (aliasKeys.indexOf(key) !== -1) {\n                pressed = event.keyCode === aliases[key];\n            } else if (event.keyCode === key.toUpperCase().charCodeAt(0)) {\n                pressed = true;\n            }\n            if (!pressed) return false;\n        }\n\n        return true;\n    }\n}\n","import Keyboard from '../../utils/keyboard';\nimport Helpers from '../../utils/helpers';\nimport Config from '../../data/config';\n\n// Manages all input interactions\nexport default class Interaction {\n    constructor(renderer, scene, camera, controls) {\n        // Properties\n        this.renderer = renderer;\n        this.scene = scene;\n        this.camera = camera;\n        this.controls = controls;\n\n        this.timeout = null;\n\n        // Instantiate keyboard helper\n        this.keyboard = new Keyboard();\n\n        // Listeners\n        // Mouse events\n        this.renderer.domElement.addEventListener(\n            'mousemove',\n            (event) => Helpers.throttle(this.onMouseMove(event), 250),\n            false\n        );\n        this.renderer.domElement.addEventListener('mouseleave', (event) => this.onMouseLeave(event), false);\n        this.renderer.domElement.addEventListener('mouseover', (event) => this.onMouseOver(event), false);\n\n        // Keyboard events\n        this.keyboard.domElement.addEventListener('keydown', (event) => {\n            // Only once\n            if (event.repeat) {\n                return;\n            }\n\n            if (this.keyboard.eventMatches(event, 'escape')) {\n                console.log('Escape pressed');\n            }\n        });\n    }\n\n    onMouseOver(event) {\n        event.preventDefault();\n\n        Config.isMouseOver = true;\n    }\n\n    onMouseLeave(event) {\n        event.preventDefault();\n\n        Config.isMouseOver = false;\n    }\n\n    onMouseMove(event) {\n        event.preventDefault();\n\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(function () {\n            Config.isMouseMoving = false;\n        }, 200);\n\n        Config.isMouseMoving = true;\n    }\n}\n","import Config, { saveConfig } from '../../data/config';\n\n// COMMENT(NuwanJ)\n// Store the last state of the toggles in the window.localStorage\n// Refer: https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage\n// Refer: https://github.com/dataarts/dat.gui/blob/master/API.md#GUI+useLocalStorage\n\n// Manages all dat.GUI interactions\nexport default class DatGUI {\n    constructor(main) {\n        this.gui = new dat.GUI();\n\n        this.gui.useLocalStorage = true;\n\n        this.camera = main.camera.threeCamera;\n        this.controls = main.controls.threeControls;\n        this.light = main.light;\n        this.scene = main.scene;\n\n        this.model = null;\n        this.meshHelper = null;\n    }\n\n    load(main, mesh) {\n        // Add folders\n        this.gui\n            .add(Config, 'isShowingRobotSnapshots')\n            .name('Robot Snapshots')\n            .onChange((value) => {\n                Config.isShowingRobotSnapshots = value;\n                saveConfig(Config);\n            });\n\n        /* Labels Folder */\n        const labelsFolder = this.gui.addFolder('Labels');\n        // labelsFolder\n        //     .add(Config, 'isShowingLables')\n        //     .name('All Labels')\n        //     .onChange((value) => {\n        //         Config.isShowingLables = value;\n        //         Config.labelsVisibility = {\n        //             obstacles: value,\n        //             robots: value\n        //         };\n        //         saveConfig(Config);\n        //     });\n\n        labelsFolder\n            .add(Config.labelsVisibility, 'obstacles')\n            .name('Obstacle Labels')\n            .onChange((value) => {\n                this.toggleLabels(this.scene.children, 'Obstacle', value);\n            });\n        labelsFolder\n            .add(Config.labelsVisibility, 'robots')\n            .name('Robot Labels')\n            .onChange((value) => {\n                this.toggleLabels(this.scene.children, 'Robot', value);\n            });\n\n        /* Reality Folder */\n        const realityFolder = this.gui.addFolder('Reality');\n\n        realityFolder\n            .add(Config.selectedRealities, 'real')\n            .name('Physical Reality')\n            .listen()\n            .onChange((value) => {\n                this.toggleReality('real', 'R');\n            });\n        realityFolder\n            .add(Config.selectedRealities, 'virtual')\n            .name('Virtual Reality')\n            .listen()\n            .onChange((value) => {\n                this.toggleReality('virtual', 'V');\n            });\n\n        // Other\n        const otherFolder = this.gui.addFolder('Other');\n        otherFolder\n            .add(Config.controls, 'autoRotate')\n            .name('Auto Rotate')\n            .listen()\n            .onChange((value) => {\n                // alert('Toggle AutoRotate');\n                Config.controls.autoRotate = value;\n                saveConfig(Config);\n                location.reload();\n            });\n        otherFolder\n            .add(Config.controls, 'autoRotateSpeed')\n            .min(-5)\n            .max(5)\n            .name('Auto Rotate Speed')\n            .listen()\n            .onChange((value) => {\n                Config.controls.autoRotateSpeed = value;\n                saveConfig(Config);\n                // location.reload();\n            });\n        /* Global */\n        // this.gui.open();\n        this.gui.close();\n\n        // this.model = main.model;\n        // this.meshHelper = main.meshHelper;\n    }\n\n    toggleLabels(objects, type, value) {\n        saveConfig(Config);\n        if (Array.isArray(objects) && type !== undefined && type !== '') {\n            for (var variable of objects) {\n                if (variable.name.startsWith(type)) {\n                    variable.children[0].visible = value;\n                }\n            }\n        }\n    }\n\n    toggleReality(reality, selected) {\n        // by default visualizer will intercept all the communication coming to the channel regardless of the reality.\n        // this control panel will only toggle the 'visibility' of objects in the selected realities.\n        const objects = scene.children;\n        saveConfig(Config);\n        Object.entries(objects).forEach((obj) => {\n            const name = obj[1]['name'];\n            const reality = obj[1]['reality'];\n\n            if (reality !== undefined && reality === 'R') {\n                // obj[1].transparent = Config.selectedRealities.real;\n                obj[1].material.opacity = Config.selectedRealities.real ? 1.0 : Config.hiddenOpacity;\n            } else if (reality !== undefined && reality === 'V') {\n                // obj[1].transparent = Config.selectedRealities.virtual;\n                obj[1].material.opacity = Config.selectedRealities.virtual ? 1.0 : Config.hiddenOpacity;\n            }\n        });\n    }\n\n    show() {\n        this.gui.show();\n    }\n\n    unload() {\n        this.gui.destroy();\n        this.gui = new dat.GUI();\n    }\n}\n","import * as THREE from 'three';\n\nimport Config from '../../data/config';\nimport { addLabel, removeLabel } from './label';\n\nconst OBSTACLE_PREFIX = 'Obstacle_';\n\nexport default class Obstacle {\n    constructor(scene, callback) {\n        this.scene = scene;\n        console.log('Obstacle Reality:', Config.mixedReality.obstacles);\n\n        if (callback !== undefined) {\n            callback();\n        }\n    }\n\n    // Create a given list of obstacles\n    createList(obstacles) {\n        Object.entries(obstacles).forEach((obs) => {\n            if (obs !== undefined) {\n                //console.log(obs[1]);\n                this.create(obs[1]);\n            }\n        });\n    }\n\n    // Create a obstacle\n    create(obstacle) {\n        const geometry = this.createGeometry(obstacle.geometry);\n        const material = this.createMaterial(obstacle.material);\n        material.userData.originalColor = new THREE.Color(0x666666);\n        material.userData.labelVisibility = Config.isShowingLables && Config.labelsVisibility.obstacles;\n        material.userData.originalEmmisive = material.emissive.getHex();\n        material.selected = false;\n        material.transparent = true;\n        const id = obstacle.id || 1000 + Math.floor(900 * Math.random());\n\n        const reality = obstacle.reality == undefined ? 'V' : obstacle.reality;\n        const mesh = new THREE.Mesh(geometry, material);\n\n        // TODO: add the name defined in env.config.json as discussed on 2021-02-18\n        //      Need some obstacle protocol revision + simulator updates\n        const name_temp = 'Obs_' + id.toString().substring(0, 8) + '...';\n\n        mesh.name = OBSTACLE_PREFIX + id;\n        mesh.reality = reality; // set reality flag\n\n        if (mesh.reality === 'V') {\n            // material.visible = Config.selectedRealities.virtual;\n            material.opacity = Config.selectedRealities.virtual ? 1.0 : Config.hiddenOpacity;\n        } else if (mesh.reality === 'R') {\n            // material.visible = Config.selectedRealities.real;\n            material.opacity = Config.selectedRealities.real ? 1.0 : Config.hiddenOpacity;\n        }\n\n        // Remove if object is already defined\n        this.deleteIfExists(id);\n\n        // Add the mesh object to arena\n        this.scene.add(mesh);\n\n        // update the position of the object\n        if (obstacle.position !== undefined) {\n            const { x, y } = obstacle.position;\n            const z = this.calculateZ(obstacle);\n\n            mesh.scale.set(scene_scale, scene_scale, scene_scale);\n            mesh.position.set(scene_scale * x, scene_scale * y, scene_scale * z);\n        }\n\n        // Rotate the object, after translate degrees into radians\n        if (obstacle.rotation !== undefined) {\n            const { x, y, z } = obstacle.rotation;\n            const radX = ((90 + x) / 360) * 2 * Math.PI; // transformation due to coordinate system\n            const radY = (y / 360) * 2 * Math.PI;\n            const radZ = (z / 360) * 2 * Math.PI;\n\n            mesh.rotation.set(radX, radY, radZ);\n        }\n\n        // Show shadows of the object if enabled\n        if (Config.shadow.enabled) mesh.receiveShadow = true;\n\n        // Add labels to every obstacle, immediately displayed if enabled\n        addLabel(OBSTACLE_PREFIX, { id: obstacle.id, name: name_temp }, mesh, Config.labelsVisibility.obstacles);\n\n        console.log('Created>', mesh.name);\n    }\n\n    createGeometry(g) {\n        if (g.type == undefined) throw new TypeError('type unspecified');\n\n        if (g.type == 'BoxGeometry') {\n            return this.createBoxGeometry(g.width, g.height, g.depth);\n        } else if (g.type == 'CylinderGeometry') {\n            return this.createCylinderGeometry(g.radiusTop, g.radiusBottom, g.height);\n        } else if (g.type == 'SphereGeometry') {\n            return this.createSphereGeometry(g.radius);\n        }\n        throw new TypeError('unsupported geometry type');\n    }\n\n    createBoxGeometry(width, height, depth) {\n        if (width == undefined) throw new TypeError('width unspecified');\n        if (height == undefined) throw new TypeError('height unspecified');\n        if (depth == undefined) throw new TypeError('depth unspecified');\n\n        // https://threejs.org/docs/#api/en/geometries/BoxGeometry\n        return new THREE.BoxGeometry(width, height, depth);\n    }\n\n    createCylinderGeometry(radiusTop, radiusBottom, height) {\n        if (radiusTop == undefined) throw new TypeError('radiusTop unspecified');\n        if (radiusBottom == undefined) throw new TypeError('radiusBottom unspecified');\n        if (height == undefined) throw new TypeError('height unspecified');\n\n        // https://threejs.org/docs/#api/en/geometries/CylinderGeometry\n        const heightSegments = heightSegments || 2;\n        const radialSegments = radialSegments || 16;\n\n        return new THREE.CylinderGeometry(radiusTop, radiusBottom, height, radialSegments, heightSegments);\n    }\n\n    createSphereGeometry(radius) {\n        if (radius == undefined) throw new TypeError('radius unspecified');\n\n        // https://threejs.org/docs/#api/en/geometries/SphereGeometry\n        const widthSegments = widthSegments || 16;\n        const heightSegments = heightSegments || 16;\n        return new THREE.SphereGeometry(radius, widthSegments, heightSegments);\n    }\n\n    createMaterial(m) {\n        let material;\n        if (m.type == 'MeshBasicMaterial') {\n            // https://threejs.org/docs/#api/en/materials/MeshBasicMaterial\n            return new THREE.MeshBasicMaterial(m.properties);\n        } else if (m.type == 'MeshNormalMaterial') {\n            // https://threejs.org/docs/api/en/materials/MeshNormalMaterial.html\n            return new THREE.MeshNormalMaterial(m.properties);\n        } else if (m.type == 'MeshPhongMaterial') {\n            // https://threejs.org/docs/#api/en/materials/MeshPhongMaterial\n            return new THREE.MeshPhongMaterial(m.properties);\n        } else if (m.type == 'MeshPhysicalMaterial') {\n            // https://threejs.org/docs/#api/en/materials/MeshPhysicalMaterial\n            return new THREE.MeshPhysicalMaterial(m.properties);\n        } else if (m.type == 'MeshStandardMaterial') {\n            // https://threejs.org/docs/#api/en/materials/MeshStandardMaterial\n            return new THREE.MeshStandardMaterial(m.properties);\n        }\n        // Default material type\n        return new THREE.MeshStandardMaterial(m.properties);\n    }\n\n    calculateZ(obstacle) {\n        // If z is undefined, place the object in top of the arena\n        if (obstacle.position.z == undefined) {\n            if (obstacle.geometry.height !== undefined) {\n                // Box and Cylinder objects\n                return obstacle.geometry.height / 2;\n            } else if (obstacle.geometry.radius !== undefined) {\n                // Sphere objects\n                return obstacle.geometry.radius;\n            }\n            return 0;\n        }\n        return obstacle.position.z;\n    }\n\n    deleteIfExists(id) {\n        // Delete obstacle if it already exists\n        const name = OBSTACLE_PREFIX + id;\n        const obstacle = this.scene.getObjectByName(name);\n        if (obstacle !== undefined) {\n            this.scene.remove(obstacle);\n            console.log('Deleted>', name);\n        }\n    }\n\n    deleteAll() {\n        // Delete all obstacles\n        const objects = this.scene.children;\n        Object.entries(objects).forEach((obj) => {\n            const name = obj[1]['name'];\n            if (name.startsWith(OBSTACLE_PREFIX)) {\n                console.log('Deleted>', name);\n                removeLabel(obj[1]);\n                this.scene.remove(obj[1]);\n            }\n        });\n    }\n}\n","import * as THREE from 'three';\nimport TWEEN, { update } from '@tweenjs/tween.js';\n\nimport Config from '../../data/config';\nimport { addLabel, removeLabel } from './label';\n\nvar STLLoader = require('three-stl-loader')(THREE);\n\nconst ROBOT_PREFIX = 'Robot_';\n\nexport default class Robot {\n    constructor(scene) {\n        this.scene = scene;\n        console.log('Robot Reality:', Config.mixedReality.robots);\n\n        // This will check for duplicated instances of robots and delete them\n        const that = this;\n        this.created = true;\n        setInterval(() => {\n            if (this.created === true) {\n                // console.log('call prune');\n                that.prune();\n                this.created = false;\n            }\n        }, 2500);\n    }\n\n    changeColor(id, R, G, B, ambient, callback) {\n        var r = this.scene.getObjectByName(ROBOT_PREFIX + id);\n        if (r != undefined) {\n            r.material.color.setRGB(R / 256, G / 256, B / 265);\n            //console.log(\"Color> id:\", id, \" | R:\", R, \"G:\", G, \"B:\", B);\n\n            if (callback != null) callback('success');\n        } else if (callback != null) callback('undefined');\n\n        return r;\n    }\n\n    create(id, x, y, heading, reality = 'V', callback) {\n        var r = this.scene.getObjectByName(ROBOT_PREFIX + id);\n        const REALITY = Config.mixedReality.robots;\n\n        if (r == undefined) {\n            // Create only if not exists\n\n            if (reality === REALITY || REALITY === 'M') {\n                // Can create\n                // Limit the arena that robot can go\n                x = scene_scale * Math.min(Math.max(x, Config.arena.minX), Config.arena.maxX);\n                y = scene_scale * Math.min(Math.max(y, Config.arena.minY), Config.arena.maxY);\n\n                var loader = new STLLoader();\n                loader.load('./assets/models/model.stl', function (geometry, scene) {\n                    // Set less opacity for virtual robots\n                    const opacity = 1; // reality == 'V' ? 0.5 : 1;\n\n                    const material = new THREE.MeshStandardMaterial({\n                        color: 0x666666,\n                        opacity: opacity,\n                        transparent: true\n                    });\n                    material.userData.originalColor = new THREE.Color(0x666666);\n                    material.userData.labelVisibility = Config.isShowingLables && Config.labelsVisibility.robots;\n                    material.selected = false;\n\n                    var r = new THREE.Mesh(geometry, material);\n                    r.receiveShadow = true;\n                    r.robotId = id;\n                    r.name = ROBOT_PREFIX + id;\n                    r.scale.set(scene_scale, scene_scale, scene_scale);\n                    r.position.set(x, y, 0);\n                    r.rotation.x = 90 * THREE.Math.DEG2RAD;\n                    r.rotation.y = (heading - 90) * THREE.Math.DEG2RAD;\n                    r.reality = reality; // set reality flag\n\n                    if (reality === 'V') {\n                        // material.visible = Config.selectedRealities.virtual;\n                        material.opacity = Config.selectedRealities.virtual ? 1.0 : Config.hiddenOpacity;\n                    } else if (reality === 'R') {\n                        // material.visible = Config.selectedRealities.real;\n                        material.opacity = Config.selectedRealities.real ? 1.0 : Config.hiddenOpacity;\n                    }\n\n                    // Add robot to the scene\n                    window.scene.add(r);\n\n                    r.clickEvent = function (m) {\n                        window.robot.alert(m);\n                    };\n\n                    // Add labels to every robot, immediately displayed if enabled\n                    addLabel(ROBOT_PREFIX, { id, name: r.name }, r, Config.labelsVisibility.robots);\n\n                    console.log(`Created> Robot: id:${id} | x:${x} y: ${y} heading: ${heading} | reality: ${reality}`);\n\n                    // Callback function\n                    if (callback != undefined) callback('success');\n                });\n            } else {\n                console.error(`Creation Failed> Robot: id:${id}  reality: ${reality}!=${REALITY}`);\n            }\n        } else if (reality === REALITY || REALITY === 'M') {\n            // Reality matches\n\n            this.setReality(id, reality);\n            this.move(id, x, y, heading, () => {\n                if (callback != undefined) callback('already defined, so moved');\n            });\n        } else {\n            // Robot reality not matching with environment reality\n            this.delete(id);\n        }\n\n        this.created = true; // asked to prune in next cycle\n        return r;\n    }\n\n    delete(id, callback) {\n        if (id != undefined) {\n            var r = this.scene.getObjectByName(ROBOT_PREFIX + id);\n\n            if (r != undefined) {\n                removeLabel(r);\n                scene.remove(r);\n                console.log('Deleted> id:', id);\n                if (callback != undefined) callback('success');\n            } else if (callback != undefined) callback('not found');\n        } else if (callback != undefined) callback('id not specified');\n    }\n\n    deleteAll() {\n        // Delete all robots\n        const objects = this.scene.children;\n\n        Object.entries(objects).forEach((obj) => {\n            const name = obj[1]['name'];\n\n            if (name.startsWith(ROBOT_PREFIX)) {\n                console.log('Deleted>', name);\n                removeLabel(obj[1]);\n                this.scene.remove(obj[1]);\n            }\n        });\n    }\n\n    setReality(id, reality) {\n        var r = this.scene.getObjectByName(ROBOT_PREFIX + id);\n        if (r != undefined) {\n            r.reality = reality;\n        }\n    }\n    exists(id) {\n        var r = this.scene.getObjectByName(ROBOT_PREFIX + id);\n        return r;\n    }\n\n    move(id, x, y, heading, callback) {\n        var r = this.scene.getObjectByName(ROBOT_PREFIX + id);\n        if (r != undefined) {\n            const currentHeading = r.rotation.y;\n            const newHeading = (heading - 90) * THREE.Math.DEG2RAD;\n            var position = { x: r.position.x, y: r.position.y, heading: r.rotation.y };\n\n            // TODO: need a smoother way than this rough trick\n            // If current and target rotations in different signs\n            const rotationFlag = currentHeading * newHeading >= 0 ? true : false;\n\n            // Limit the arena that robot can go\n            x = scene_scale * Math.min(Math.max(Math.round(x * 10) / 10, Config.arena.minX), Config.arena.maxX);\n            y = scene_scale * Math.min(Math.max(Math.round(y * 10) / 10, Config.arena.minY), Config.arena.maxY);\n            heading = Math.round(heading * 10) / 10;\n\n            // const speed = 10;\n            const distance = Math.sqrt(Math.pow(x - position.x, 2) + Math.pow(y - position.y, 2));\n\n            const moveTime = 1; //distance / speed;\n            // TODO: If distance is 0, need to handle only the rotation\n\n            if (distance != 0) {\n                var tween = new TWEEN.Tween(position)\n                    .to({ x: x, y: y, heading: newHeading }, 1000 * moveTime)\n                    /*.easing(TWEEN.Easing.Quartic.InOut)*/\n                    .onUpdate(function () {\n                        r.position.x = position.x;\n                        r.position.y = position.y;\n\n                        if (rotationFlag) {\n                            r.rotation.y = position.heading;\n                        } else {\n                            //console.log(currentHeading, newHeading);\n                        }\n                    })\n                    .onComplete(() => {\n                        //console.log('Moved> id:',id,'x:',x,'y:',y,'heading:',heading);\n                        r.rotation.y = position.heading;\n                        if (callback != null) callback('success');\n                    })\n                    .delay(50)\n                    .start();\n            } else {\n                // No move, only the rotation\n                r.rotation.y = newHeading;\n            }\n            return r;\n        }\n        if (callback != null) callback('undefined');\n    }\n\n    get_coordinates(id) {\n        var r = this.scene.getObjectByName(ROBOT_PREFIX + id);\n        if (r != undefined) {\n            console.log(`${r.position.x},${r.position.y},${r.position.z}`);\n            return r;\n        }\n        return null;\n    }\n\n    update() {\n        TWEEN.update();\n    }\n\n    requestSnapshot(mesh) {\n        return new Promise((resolve, reject) => {\n            const req = window.mqtt.publish(\n                window.channel + '/mgt/robots/snapshot',\n                JSON.stringify({ id: mesh.robotId })\n            );\n            resolve(!req);\n        });\n    }\n\n    alert(mesh) {\n        // Display an alert on window\n        const disp = document.querySelector('#msg-box');\n        const prevContent = document.getElementById('msg-content');\n        let content = document.createElement('div');\n        content.setAttribute('id', 'msg-content');\n        let nodeContent;\n        if (Config.isShowingRobotSnapshots) {\n            nodeContent = document.createTextNode(`${mesh.name} Snapshot Loading...`);\n            this.requestSnapshot(mesh);\n        } else {\n            nodeContent = document.createTextNode(`${mesh.name}`);\n        }\n        content.appendChild(nodeContent);\n        disp.replaceChild(content, prevContent);\n        disp.style.display = 'block';\n        setTimeout(function () {\n            disp.style.opacity = '1.0';\n            disp.style.display = 'none';\n        }, 10000);\n    }\n\n    prune() {\n        // Delete all duplicate robots\n        const objects = this.scene.children;\n        let valid = [];\n        Object.entries(objects).forEach((obj) => {\n            const name = obj[1]['name'];\n            // console.log('checking: ', name);\n\n            if (name.startsWith(ROBOT_PREFIX)) {\n                if (valid[name] === undefined) {\n                    // mark as valid\n                    valid[name] = 'valid';\n                } else {\n                    // this is a duplicate\n                    // console.log(obj[1]);\n                    removeLabel(obj[1]);\n                    this.scene.remove(obj[1]);\n                    console.log(name, ': duplicate');\n                }\n            }\n        });\n    }\n}\n","function getUrlVars() {\r\n    var vars = {};\r\n    var parts = window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (m, key, value) {\r\n        vars[key] = value;\r\n    });\r\n    return vars;\r\n}\r\n\r\nfunction getUrlParam(parameter, defaultvalue) {\r\n    var urlparameter = defaultvalue;\r\n    if (window.location.href.indexOf(parameter) > -1) {\r\n        urlparameter = getUrlVars()[parameter];\r\n    }\r\n    return urlparameter;\r\n}\r\n\r\nexport function getCredentials() {\r\n    // TODO: Add channel, host and port into URL (as optional parameters)\r\n    // Suggestion: Use JWT insted of exposed credentials\r\n    // Simulator server can provide the JWT token\r\n    const storedCredentials = localStorage.getItem('pera-swarm-credentials');\r\n    const key = getUrlParam('key', false);\r\n\r\n    const username = getUrlParam('username', false);\r\n    const password = getUrlParam('password', false);\r\n    const channel = getUrlParam('channel', false);\r\n    const port = getUrlParam('port', false);\r\n    const server = getUrlParam('server', false);\r\n    clearParams();\r\n\r\n    setTimeout(() => {\r\n        if (server !== false) {\r\n            localStorage.setItem('pera-swarm-server', server);\r\n        }\r\n        if (channel !== false) {\r\n            localStorage.setItem('pera-swarm-channel', channel);\r\n        }\r\n        if (port !== false) {\r\n            localStorage.setItem('pera-swarm-port', port);\r\n        }\r\n        if (key !== false) {\r\n            localStorage.setItem('pera-swarm-key', key);\r\n        }\r\n    }, 2000);\r\n\r\n    // Load the credentails\r\n    if (key !== false) {\r\n        // Having JWT Token\r\n        // TODO: manage token expiring\r\n\r\n        // Default: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJjcmVhdGVkQXQiOiIyMDIxLTA0LTE1IDEyOjU0OjI0IiwiZXhwaXJlZEF0IjoiMjAyMS0wNC0xNSAwMTo1NDoyNCIsImhvc3QiOiJ3ZWJzZXJ2aWNlcy5jZXlrb2QuY29tIiwicG9ydCI6ODg4MywicGF0aCI6IlwvbXF0dCIsImNoYW5uZWwiOiJ2MSIsInVzZXIiOiJzd2FybV91c2VyIiwicGFzcyI6InN3YXJtX3VzZXJlMTUifQ.F1jqHyu1jE0zTa03yYTwwdy8AJofBLXWLvYMYLNlna6dUjTkz6WdtwjBcrF_zDARM95r67RykOiWJCHDiWM52MQFx3EivqTYUNnA5fyNfsdJgrBR0q7eESM28MTSFoxnVi7memIKCSnkju3qDRZuZZdB5jaLP2BYg7ipgEFzt7E\r\n        console.log('Credentails: Loaded from JWT');\r\n\r\n        const credentials = parseJwt(key);\r\n        const username = credentials.user;\r\n        const password = credentials.pass;\r\n        const channel = credentials.channel;\r\n\r\n        if (credentials.host !== undefined) localStorage.setItem('pera-swarm-server', credentials.host);\r\n        if (credentials.port !== undefined) localStorage.setItem('pera-swarm-port', parseInt(credentials.port));\r\n        if (credentials.path !== undefined) localStorage.setItem('pera-swarm-path', credentials.path);\r\n        if (credentials.channel !== undefined) localStorage.setItem('pera-swarm-channel', credentials.channel);\r\n\r\n        localStorage.setItem('pera-swarm-credentials', JSON.stringify({ username, password, channel }));\r\n\r\n        return {\r\n            username,\r\n            password,\r\n            channel\r\n        };\r\n    } else if (username !== false && password !== false) {\r\n        // Having URL parameters\r\n        console.log('Credentails: Loaded from URL parameters');\r\n        localStorage.setItem('pera-swarm-credentials', JSON.stringify({ username, password, channel }));\r\n        return {\r\n            username,\r\n            password,\r\n            channel\r\n        };\r\n    } else if (username === false && password === false && storedCredentials !== null) {\r\n        // Having stored credentials\r\n        console.log('Credentails: Loaded from local storage');\r\n        return JSON.parse(storedCredentials);\r\n    }\r\n    return -1;\r\n}\r\n\r\nfunction parseJwt(token) {\r\n    var base64Url = token.split('.')[1];\r\n    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n    var jsonPayload = decodeURIComponent(\r\n        atob(base64)\r\n            .split('')\r\n            .map(function (c) {\r\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n            })\r\n            .join('')\r\n    );\r\n\r\n    return JSON.parse(jsonPayload);\r\n}\r\n\r\nfunction clearParams() {\r\n    const path = window.location.origin + window.location.pathname;\r\n    window.history.pushState({}, document.title, path);\r\n}\r\n","import * as THREE from 'three';\nimport TWEEN, { update } from '@tweenjs/tween.js';\nimport MQTT from 'paho-mqtt';\n\nimport Config from '../../data/config';\nimport Obstacle from '../components/obstacle';\nimport Robot from '../components/robot';\nimport { getCredentials } from '../helpers/urlHelper';\n\n// -----------------------------------------------------------------------------\n// MQTT Topics\n\n// Create and delete robot objects\nconst TOPIC_ROBOT_CREATE = 'robot/create';\nconst TOPIC_ROBOT_DELETE = 'robot/delete';\nconst TOPIC_ROBOT_BROADCAST = 'robot/msg/broadcast';\n\n// This will provide location data to the GUI\nconst TOPIC_LOC_INFO_FROM_SERVER = 'localization/data';\nconst TOPIC_LOC_INFO_FROM_LOC_SYSTEMS = 'localization/update';\n\n// This will request the localization data update from the server\nconst TOPIC_LOC_REQUEST = 'localization/data/?';\n\n// This will request obstacle data from the server\nconst TOPIC_OBSTACLE_REQUEST = 'obstacles/?';\n\n// This will send obstacle data as a JSON list\nconst TOPIC_OBSTACLES_LIST = 'obstacles';\nconst TOPIC_OBSTACLES_DELETE = 'obstacles/delete';\nconst TOPIC_OBSTACLES_DELETE_ALL = 'obstacles/delete/all';\n\n// Robot Color - NeoPixel\nconst TOPIC_CHANGE_COLOR = 'output/neopixel';\n\n// This will help to remote update the parameters in here\nconst TOPIC_MANAGEMENT_VISUALIZER = 'mgt/visualizer';\n\n// Robot management snapshot topic\nconst TOPIC_MANAGEMENT_SNAPSHOT = 'mgt/robots/?';\n\n// -----------------------------------------------------------------------------\n\nexport default class MQTTClient {\n    constructor(scene) {\n        this.scene = scene;\n        this.robot = new Robot(scene);\n        this.obstacles = new Obstacle(scene);\n\n        const credentials = getCredentials();\n        this.updateChannel();\n\n        if (credentials === -1) {\n            alert('Unauthorized access! The Visualizer will not work properly.');\n        } else {\n            const { username, password } = credentials;\n            // create a random client Id\n            const client_id = 'client_' + Math.random().toString(36).substring(2, 15);\n            this.client = new MQTT.Client(Config.mqtt.server, Config.mqtt.port, Config.mqtt.path, client_id);\n\n            window.mqtt = this.client;\n            window.channel = credentials.channel === undefined ? 'v1' : credentials.channel;\n\n            this.client.connect({\n                userName: username,\n                password: password,\n                reconnect: true,\n                useSSL: true,\n                cleanSession: false,\n                onSuccess: () => {\n                    console.log('MQTT: connected');\n\n                    // Subscribe to topics\n                    this.subscribe(TOPIC_LOC_INFO_FROM_SERVER);\n                    this.subscribe(TOPIC_LOC_INFO_FROM_LOC_SYSTEMS);\n\n                    this.subscribe(TOPIC_ROBOT_CREATE);\n                    this.subscribe(TOPIC_ROBOT_DELETE);\n                    this.subscribe(TOPIC_ROBOT_BROADCAST);\n\n                    this.subscribe(TOPIC_CHANGE_COLOR);\n                    this.subscribe(TOPIC_OBSTACLES_LIST);\n                    this.subscribe(TOPIC_OBSTACLES_DELETE);\n                    this.subscribe(TOPIC_OBSTACLES_DELETE_ALL);\n                    this.subscribe(TOPIC_MANAGEMENT_VISUALIZER);\n                    this.subscribe(TOPIC_MANAGEMENT_SNAPSHOT);\n\n                    // Request for obstacle data\n                    // this.publish(TOPIC_OBSTACLE_REQUEST, Config.mixedReality.obstacles);\n                    this.publish(TOPIC_OBSTACLE_REQUEST, 'M');\n\n                    // Request for coordinate data\n                    this.publish(TOPIC_LOC_REQUEST, Config.mixedReality.robots);\n\n                    // Access globally\n                    window.robot = this.robot;\n                    window.obstacles = this.obstacles;\n\n                    this.client.onMessageArrived = this.onMessageArrived;\n                    this.client.onConnectionLost = this.onConnectionLost;\n                },\n                onFailure: () => {\n                    console.log('MQTT: connection failed');\n                    alert('MQTT: connection failed!');\n                }\n            });\n        }\n    }\n\n    updateChannel() {\n        // const channelHash = window.location.hash;\n        // if ((channelHash != '') & (channelHash.length > 1)) {\n        //     // window.channel = channelHash.substring(1);\n        //     window.channel = channelHash.split('#')[1].split('?')[0];\n        // } else {\n        //     window.channel = Config.mqtt.channel;\n        // }\n        // console.log('MQTT: channel=', window.channel, channelHash);\n        // return true;\n    }\n\n    onConnectionLost(responseObject) {\n        if (responseObject.errorCode !== 0) {\n            console.log('MQTT: onConnectionLost:' + responseObject.errorMessage);\n            console.log('MQTT: reconnecting');\n        }\n    }\n\n    onMessageArrived(packet) {\n        const msg = packet.payloadString.trim();\n        const t = packet.destinationName;\n        const topic = t.substring(t.indexOf('/') + 1);\n\n        // console.log('MQTT: ' + topic + ' > ' + msg);\n\n        if (topic == TOPIC_ROBOT_CREATE) {\n            try {\n                const data = JSON.parse(msg);\n                window.robot.create(data.id, data.x, data.y, data.heading, data.reality);\n            } catch (e) {\n                console.error(e);\n            }\n        } else if (topic == TOPIC_ROBOT_DELETE) {\n            try {\n                var data = JSON.parse(msg);\n                window.robot.delete(data.id);\n            } catch (e) {\n                console.error(e);\n            }\n        } else if (topic == TOPIC_LOC_INFO_FROM_LOC_SYSTEMS || topic == TOPIC_LOC_INFO_FROM_SERVER) {\n            //Data from the localization server or virtual robots\n            try {\n                const data = JSON.parse(msg);\n                const REALITY = Config.mixedReality.robots;\n\n                // Render only the received data is same as configured reality\n                // or configuration allowed mixed reality\n                if (data != undefined) {\n                    // Have data on this reality\n                    for (const i in data) {\n                        const { id, x, y, heading } = data[i];\n                        const reality = data[i].reality == undefined ? 'V' : data[i].reality;\n\n                        if (reality === REALITY || REALITY === 'M') {\n                            // Create only if robots match with platform's allowed reality\n                            if (window.robot.exists(id) == undefined) {\n                                window.robot.create(id, x, y, heading, reality);\n                            } else {\n                                window.robot.move(id, x, y, heading);\n                                window.robot.setReality(id, reality);\n                            }\n                        } else {\n                            // reality not matching; remove\n                            robot.delete(id);\n                        }\n                    }\n                }\n            } catch (e) {\n                console.error(e);\n            }\n        } else if (topic == TOPIC_OBSTACLES_LIST) {\n            // Create obstacles in the arena\n            try {\n                const data = JSON.parse(msg);\n                window.obstacles.createList(data);\n            } catch (e) {\n                console.error(e);\n            }\n        } else if (topic == TOPIC_OBSTACLES_DELETE) {\n            // Delete obstacle given in the id\n            const data = JSON.parse(msg);\n            console.log(data);\n\n            window.obstacles.deleteIfExists(data.id);\n        } else if (topic == TOPIC_OBSTACLES_DELETE_ALL) {\n            // Delete all obstacles\n            window.obstacles.deleteAll();\n        } else if (topic == TOPIC_CHANGE_COLOR) {\n            try {\n                const data = JSON.parse(msg);\n                window.robot.changeColor(data.id, data.R, data.G, data.B, data.ambient);\n            } catch (e) {\n                console.error(e);\n            }\n        } else if (topic == TOPIC_ROBOT_BROADCAST) {\n            // Display a popup message\n            // TODO: Do this by a generalized function call\n\n            if (msg != 'ID? -1') {\n                const m = 'Broadcast Message: ' + msg.split(' ')[0];\n                const t = 1000 + msg.length * 95;\n\n                const disp = document.querySelector('#msg-box');\n                disp.innerHTML = m;\n                disp.style.display = 'block';\n\n                setTimeout(function () {\n                    document.querySelector('#msg-box').style.display = 'none';\n                }, t);\n            }\n        } else if (topic == TOPIC_MANAGEMENT_VISUALIZER) {\n            if (msg === 'REFRESH') {\n                console.log('page refresh request');\n                location.reload();\n            } else if (msg.startsWith('MSG')) {\n                const m = 'Notice: ' + msg.substring(4);\n                const t = 2000 + m.length * 95;\n\n                // Display a popup message\n                // TODO: Do this by a generalized function call\n                const disp = document.querySelector('#msg-box');\n                disp.innerHTML = m;\n                disp.style.display = 'block';\n\n                setTimeout(function () {\n                    document.querySelector('#msg-box').style.display = 'none';\n                }, t);\n            } else {\n                console.log('>Management:', msg);\n            }\n        } else if (topic == TOPIC_MANAGEMENT_SNAPSHOT) {\n            const snapshot = JSON.parse(msg);\n            console.log('Robot:Snapshot', snapshot);\n            if (snapshot !== -1) {\n                let i = 0,\n                    subElement;\n                const disp = document.querySelector('#msg-box');\n                const prevContent = document.getElementById('msg-content');\n                const content = document.createElement('div');\n                content.setAttribute('id', 'msg-content');\n                const titleElement = document.createElement('h3');\n                titleElement.textContent = `Robot [${snapshot.id}] Snapshot`;\n                content.appendChild(titleElement);\n                for (const variable in snapshot) {\n                    if (Object.prototype.hasOwnProperty.call(snapshot, variable)) {\n                        if (i === 0) {\n                            subElement = document.createElement('h4');\n                        } else {\n                            subElement = document.createElement('p');\n                        }\n                        if (variable === 'data') {\n                            for (const [key, value] of Object.entries(snapshot.data)) {\n                                subElement.textContent = `${key}: ${value}`;\n                            }\n                        } else {\n                            subElement.textContent = `${variable}: ${JSON.stringify(snapshot[variable])}`;\n                        }\n                        content.appendChild(subElement);\n                        i += 1;\n                    }\n                }\n                disp.replaceChild(content, prevContent);\n                disp.style.display = 'block';\n                disp.style.opacity = '0.5';\n                setTimeout(function () {\n                    disp.style.opacity = '1.0';\n                    disp.style.display = 'none';\n                }, 6000);\n            }\n        }\n    }\n\n    subscribe(topic, callback) {\n        const subTopic = window.channel + '/' + topic;\n        this.client.subscribe(subTopic);\n        console.log('MQTT: subscribed', subTopic);\n        if (callback != null) callback();\n    }\n\n    publish(topic, message, callback) {\n        var payload = new MQTT.Message(message);\n        const pubTopic = window.channel + '/' + topic;\n        payload.destinationName = pubTopic;\n        this.client.send(payload);\n        console.log('MQTT: published', pubTopic);\n\n        if (callback != null) callback();\n    }\n}\n","// Global imports -\nimport * as THREE from 'three';\n\nimport TWEEN, { update } from '@tweenjs/tween.js';\n\n// Components\nimport Renderer from './components/renderer';\nimport label from './components/label';\nimport Camera from './components/camera';\nimport Light from './components/light';\nimport Controls from './components/controls';\nimport Geometry from './components/geometry';\nimport Environment from './components/environment';\n\n// Helpers\nimport MeshHelper from './helpers/meshHelper';\n\n// Model\nimport Texture from './model/texture';\nimport Model from './model/model';\n\n// Managers\nimport Interaction from './managers/interaction';\nimport DatGUI from './managers/datGUI';\n\n// Newly implemented classes\nimport MQTTClient from './managers/mqttClient';\n\n// Config data\nimport Config from './../data/config';\n\n// STLLoader\nconst STLLoader = require('three-stl-loader')(THREE);\n\n// Global Variables\nlet camera, labelRenderer, INTERSECTED, selectedLabel;\n\n// For click event on robots\nconst raycaster = new THREE.Raycaster();\nconst mouse = new THREE.Vector2();\n\n// This class instantiates and ties all of the components together, starts the loading process and renders the main loop\nexport default class Main {\n    constructor(container) {\n        // Set container property to container element\n        this.container = container;\n\n        // Start Three clock\n        this.clock = new THREE.Clock();\n\n        // Main scene creation\n        this.scene = new THREE.Scene();\n        window.scene = this.scene; // config as a global variable\n        window.scene_scale = Config.scale;\n        // High level reality flag\n        window.selectedReality = Config.selectedReality;\n\n        this.scene.fog = new THREE.FogExp2(Config.fog.color, Config.fog.near);\n\n        this.mqtt = new MQTTClient(this.scene);\n\n        // Get Device Pixel Ratio first for retina\n        if (window.devicePixelRatio) {\n            Config.dpr = window.devicePixelRatio;\n        }\n\n        // Main renderer constructor\n        this.renderer = new Renderer(this.scene, container);\n\n        // Components instantiations\n        camera = new Camera(this.renderer.threeRenderer);\n        this.controls = new Controls(camera.threeCamera, container);\n        this.light = new Light(this.scene);\n        this.camera = camera;\n\n        // Create and place lights in scene\n        const lights = ['ambient', 'directional', 'point', 'hemi'];\n        lights.forEach((light) => this.light.place(light));\n\n        // Set up Stats if dev environment\n        if (Config.isDev && Config.isShowingStats) {\n            this.stats = new Stats();\n            this.container.appendChild(this.stats.dom);\n        }\n\n        if (Config.isShowingLables) {\n            this.labelRenderer = label();\n            this.container.appendChild(this.labelRenderer.domElement);\n        }\n\n        // Set up gui\n        if (Config.isDev) {\n            this.gui = new DatGUI(this);\n        }\n\n        // Instantiate texture class\n        this.texture = new Texture();\n\n        // Start loading the textures and then go on to load the model after the texture Promises have resolved\n        this.texture.load().then(() => {\n            this.manager = new THREE.LoadingManager();\n\n            // Create the environment ---------------------------------------------\n            this.environment = new Environment();\n\n            // -----------------------------------------------------------------\n\n            if (Config.isDev) {\n                // this.meshHelper = new MeshHelper(this.scene, this.model.obj);\n                //\n                // if (Config.mesh.enableHelper) this.meshHelper.enable();\n\n                this.gui.load(this);\n                this.gui.show();\n            }\n            // -----------------------------------------------------------------\n\n            // onProgress callback\n            this.manager.onProgress = (item, loaded, total) => {\n                console.log(`${item}: ${loaded} ${total}`);\n            };\n\n            // All loaders done now\n            this.manager.onLoad = () => {\n                // alert('Loaded');\n                console.log('Loading complete!');\n\n                // Set up interaction manager with the app now that the model is finished loading\n                new Interaction(\n                    this.renderer.threeRenderer,\n                    this.scene,\n                    camera.threeCamera,\n                    this.controls.threeControls\n                );\n\n                // Add dat.GUI controls if dev\n                if (Config.isDev) {\n                    this.meshHelper = new MeshHelper(this.scene, this.model.obj);\n\n                    if (Config.mesh.enableHelper) this.meshHelper.enable();\n\n                    // this.gui.load(this, this.model.obj);\n                    // this.gui.show();\n                }\n\n                // Everything is now fully loaded\n                Config.isLoaded = true;\n                this.container.querySelector('#loading').style.display = 'none';\n            };\n        });\n\n        // Start render which does not wait for model fully loaded\n\n        this.render();\n        this.container.querySelector('#loading').style.display = 'none';\n\n        // Eventlistner for catching mouse click events\n        window.addEventListener('click', this.onDocumentMouseDown, false);\n        // Eventlistner for catching mouse move events\n        // document.addEventListener('mousemove', this.onDocumentMouseMove);\n    }\n\n    onDocumentMouseDown(event) {\n        event.preventDefault();\n\n        mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n        mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n\n        raycaster.setFromCamera(mouse, camera.threeCamera);\n\n        const intersects = raycaster.intersectObjects(scene.children);\n        if (intersects.length > 0) {\n            const object = intersects[0].object;\n            if (INTERSECTED) INTERSECTED.material.setValues({ opacity: INTERSECTED.currentOpacity });\n            INTERSECTED = object;\n            selectedLabel = INTERSECTED.children[0];\n            INTERSECTED.currentOpacity = INTERSECTED.material.opacity;\n            INTERSECTED.labelsVisibility = INTERSECTED.material.labelVisibility;\n            if (selectedLabel !== undefined && selectedLabel.visible !== undefined && Config.isShowingLables) {\n                selectedLabel.visible = !selectedLabel.visible;\n            }\n            INTERSECTED.material.selected = !INTERSECTED.material.selected;\n            if (INTERSECTED.name.startsWith('Obstacle')) {\n                // Obstacle selection event handling\n                // if (INTERSECTED.material.selected) {\n                //     INTERSECTED.currentHex = INTERSECTED.material.emissive.getHex();\n                //     INTERSECTED.material.emissive.setHex(0xf95f4a);\n                // } else {\n                //     INTERSECTED.currentHex = INTERSECTED.material.userData.originalEmmisive;\n                //     INTERSECTED.material.emissive.setHex(INTERSECTED.currentHex);\n                // }\n            } else if (INTERSECTED.name.startsWith('Robot')) {\n                // Robot selection event handling\n                // TODO: Consider Reality filtering too...\n                if (INTERSECTED.material.selected) {\n                    INTERSECTED.material.setValues({ opacity: 0.5 });\n                } else {\n                    INTERSECTED.material.setValues({ opacity: 1 });\n                }\n                if (INTERSECTED.clickEvent !== undefined) {\n                    INTERSECTED.clickEvent(INTERSECTED);\n                }\n            }\n        } else {\n            if (INTERSECTED) INTERSECTED.material.setValues({ opacity: INTERSECTED.currentOpacity });\n            INTERSECTED = null;\n        }\n    }\n\n    onDocumentMouseMove(event) {\n        event.preventDefault();\n\n        mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n        mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n\n        raycaster.setFromCamera(mouse, camera.threeCamera);\n\n        const intersects = raycaster.intersectObjects(scene.children, true);\n        if (intersects.length > 0) {\n            const object = intersects[0].object;\n            if (INTERSECTED !== object) {\n                if (INTERSECTED) INTERSECTED.material.setValues({ opacity: INTERSECTED.currentOpacity });\n                INTERSECTED = object;\n                selectedLabel = INTERSECTED.children[0];\n                INTERSECTED.currentOpacity = INTERSECTED.material.opacity;\n                INTERSECTED.currentColor = INTERSECTED.material.opacity;\n                INTERSECTED.material.setValues({ color: 0x03dffc, opacity: 0.75 });\n            }\n        } else {\n            if (INTERSECTED)\n                INTERSECTED.material.setValues({ opacity: 1.0, color: INTERSECTED.material.userData.originalColor });\n            INTERSECTED = null;\n        }\n    }\n\n    render() {\n        // Call render function and pass in created scene and camera\n        this.renderer.render(this.scene, camera.threeCamera);\n\n        // render labels if enabled\n        if (Config.isShowingLables) {\n            this.labelRenderer.domElement.hidden = false;\n        } else {\n            this.labelRenderer.domElement.hidden = true;\n        }\n        this.labelRenderer.render(this.scene, camera.threeCamera);\n\n        // Delta time is sometimes needed for certain updates\n        //const delta = this.clock.getDelta();\n\n        // Call any vendor or module frame updates here\n        TWEEN.update();\n        this.controls.threeControls.update();\n\n        camera.threeCamera.updateMatrixWorld();\n\n        // update stats if dev environment\n        if (Config.isDev && Config.isShowingStats) {\n            this.stats.update();\n        }\n\n        // RAF\n        requestAnimationFrame(this.render.bind(this)); // Bind the main class instead of window object\n    }\n}\n","import Config from './data/config';\nimport Detector from './utils/detector';\nimport Main from './app/main';\n\n// Styles\nimport './../css/app.scss';\n// Check environment and set the Config helper\nif (__ENV__ === 'dev') {\n    console.log('----- RUNNING IN DEV ENVIRONMENT! -----');\n    Config.isDev = true;\n}\n\nfunction init() {\n    // Check for webGL capabilities\n    if (!Detector.webgl) {\n        Detector.addGetWebGLMessage();\n    } else {\n        const container = document.getElementById('appContainer');\n        new Main(container);\n    }\n}\n\ninit();\n"],"names":["resolvedConfig","config","scale","arena","size","minX","maxX","minY","maxY","mqtt","server","localStorage","getItem","port","parseInt","path","channel","mixedReality","obstacles","robots","selectedReality","selectedRealities","real","virtual","hiddenOpacity","isDev","isShowingStats","isShowingLables","labelsVisibility","isShowingRobotSnapshots","isLoaded","isTweening","isRotating","isMouseMoving","isMouseOver","maxAnisotropy","dpr","easing","TWEEN","duration","texture","imageFiles","name","image","mesh","enableHelper","wireframe","translucent","material","color","emissive","fog","near","camera","fov","far","aspect","posX","posY","posZ","controls","autoRotate","autoRotateSpeed","rotateSpeed","zoomSpeed","minDistance","maxDistance","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","Infinity","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","target","x","y","z","ambientLight","enabled","directionalLight","intensity","shadow","helperEnabled","bias","mapWidth","mapHeight","top","right","bottom","left","pointLight","distance","hemiLight","groundColor","storedConfig","document","location","href","JSON","parse","saveConfig","data","setItem","stringify","canvas","window","CanvasRenderingContext2D","webgl","createElement","WebGLRenderingContext","getContext","e","workers","Worker","fileapi","File","FileReader","FileList","Blob","getWebGLErrorMessage","element","id","style","fontFamily","fontSize","fontWeight","textAlign","background","padding","width","margin","this","innerHTML","join","addGetWebGLMessage","parameters","parent","undefined","body","appendChild","Renderer","scene","container","threeRenderer","THREE","antialias","setClearColor","setPixelRatio","devicePixelRatio","domElement","shadowMap","type","Config","capabilities","getMaxAnisotropy","updateSize","addEventListener","setSize","offsetWidth","offsetHeight","render","addLabel","prefix","object","visibility","className","textContent","reality","marginTop","elementLabel","CSS2DObject","position","set","visible","add","removeLabel","remove","Camera","renderer","height","threeCamera","up","updateProjectionMatrix","Light","init","castShadow","mapSize","directionalLightHelper","lightName","Controls","threeControls","OrbitControls","enableRotate","Environment","console","log","scene_scale","geometry","depthWrite","userData","originalColor","ground","receiveShadow","grid","round","rotation","opacity","transparent","_v1","Vector3","_v2","_normalMatrix","Matrix3","_keys","VertexNormalsHelper","hex","nNormals","objGeometry","isGeometry","faces","length","isBufferGeometry","attributes","normal","count","BufferGeometry","positions","Float32BufferAttribute","setAttribute","LineSegments","LineBasicMaterial","toneMapped","matrixAutoUpdate","update","prototype","Object","create","constructor","idx","updateMatrixWorld","getNormalMatrix","matrixWorld","vertices","i","l","face","j","jl","vertexNormals","vertex","copy","applyMatrix4","applyMatrix3","normalize","multiplyScalar","setXYZ","objPos","objNorm","getX","getY","getZ","needsUpdate","MeshHelper","wireLine","depthTest","edges","edgesLine","vertexHelper","boxHelper","Helpers","fn","threshhold","scope","last","deferTimer","context","now","Date","args","arguments","clearTimeout","setTimeout","apply","xhr","lengthComputable","percentComplete","loaded","total","error","value","replace","setHex","shading","vertexColors","side","verticesNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","materialKey","textures","key","Texture","loader","promiseArray","setPath","forEach","imageFile","push","Promise","resolve","reject","load","anisotropy","modelOBJ","Error","then","keys","reason","GLTFLoader","manager","Loader","dracoLoader","ddsLoader","GLTFRegistry","objects","get","removeAll","assign","url","onLoad","onProgress","onError","resourcePath","LoaderUtils","itemStart","_onError","itemError","itemEnd","FileLoader","setResponseType","crossOrigin","setWithCredentials","gltf","setDRACOLoader","setDDSLoader","content","extensions","Uint8Array","BINARY_EXTENSION_HEADER_MAGIC","EXTENSIONS","KHR_BINARY_GLTF","GLTFBinaryExtension","json","asset","version","extensionsUsed","extensionName","extensionsRequired","KHR_LIGHTS_PUNCTUAL","GLTFLightsExtension","KHR_MATERIALS_CLEARCOAT","GLTFMaterialsClearcoatExtension","KHR_MATERIALS_UNLIT","GLTFMaterialsUnlitExtension","KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS","GLTFMaterialsPbrSpecularGlossinessExtension","KHR_DRACO_MESH_COMPRESSION","GLTFDracoMeshCompressionExtension","MSFT_TEXTURE_DDS","GLTFTextureDDSExtension","KHR_TEXTURE_TRANSFORM","GLTFTextureTransformExtension","KHR_MESH_QUANTIZATION","GLTFMeshQuantizationExtension","indexOf","warn","GLTFParser","extension","lightDefs","lights","loadLight","lightIndex","lightNode","lightDef","Color","fromArray","range","DirectionalLight","PointLight","SpotLight","spot","innerConeAngle","outerConeAngle","angle","penumbra","decay","getMaterialType","MeshBasicMaterial","extendParams","materialParams","materialDef","parser","pending","metallicRoughness","pbrMetallicRoughness","Array","isArray","baseColorFactor","array","baseColorTexture","assignTexture","all","MeshPhysicalMaterial","clearcoatFactor","clearcoat","clearcoatTexture","clearcoatRoughnessFactor","clearcoatRoughness","clearcoatRoughnessTexture","clearcoatNormalTexture","clearcoatNormalScale","Vector2","BINARY_EXTENSION_HEADER_LENGTH","BINARY_EXTENSION_CHUNK_TYPES","BIN","headerView","DataView","header","magic","slice","getUint32","chunkView","chunkIndex","byteLength","chunkLength","chunkType","contentArray","byteOffset","preload","GLTFMeshStandardSGMaterial","params","MeshStandardMaterial","isGLTFSpecularGlossinessMaterial","specularMapParsFragmentChunk","glossinessMapParsFragmentChunk","specularMapFragmentChunk","glossinessMapFragmentChunk","lightPhysicalFragmentChunk","uniforms","specular","glossiness","specularMap","glossinessMap","_extraUniforms","onBeforeCompile","shader","uniformName","fragmentShader","defineProperties","v","defines","USE_GLOSSINESSMAP","USE_ROUGHNESSMAP","metalness","roughness","metalnessMap","roughnessMap","setValues","specularGlossinessParams","pbrSpecularGlossiness","diffuseFactor","diffuseTexture","glossinessFactor","specularFactor","specularGlossinessTexture","specGlossMapDef","createMaterial","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","normalMapType","TangentSpaceNormalMap","normalScale","displacementMap","displacementScale","displacementBias","alphaMap","envMap","envMapIntensity","refractionRatio","GLTFCubicSplineInterpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","Interpolant","decodePrimitive","primitive","bufferViewIndex","bufferView","gltfAttributeMap","threeAttributeMap","attributeNormalizedMap","attributeTypeMap","attributeName","threeAttributeName","ATTRIBUTES","toLowerCase","accessorDef","accessors","componentType","WEBGL_COMPONENT_TYPES","normalized","getDependency","decodeDracoFile","attribute","extendTexture","transform","clone","offset","repeat","texCoord","source","copySampleValue_","index","result","values","valueSize","beforeStart_","afterEnd_","interpolate_","i1","t0","t","t1","stride","stride2","stride3","td","p","pp","ppp","offset1","offset0","s2","s3","s0","s1","p0","m0","p1","m1","WEBGL_CONSTANTS","Int8Array","Int16Array","Uint16Array","Uint32Array","Float32Array","WEBGL_FILTERS","NearestFilter","LinearFilter","NearestMipmapNearestFilter","LinearMipmapNearestFilter","NearestMipmapLinearFilter","LinearMipmapLinearFilter","WEBGL_WRAPPINGS","ClampToEdgeWrapping","MirroredRepeatWrapping","RepeatWrapping","WEBGL_TYPE_SIZES","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","WEIGHTS_0","JOINTS_0","PATH_PROPERTIES","translation","weights","INTERPOLATION","CUBICSPLINE","LINEAR","InterpolateLinear","STEP","InterpolateDiscrete","ALPHA_MODES","MIME_TYPE_FORMATS","RGBAFormat","RGBFormat","resolveURL","test","addUnknownExtensionsToUserData","knownExtensions","objectDef","gltfExtensions","assignExtrasToUserData","gltfDef","extras","updateMorphTargets","meshDef","il","morphTargetInfluences","targetNames","morphTargetDictionary","createAttributesKey","attributesKey","sort","options","cache","primitiveCache","textureLoader","TextureLoader","setCrossOrigin","fileLoader","addPrimitiveAttributes","primitiveDef","assignAttributeAccessor","accessorIndex","accessor","gltfAttributeName","indices","setIndex","box","Box3","min","max","targets","maxDisplacement","vector","setX","abs","setY","setZ","expandByVector","boundingBox","sphere","Sphere","getCenter","center","radius","distanceTo","boundingSphere","computeBounds","hasMorphPosition","hasMorphNormal","pendingPositionAccessors","pendingNormalAccessors","pendingAccessor","morphPositions","morphNormals","morphAttributes","morphTargetsRelative","addMorphTargets","toTrianglesDrawMode","drawMode","getIndex","getAttribute","numberOfTriangles","newIndices","TriangleFanDrawMode","newGeometry","markDefs","getDependencies","dependencies","scenes","animations","cameras","nodeDefs","nodes","skinDefs","skins","meshDefs","meshes","meshReferences","meshUses","skinIndex","skinLength","joints","isBone","nodeIndex","nodeLength","nodeDef","skin","isSkinnedMesh","cacheKey","dependency","loadScene","loadNode","loadMesh","loadAccessor","loadBufferView","loadBuffer","loadMaterial","loadTexture","loadSkin","loadAnimation","loadCamera","defs","def","bufferIndex","bufferDef","buffers","uri","bufferViewDef","bufferViews","buffer","sparse","pendingBufferViews","bufferAttribute","itemSize","TypedArray","elementBytes","BYTES_PER_ELEMENT","itemBytes","byteStride","ibSlice","floor","ibCacheKey","ib","InterleavedBuffer","InterleavedBufferAttribute","BufferAttribute","itemSizeIndices","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","setW","textureIndex","URL","self","webkitURL","textureDef","textureExtensions","sourceURI","images","isObjectURL","blob","mimeType","createObjectURL","getHandler","revokeObjectURL","flipY","format","sampler","samplers","magFilter","minFilter","wrapS","wrapT","mapName","mapDef","isCompressedTexture","assignFinalMaterial","useVertexTangents","tangent","useVertexColors","useFlatShading","useSkinning","useMorphTargets","useMorphNormals","isPoints","uuid","pointsMaterial","PointsMaterial","Material","sizeAttenuation","isLine","lineMaterial","cachedMaterial","skinning","vertexTangents","flatShading","morphTargets","uv2","uv","materialIndex","materialType","materials","materialExtensions","sgExtension","kmuExtension","metallicFactor","roughnessFactor","metallicRoughnessTexture","doubleSided","DoubleSide","alphaMode","alphaTest","alphaCutoff","normalTexture","occlusionTexture","strength","emissiveFactor","emissiveTexture","clearcoatExtension","encoding","sRGBEncoding","loadGeometries","primitives","createDracoPrimitive","dracoExtension","geometryPromise","mode","cached","promise","meshIndex","FrontSide","results","geometries","SkinnedMesh","Mesh","skinWeight","normalizeSkinWeights","TriangleStripDrawMode","Line","LineLoop","Points","group","Group","cameraIndex","cameraDef","PerspectiveCamera","MathUtils","yfov","aspectRatio","znear","zfar","OrthographicCamera","xmag","ymag","skinDef","skinEntry","inverseBindMatrices","animationIndex","animationDef","pendingNodes","pendingInputAccessors","pendingOutputAccessors","pendingSamplers","pendingTargets","channels","node","input","output","inputAccessors","outputAccessors","tracks","inputAccessor","outputAccessor","TypedKeyframeTrack","updateMatrix","NumberKeyframeTrack","QuaternionKeyframeTrack","VectorKeyframeTrack","targetName","interpolation","traverse","isMesh","outputArray","scaled","track","createInterpolant","times","getValueSize","isInterpolantFactoryMethodGLTFCubicSpline","AnimationClip","instanceNum","o","light","Bone","Object3D","PropertyBinding","matrix","Matrix4","quaternion","buildNodeHierachy","nodeId","parentObject","pendingJoints","jointNodes","bones","boneInverses","jointNode","mat","bind","Skeleton","children","child","sceneIndex","sceneDef","nodeIds","ALIAS","down","space","tab","escape","Keyboard","keyCodes","event","onKeyChange","onBlur","removeEventListener","prop","keyCode","keyDesc","split","pressed","toUpperCase","charCodeAt","aliases","aliasKeys","shiftKey","ctrlKey","altKey","metaKey","Interaction","timeout","keyboard","onMouseMove","onMouseLeave","onMouseOver","eventMatches","preventDefault","DatGUI","main","gui","dat","GUI","useLocalStorage","model","meshHelper","onChange","labelsFolder","addFolder","toggleLabels","realityFolder","listen","toggleReality","otherFolder","reload","close","variable","startsWith","selected","entries","obj","show","destroy","OBSTACLE_PREFIX","Obstacle","callback","obs","obstacle","createGeometry","labelVisibility","originalEmmisive","getHex","random","name_temp","toString","substring","deleteIfExists","calculateZ","radX","radY","radZ","g","TypeError","createBoxGeometry","depth","createCylinderGeometry","radiusTop","radiusBottom","createSphereGeometry","heightSegments","radialSegments","widthSegments","m","properties","getObjectByName","STLLoader","require","ROBOT_PREFIX","Robot","that","created","setInterval","prune","R","G","B","ambient","r","setRGB","heading","REALITY","robotId","clickEvent","robot","alert","setReality","move","currentHeading","newHeading","rotationFlag","sqrt","pow","to","onUpdate","onComplete","delay","start","publish","nodeContent","disp","querySelector","prevContent","getElementById","createTextNode","requestSnapshot","replaceChild","display","valid","getUrlParam","parameter","defaultvalue","vars","urlparameter","getCredentials","base64","jsonPayload","storedCredentials","username","password","origin","pathname","history","pushState","title","credentials","decodeURIComponent","atob","c","user","pass","host","TOPIC_ROBOT_CREATE","TOPIC_ROBOT_DELETE","TOPIC_ROBOT_BROADCAST","TOPIC_LOC_INFO_FROM_SERVER","TOPIC_LOC_INFO_FROM_LOC_SYSTEMS","TOPIC_LOC_REQUEST","TOPIC_OBSTACLE_REQUEST","TOPIC_OBSTACLES_LIST","TOPIC_OBSTACLES_DELETE","TOPIC_OBSTACLES_DELETE_ALL","TOPIC_CHANGE_COLOR","TOPIC_MANAGEMENT_VISUALIZER","TOPIC_MANAGEMENT_SNAPSHOT","MQTTClient","updateChannel","client_id","client","MQTT","connect","userName","reconnect","useSSL","cleanSession","onSuccess","subscribe","onMessageArrived","onConnectionLost","onFailure","responseObject","errorCode","errorMessage","packet","msg","payloadString","trim","destinationName","topic","exists","createList","deleteAll","changeColor","snapshot","subElement","titleElement","hasOwnProperty","call","subTopic","message","payload","pubTopic","send","INTERSECTED","selectedLabel","raycaster","mouse","Main","clock","place","stats","Stats","dom","labelRenderer","CSS2DRenderer","innerWidth","innerHeight","isShowingObstacleLables","isShowingRobotLables","environment","item","enable","onDocumentMouseDown","clientX","clientY","setFromCamera","intersects","intersectObjects","currentOpacity","currentColor","hidden","requestAnimationFrame","Detector"],"sourceRoot":""}