{"version":3,"file":"main.bundle.js","mappings":"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","sources":["webpack://pera-swarm-visualizer/./src/js/data/config.js","webpack://pera-swarm-visualizer/./src/js/utils/detector.js","webpack://pera-swarm-visualizer/./src/js/app/components/renderer.js","webpack://pera-swarm-visualizer/./src/js/app/components/label.js","webpack://pera-swarm-visualizer/./src/js/app/components/camera.js","webpack://pera-swarm-visualizer/./src/js/app/components/light.js","webpack://pera-swarm-visualizer/./src/js/app/components/controls.js","webpack://pera-swarm-visualizer/./src/js/app/components/environment.js","webpack://pera-swarm-visualizer/./src/js/app/helpers/vertexNormalsHelper.js","webpack://pera-swarm-visualizer/./src/js/app/helpers/meshHelper.js","webpack://pera-swarm-visualizer/./src/js/utils/helpers.js","webpack://pera-swarm-visualizer/./src/js/app/model/texture.js","webpack://pera-swarm-visualizer/./src/js/app/loaders/GLTFLoader.js","webpack://pera-swarm-visualizer/./src/js/utils/keyboard.js","webpack://pera-swarm-visualizer/./src/js/app/managers/interaction.js","webpack://pera-swarm-visualizer/./src/js/app/managers/datGUI.js","webpack://pera-swarm-visualizer/./src/js/app/components/obstacle.js","webpack://pera-swarm-visualizer/./src/js/app/components/robot.js","webpack://pera-swarm-visualizer/./src/js/app/helpers/urlHelper.js","webpack://pera-swarm-visualizer/./src/js/app/managers/mqttClient.js","webpack://pera-swarm-visualizer/./src/js/app/main.js","webpack://pera-swarm-visualizer/./src/js/app.js"],"sourcesContent":["import TWEEN from '@tweenjs/tween.js';\r\n\r\nlet resolvedConfig;\r\n\r\n// This object contains the state of the app\r\nconst config = {\r\n    scale: 1,\r\n    arena: {\r\n        size: 180,\r\n        minX: -90,\r\n        maxX: 90,\r\n        minY: -90,\r\n        maxY: 90\r\n    },\r\n    mqtt: {\r\n        server: localStorage.getItem('pera-swarm-server') || 'webservices.ceykod.com',\r\n        port: parseInt(localStorage.getItem('pera-swarm-port')) || 8883,\r\n        path: localStorage.getItem('pera-swarm-path') || '/mqtt',\r\n        channel: localStorage.getItem('pera-swarm-channel') || 'v1'\r\n    },\r\n    mixedReality: {\r\n        obstacles: 'M',\r\n        robots: 'M'\r\n    },\r\n    selectedReality: 'M',\r\n    selectedRealities: {\r\n        real: true,\r\n        virtual: true\r\n    },\r\n    hiddenOpacity: 0.3,\r\n    isDev: true,\r\n    isShowingStats: true,\r\n    isShowingLables: true,\r\n    labelsVisibility: {\r\n        obstacles: false,\r\n        robots: false\r\n    },\r\n    isShowingRobotSnapshots: true,\r\n    isLoaded: false,\r\n    isTweening: false,\r\n    isRotating: false,\r\n    isMouseMoving: false,\r\n    isMouseOver: false,\r\n    maxAnisotropy: 1,\r\n    dpr: 1,\r\n    easing: TWEEN.Easing.Quadratic.InOut,\r\n    duration: 500,\r\n    texture: {\r\n        path: './assets/textures/',\r\n        imageFiles: [{ name: 'UV', image: 'UV_Grid_Sm.jpg' }]\r\n    },\r\n    mesh: {\r\n        enableHelper: false,\r\n        wireframe: false,\r\n        translucent: false,\r\n        material: {\r\n            color: 0xffffff,\r\n            emissive: 0xffffff\r\n        }\r\n    },\r\n    fog: {\r\n        color: 0xffffff,\r\n        near: 0.00025\r\n    },\r\n    camera: {\r\n        fov: 50,\r\n        near: 50,\r\n        far: 1000,\r\n        aspect: 1,\r\n        posX: 0,\r\n        posY: 0,\r\n        posZ: 0\r\n    },\r\n    controls: {\r\n        autoRotate: false,\r\n        autoRotateSpeed: -1.5,\r\n        rotateSpeed: 1.5,\r\n        zoomSpeed: 0.8,\r\n        minDistance: 100,\r\n        maxDistance: 800,\r\n        minPolarAngle: 0 /*Math.PI / 6,*/,\r\n        maxPolarAngle: (7 / 16) * Math.PI,\r\n        minAzimuthAngle: -Infinity,\r\n        maxAzimuthAngle: Infinity,\r\n        enableDamping: true,\r\n        dampingFactor: 0.5,\r\n        enableZoom: true,\r\n        target: {\r\n            x: 0,\r\n            y: 0,\r\n            z: 0\r\n        }\r\n    },\r\n    ambientLight: {\r\n        enabled: true,\r\n        color: 0x141414\r\n    },\r\n    directionalLight: {\r\n        enabled: true,\r\n        color: 0xf0f0f0,\r\n        intensity: 0.4,\r\n        x: -75,\r\n        y: 280,\r\n        z: 150\r\n    },\r\n    shadow: {\r\n        enabled: true,\r\n        helperEnabled: false,\r\n        bias: 0,\r\n        mapWidth: 2048,\r\n        mapHeight: 2048,\r\n        near: 250,\r\n        far: 400,\r\n        top: 100,\r\n        right: 100,\r\n        bottom: -100,\r\n        left: -100\r\n    },\r\n    pointLight: {\r\n        enabled: true,\r\n        color: 0xffffff,\r\n        intensity: 0.34,\r\n        distance: 115,\r\n        x: 0,\r\n        y: 0,\r\n        z: 0\r\n    },\r\n    hemiLight: {\r\n        enabled: true,\r\n        color: 0xc8c8c8,\r\n        groundColor: 0xffffff,\r\n        intensity: 0.55,\r\n        x: 0,\r\n        y: 0,\r\n        z: 0\r\n    }\r\n};\r\n\r\n// Check localstorage for updated config, if not use above config\r\nconst storedConfig = localStorage.getItem(document.location.href + '.config');\r\nresolvedConfig = storedConfig !== null && storedConfig !== undefined ? JSON.parse(storedConfig) : config;\r\n\r\n// method to presist config data with localStorage\r\nexport const saveConfig = (data) => {\r\n    localStorage.setItem(document.location.href + '.config', JSON.stringify({ ...config, ...data }));\r\n};\r\n\r\nexport default resolvedConfig;\r\n","/**\n * @author alteredq / http://alteredqualia.com/\n * @author mr.doob / http://mrdoob.com/\n */\n\nexport default {\n    canvas: !!window.CanvasRenderingContext2D,\n    webgl: (function () {\n        try {\n            var canvas = document.createElement('canvas');\n\n            return !!(\n                window.WebGLRenderingContext &&\n                (canvas.getContext('webgl') || canvas.getContext('experimental-webgl'))\n            );\n        } catch (e) {\n            return false;\n        }\n    })(),\n\n    workers: !!window.Worker,\n    fileapi: window.File && window.FileReader && window.FileList && window.Blob,\n\n    getWebGLErrorMessage: function () {\n        var element = document.createElement('div');\n        element.id = 'webgl-error-message';\n        element.style.fontFamily = 'monospace';\n        element.style.fontSize = '13px';\n        element.style.fontWeight = 'normal';\n        element.style.textAlign = 'center';\n        element.style.background = '#fff';\n        element.style.color = '#000';\n        element.style.padding = '1.5em';\n        element.style.width = '400px';\n        element.style.margin = '5em auto 0';\n\n        if (!this.webgl) {\n            element.innerHTML = window.WebGLRenderingContext\n                ? [\n                      'Your graphics card does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000000\">WebGL</a>.<br />',\n                      'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000000\">here</a>.'\n                  ].join('\\n')\n                : [\n                      'Your browser does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000000\">WebGL</a>.<br/>',\n                      'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000000\">here</a>.'\n                  ].join('\\n');\n        }\n\n        return element;\n    },\n\n    addGetWebGLMessage: function (parameters) {\n        var parent, id, element;\n\n        parameters = parameters || {};\n\n        parent = parameters.parent !== undefined ? parameters.parent : document.body;\n        id = parameters.id !== undefined ? parameters.id : 'oldie';\n\n        element = this.getWebGLErrorMessage();\n        element.id = id;\n\n        parent.appendChild(element);\n    }\n};\n","import * as THREE from 'three';\r\n\r\nimport Config from '../../data/config';\r\n\r\n// Main webGL renderer class\r\nexport default class Renderer {\r\n    constructor(scene, container) {\r\n        // Properties\r\n        this.scene = scene;\r\n        this.container = container;\r\n\r\n        // Create WebGL renderer and set its antialias\r\n        this.threeRenderer = new THREE.WebGLRenderer({ antialias: true });\r\n\r\n        // Set clear color to fog to enable fog or to hex color for no fog\r\n        this.threeRenderer.setClearColor(scene.fog.color);\r\n        this.threeRenderer.setPixelRatio(window.devicePixelRatio); // For retina\r\n\r\n        // Appends canvas\r\n        container.appendChild(this.threeRenderer.domElement);\r\n\r\n        // Shadow map options\r\n        this.threeRenderer.shadowMap.enabled = true;\r\n        this.threeRenderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n\r\n        // Get anisotropy for textures\r\n        Config.maxAnisotropy = this.threeRenderer.capabilities.getMaxAnisotropy();\r\n\r\n        // Initial size update set to canvas container\r\n        this.updateSize();\r\n\r\n        // Listeners\r\n        document.addEventListener('DOMContentLoaded', () => this.updateSize(), false);\r\n        window.addEventListener('resize', () => this.updateSize(), false);\r\n    }\r\n\r\n    updateSize() {\r\n        this.threeRenderer.setSize(this.container.offsetWidth, this.container.offsetHeight);\r\n    }\r\n\r\n    render(scene, camera) {\r\n        // Renders scene to canvas target\r\n        this.threeRenderer.render(scene, camera);\r\n    }\r\n}\r\n","import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\nimport { CSS2DRenderer, CSS2DObject } from 'three/examples/jsm/renderers/CSS2DRenderer.js';\r\nimport Config from '../../data/config';\r\n\r\nexport default function () {\r\n    const renderer = new CSS2DRenderer();\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.domElement.style.position = 'absolute';\r\n    renderer.domElement.style.top = '0px';\r\n    renderer.isShowingLables = Config.isShowingLables;\r\n    renderer.isShowingObstacleLables = Config.labelsVisibility.obstacles;\r\n    renderer.isShowingRobotLables = Config.labelsVisibility.robots;\r\n    renderer.updateSize = function () {\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n    };\r\n    document.addEventListener('DOMContentLoaded', () => renderer.updateSize(), false);\r\n    window.addEventListener('resize', () => renderer.updateSize(), false);\r\n    return renderer;\r\n}\r\n\r\nexport const addLabel = (prefix, object, mesh, visibility) => {\r\n    if (mesh !== undefined) {\r\n        const element = document.createElement('div');\r\n        element.className = 'label';\r\n\r\n        // TODO: use names, insted of IDs\r\n        element.textContent = object.name + ' [' + mesh.reality + ']';\r\n\r\n        element.style.marginTop = '-1.2em';\r\n        const elementLabel = new CSS2DObject(element);\r\n        elementLabel.name = `Label[${object.id}]`;\r\n        elementLabel.position.set(0, 1, 0);\r\n        elementLabel.visible = visibility;\r\n        mesh.add(elementLabel);\r\n        mesh.removeLabel = () => {\r\n            mesh.remove(elementLabel);\r\n        };\r\n    }\r\n};\r\n\r\nexport const removeLabel = (mesh) => {\r\n    if (mesh !== undefined && mesh.removeLabel !== undefined) {\r\n        mesh.removeLabel();\r\n    }\r\n};\r\n","import * as THREE from 'three';\r\n\r\nimport Config from '../../data/config';\r\n\r\n// Class that creates and updates the main camera\r\nexport default class Camera {\r\n    constructor(renderer) {\r\n        const width = renderer.domElement.width;\r\n        const height = renderer.domElement.height;\r\n\r\n        // Create and position a Perspective Camera\r\n        this.threeCamera = new THREE.PerspectiveCamera(\r\n            Config.camera.fov,\r\n            width / height,\r\n            Config.camera.near,\r\n            Config.camera.far\r\n        );\r\n        this.threeCamera.position.set(Config.camera.posX, Config.camera.posY, Config.camera.posZ);\r\n        this.threeCamera.up.set(0, 0, 1);\r\n\r\n        // Initial sizing\r\n        this.updateSize(renderer);\r\n\r\n        // Listeners\r\n        window.addEventListener('resize', () => this.updateSize(renderer), false);\r\n    }\r\n\r\n    updateSize(renderer) {\r\n        // Update camera aspect ratio with window aspect ratio\r\n        this.threeCamera.aspect = renderer.domElement.width / renderer.domElement.height;\r\n\r\n        // Always call updateProjectionMatrix on camera change\r\n        this.threeCamera.updateProjectionMatrix();\r\n    }\r\n}\r\n","import * as THREE from 'three';\r\n\r\nimport Config from '../../data/config';\r\n\r\n// Sets up and places all lights in scene\r\nexport default class Light {\r\n    constructor(scene) {\r\n        this.scene = scene;\r\n\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        // Ambient\r\n        this.ambientLight = new THREE.AmbientLight(Config.ambientLight.color);\r\n        this.ambientLight.visible = Config.ambientLight.enabled;\r\n\r\n        // Point light\r\n        this.pointLight = new THREE.PointLight(\r\n            Config.pointLight.color,\r\n            Config.pointLight.intensity,\r\n            Config.pointLight.distance\r\n        );\r\n        this.pointLight.position.set(Config.pointLight.x, Config.pointLight.y, Config.pointLight.z);\r\n        this.pointLight.visible = Config.pointLight.enabled;\r\n\r\n        // Directional light\r\n        this.directionalLight = new THREE.DirectionalLight(\r\n            Config.directionalLight.color,\r\n            Config.directionalLight.intensity\r\n        );\r\n        this.directionalLight.position.set(\r\n            Config.directionalLight.x,\r\n            Config.directionalLight.y,\r\n            Config.directionalLight.z\r\n        );\r\n        this.directionalLight.visible = Config.directionalLight.enabled;\r\n\r\n        // Shadow map\r\n        this.directionalLight.castShadow = Config.shadow.enabled;\r\n        this.directionalLight.shadow.bias = Config.shadow.bias;\r\n        this.directionalLight.shadow.camera.near = Config.shadow.near;\r\n        this.directionalLight.shadow.camera.far = Config.shadow.far;\r\n        this.directionalLight.shadow.camera.left = Config.shadow.left;\r\n        this.directionalLight.shadow.camera.right = Config.shadow.right;\r\n        this.directionalLight.shadow.camera.top = Config.shadow.top;\r\n        this.directionalLight.shadow.camera.bottom = Config.shadow.bottom;\r\n        this.directionalLight.shadow.mapSize.width = Config.shadow.mapWidth;\r\n        this.directionalLight.shadow.mapSize.height = Config.shadow.mapHeight;\r\n\r\n        // Shadow camera helper\r\n        this.directionalLightHelper = new THREE.CameraHelper(this.directionalLight.shadow.camera);\r\n        this.directionalLightHelper.visible = Config.shadow.helperEnabled;\r\n\r\n        // Hemisphere light\r\n        this.hemiLight = new THREE.HemisphereLight(\r\n            Config.hemiLight.color,\r\n            Config.hemiLight.groundColor,\r\n            Config.hemiLight.intensity\r\n        );\r\n        this.hemiLight.position.set(Config.hemiLight.x, Config.hemiLight.y, Config.hemiLight.z);\r\n        this.hemiLight.visible = Config.hemiLight.enabled;\r\n    }\r\n\r\n    place(lightName) {\r\n        switch (lightName) {\r\n            case 'ambient':\r\n                this.scene.add(this.ambientLight);\r\n                break;\r\n\r\n            case 'directional':\r\n                this.scene.add(this.directionalLight);\r\n                this.scene.add(this.directionalLightHelper);\r\n                break;\r\n\r\n            case 'point':\r\n                this.scene.add(this.pointLight);\r\n                break;\r\n\r\n            case 'hemi':\r\n                this.scene.add(this.hemiLight);\r\n                break;\r\n        }\r\n    }\r\n}\r\n","import * as THREE from 'three';\r\n\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport Config from '../../data/config';\r\n\r\n// Controls based on orbit controls\r\nexport default class Controls {\r\n    constructor(camera, container) {\r\n        this.threeControls = new OrbitControls(camera, container);\r\n\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.threeControls.target.set(Config.controls.target.x, Config.controls.target.y, Config.controls.target.z);\r\n        this.threeControls.autoRotate = Config.controls.autoRotate;\r\n        this.threeControls.autoRotateSpeed = Config.controls.autoRotateSpeed;\r\n        this.threeControls.rotateSpeed = Config.controls.rotateSpeed;\r\n        this.threeControls.zoomSpeed = Config.controls.zoomSpeed;\r\n        this.threeControls.minDistance = Config.controls.minDistance;\r\n        this.threeControls.maxDistance = Config.controls.maxDistance;\r\n        this.threeControls.minPolarAngle = Config.controls.minPolarAngle;\r\n        this.threeControls.maxPolarAngle = Config.controls.maxPolarAngle;\r\n        this.threeControls.enableDamping = Config.controls.enableDamping;\r\n        this.threeControls.enableZoom = Config.controls.enableZoom;\r\n        this.threeControls.dampingFactor = Config.controls.dampingFactor;\r\n\r\n        this.threeControls.enableRotate = true;\r\n\r\n        // Avoid null situations\r\n        if (Config.controls.minAzimuthAngle == null) {\r\n            this.threeControls.minAzimuthAngle = -Infinity;\r\n        } else {\r\n            this.threeControls.minAzimuthAngle = Config.controls.minAzimuthAngle;\r\n        }\r\n\r\n        // Avoid null situations\r\n        if (Config.controls.maxAzimuthAngle == null) {\r\n            this.threeControls.maxAzimuthAngle = Infinity;\r\n        } else {\r\n            this.threeControls.maxAzimuthAngle = Config.controls.maxAzimuthAngle;\r\n        }\r\n\r\n        /*this.threeControls.mouseButtons = {\r\n            LEFT: THREE.MOUSE.ROTATE,\r\n            MIDDLE: THREE.MOUSE.DOLLY,\r\n            RIGHT: THREE.MOUSE.PAN\r\n        }*/\r\n    }\r\n}\r\n","import * as THREE from 'three';\r\n\r\nimport Config from '../../data/config';\r\n\r\nexport default class Environment {\r\n    constructor() {\r\n        console.log(`Environment: Scale: ${scene_scale}, arenaSize:${Config.arena.size}`);\r\n\r\n        // Ground\r\n        this.createGround(Config.arena.size, Config.arena.size);\r\n\r\n        // Grid\r\n        this.createGrid(Config.arena.size, Config.arena.size);\r\n    }\r\n\r\n    createGround(width, height) {\r\n        let ground = window.scene.getObjectByName('env.ground');\r\n        console.log(`Updating env.ground | ${width} x ${height}`);\r\n\r\n        if (ground != undefined) window.scene.remove(ground);\r\n        const geometry = new THREE.PlaneBufferGeometry(width, height);\r\n        const material = new THREE.MeshPhongMaterial({\r\n            color: 0x999999,\r\n            depthWrite: false\r\n        });\r\n        material.userData.originalColor = new THREE.Color(0x999999);\r\n\r\n        ground = new THREE.Mesh(geometry, material);\r\n        ground.name = 'env.ground';\r\n        ground.scale.set(scene_scale, scene_scale, scene_scale);\r\n        ground.position.set(0, 0, 0);\r\n        ground.receiveShadow = true;\r\n        window.scene.add(ground);\r\n    }\r\n\r\n    createGrid(width, height) {\r\n        let grid = window.scene.getObjectByName('env.grid');\r\n        console.log(`Updating env.grid | ${width} x ${height} | scale: ${scene_scale}`);\r\n\r\n        if (grid != undefined) window.scene.remove(grid);\r\n\r\n        grid = new THREE.GridHelper(width, Math.round(width / 10), 0x000000, 0x5b5b5b);\r\n        grid.name = 'env.grid';\r\n        grid.rotation.x = -Math.PI / 2;\r\n        grid.scale.set(scene_scale, scene_scale, (height / width) * scene_scale);\r\n        grid.position.set(0, 0, 0);\r\n        grid.material.opacity = 0.35;\r\n        grid.material.transparent = true;\r\n        window.scene.add(grid);\r\n    }\r\n\r\n    update(config) {\r\n        const { xMin, xMax, yMin, yMax } = config;\r\n        const width = Math.abs(xMax) + Math.abs(xMin);\r\n        const height = Math.abs(yMax) + Math.abs(yMin);\r\n\r\n        this.createGround(width, height);\r\n        this.createGrid(width, height);\r\n    }\r\n}\r\n","/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nimport { BufferGeometry, Float32BufferAttribute, LineSegments, LineBasicMaterial, Matrix3, Vector3 } from 'three';\r\n\r\nconst _v1 = new Vector3();\r\nconst _v2 = new Vector3();\r\nconst _normalMatrix = new Matrix3();\r\nconst _keys = ['a', 'b', 'c'];\r\n\r\nfunction VertexNormalsHelper(object, size, hex) {\r\n    this.object = object;\r\n    this.size = size !== undefined ? size : 0.1;\r\n\r\n    const color = hex !== undefined ? hex : 0xff0000;\r\n\r\n    //\r\n\r\n    let nNormals = 0;\r\n\r\n    const objGeometry = this.object.geometry;\r\n\r\n    if (objGeometry && objGeometry.isGeometry) {\r\n        nNormals = objGeometry.faces.length * 3;\r\n    } else if (objGeometry && objGeometry.isBufferGeometry) {\r\n        nNormals = objGeometry.attributes.normal.count;\r\n    }\r\n\r\n    //\r\n\r\n    const geometry = new BufferGeometry();\r\n    const positions = new Float32BufferAttribute(nNormals * 2 * 3, 3);\r\n\r\n    geometry.setAttribute('position', positions);\r\n\r\n    LineSegments.call(this, geometry, new LineBasicMaterial({ color: color, toneMapped: false }));\r\n\r\n    this.type = 'VertexNormalsHelper';\r\n\r\n    //\r\n\r\n    this.matrixAutoUpdate = false;\r\n\r\n    this.update();\r\n}\r\n\r\nVertexNormalsHelper.prototype = Object.create(LineSegments.prototype);\r\nVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\r\n\r\nVertexNormalsHelper.prototype.update = function () {\r\n    let idx;\r\n    this.object.updateMatrixWorld(true);\r\n\r\n    _normalMatrix.getNormalMatrix(this.object.matrixWorld);\r\n\r\n    const matrixWorld = this.object.matrixWorld;\r\n    const position = this.geometry.attributes.position;\r\n\r\n    //\r\n\r\n    const objGeometry = this.object.geometry;\r\n\r\n    if (objGeometry && objGeometry.isGeometry) {\r\n        const vertices = objGeometry.vertices;\r\n\r\n        const faces = objGeometry.faces;\r\n\r\n        idx = 0;\r\n\r\n        for (let i = 0, l = faces.length; i < l; i++) {\r\n            const face = faces[i];\r\n\r\n            for (let j = 0, jl = face.vertexNormals.length; j < jl; j++) {\r\n                const vertex = vertices[face[_keys[j]]];\r\n                const normal = face.vertexNormals[j];\r\n\r\n                _v1.copy(vertex).applyMatrix4(matrixWorld);\r\n                _v2.copy(normal).applyMatrix3(_normalMatrix).normalize().multiplyScalar(this.size).add(_v1);\r\n\r\n                position.setXYZ(idx, _v1.x, _v1.y, _v1.z);\r\n\r\n                idx = idx + 1;\r\n\r\n                position.setXYZ(idx, _v2.x, _v2.y, _v2.z);\r\n\r\n                idx = idx + 1;\r\n            }\r\n        }\r\n    } else if (objGeometry && objGeometry.isBufferGeometry) {\r\n        const objPos = objGeometry.attributes.position;\r\n        const objNorm = objGeometry.attributes.normal;\r\n\r\n        idx = 0;\r\n\r\n        // for simplicity, ignore index and drawcalls, and render every normal\r\n\r\n        for (var j = 0, jl = objPos.count; j < jl; j++) {\r\n            _v1.set(objPos.getX(j), objPos.getY(j), objPos.getZ(j)).applyMatrix4(matrixWorld);\r\n            _v2.set(objNorm.getX(j), objNorm.getY(j), objNorm.getZ(j));\r\n            _v2.applyMatrix3(_normalMatrix).normalize().multiplyScalar(this.size).add(_v1);\r\n\r\n            position.setXYZ(idx, _v1.x, _v1.y, _v1.z);\r\n\r\n            idx = idx + 1;\r\n\r\n            position.setXYZ(idx, _v2.x, _v2.y, _v2.z);\r\n\r\n            idx = idx + 1;\r\n        }\r\n    }\r\n\r\n    position.needsUpdate = true;\r\n};\r\n\r\nexport { VertexNormalsHelper };\r\n","import * as THREE from 'three';\nimport { VertexNormalsHelper } from './vertexNormalsHelper';\n\n// Simple mesh helper that shows edges, wireframes, and face and vertex normals\nexport default class MeshHelper {\n    constructor(scene, mesh) {\n        this.mesh = mesh;\n        this.scene = scene;\n\n        const wireframe = new THREE.WireframeGeometry(this.mesh.geometry);\n        this.wireLine = new THREE.LineSegments(wireframe);\n        this.wireLine.material.depthTest = false;\n        this.wireLine.material.opacity = 0.25;\n        this.wireLine.material.transparent = true;\n\n        const edges = new THREE.EdgesGeometry(this.mesh.geometry);\n        this.edgesLine = new THREE.LineSegments(edges);\n        this.edgesLine.material.depthTest = false;\n        this.edgesLine.material.opacity = 0.25;\n        this.edgesLine.material.transparent = true;\n\n        this.vertexHelper = new VertexNormalsHelper(this.mesh, 2);\n        this.boxHelper = new THREE.BoxHelper(this.mesh);\n    }\n\n    enable() {\n        this.mesh.add(this.wireLine);\n        this.mesh.add(this.edgesLine);\n\n        this.scene.add(this.vertexHelper);\n        this.scene.add(this.boxHelper);\n    }\n\n    disable() {\n        this.mesh.remove(this.wireLine);\n        this.mesh.remove(this.edgesLine);\n\n        this.scene.remove(this.vertexHelper);\n        this.scene.remove(this.boxHelper);\n    }\n}\n","// Provides simple static functions that are used multiple times in the app\nexport default class Helpers {\n    static throttle(fn, threshhold, scope) {\n        threshhold || (threshhold = 250);\n        let last, deferTimer;\n\n        return function () {\n            const context = scope || this;\n\n            const now = +new Date(),\n                args = arguments;\n\n            if (last && now < last + threshhold) {\n                clearTimeout(deferTimer);\n                deferTimer = setTimeout(function () {\n                    last = now;\n                    fn.apply(context, args);\n                }, threshhold);\n            } else {\n                last = now;\n                fn.apply(context, args);\n            }\n        };\n    }\n\n    static logProgress() {\n        return function (xhr) {\n            if (xhr.lengthComputable) {\n                const percentComplete = (xhr.loaded / xhr.total) * 100;\n\n                console.log(Math.round(percentComplete, 2) + '% downloaded');\n            }\n        };\n    }\n\n    static logError() {\n        return function (xhr) {\n            console.error(xhr);\n        };\n    }\n\n    static handleColorChange(color) {\n        return (value) => {\n            if (typeof value === 'string') {\n                value = value.replace('#', '0x');\n            }\n\n            color.setHex(value);\n        };\n    }\n\n    static update(mesh) {\n        this.needsUpdate(mesh.material, mesh.geometry);\n    }\n\n    static needsUpdate(material, geometry) {\n        return function () {\n            material.shading = +material.shading; //Ensure number\n            material.vertexColors = +material.vertexColors; //Ensure number\n            material.side = +material.side; //Ensure number\n            material.needsUpdate = true;\n            geometry.verticesNeedUpdate = true;\n            geometry.normalsNeedUpdate = true;\n            geometry.colorsNeedUpdate = true;\n        };\n    }\n\n    static updateTexture(material, materialKey, textures) {\n        return function (key) {\n            material[materialKey] = textures[key];\n            material.needsUpdate = true;\n        };\n    }\n}\n","import * as THREE from 'three';\r\n// Promise polyfill for IE\r\nimport { Promise } from 'es6-promise';\r\n\r\nimport Helpers from '../../utils/helpers';\r\nimport Config from '../../data/config';\r\n\r\n// This class preloads all textures in the imageFiles array in the Config via ES6 Promises.\r\n// Once all textures are done loading the model itself will be loaded after the Promise .then() callback.\r\n// Using promises to preload textures prevents issues when applying textures to materials\r\n// before the textures have loaded.\r\nexport default class Texture {\r\n    constructor() {\r\n        // Prop that will contain all loaded textures\r\n        this.textures = {};\r\n    }\r\n\r\n    load() {\r\n        const loader = new THREE.TextureLoader();\r\n        const maxAnisotropy = Config.maxAnisotropy;\r\n        const imageFiles = Config.texture.imageFiles;\r\n        const promiseArray = [];\r\n\r\n        loader.setPath(Config.texture.path);\r\n\r\n        imageFiles.forEach((imageFile) => {\r\n            // Add an individual Promise for each image in array\r\n            promiseArray.push(\r\n                new Promise((resolve, reject) => {\r\n                    // Each Promise will attempt to load the image file\r\n                    loader.load(\r\n                        imageFile.image,\r\n                        // This gets called on load with the loaded texture\r\n                        (texture) => {\r\n                            texture.anisotropy = maxAnisotropy;\r\n\r\n                            // Resolve Promise with object of texture if it is instance of THREE.Texture\r\n                            const modelOBJ = {};\r\n                            modelOBJ[imageFile.name] = texture;\r\n                            if (modelOBJ[imageFile.name] instanceof THREE.Texture) resolve(modelOBJ);\r\n                        },\r\n                        Helpers.logProgress(),\r\n                        (xhr) => reject(new Error(xhr + 'An error occurred loading while loading ' + imageFile.image))\r\n                    );\r\n                })\r\n            );\r\n        });\r\n\r\n        // Iterate through all Promises in array and return another Promise when all have resolved or console log reason when any reject\r\n        return Promise.all(promiseArray).then(\r\n            (textures) => {\r\n                // Set the textures prop object to have name be the resolved texture\r\n                for (let i = 0; i < textures.length; i++) {\r\n                    this.textures[Object.keys(textures[i])[0]] = textures[i][Object.keys(textures[i])[0]];\r\n                }\r\n            },\r\n            (reason) => console.log(reason)\r\n        );\r\n    }\r\n}\r\n","/**\r\n * @author Rich Tibbett / https://github.com/richtr\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author Tony Parisi / http://www.tonyparisi.com/\r\n * @author Takahiro / https://github.com/takahirox\r\n * @author Don McCurdy / https://www.donmccurdy.com\r\n */\r\n\r\nimport {\r\n    AnimationClip,\r\n    Bone,\r\n    Box3,\r\n    BufferAttribute,\r\n    BufferGeometry,\r\n    ClampToEdgeWrapping,\r\n    Color,\r\n    DirectionalLight,\r\n    DoubleSide,\r\n    FileLoader,\r\n    FrontSide,\r\n    Group,\r\n    InterleavedBuffer,\r\n    InterleavedBufferAttribute,\r\n    Interpolant,\r\n    InterpolateDiscrete,\r\n    InterpolateLinear,\r\n    Line,\r\n    LineBasicMaterial,\r\n    LineLoop,\r\n    LineSegments,\r\n    LinearFilter,\r\n    LinearMipmapLinearFilter,\r\n    LinearMipmapNearestFilter,\r\n    Loader,\r\n    LoaderUtils,\r\n    Material,\r\n    MathUtils,\r\n    Matrix4,\r\n    Mesh,\r\n    MeshBasicMaterial,\r\n    MeshPhysicalMaterial,\r\n    MeshStandardMaterial,\r\n    MirroredRepeatWrapping,\r\n    NearestFilter,\r\n    NearestMipmapLinearFilter,\r\n    NearestMipmapNearestFilter,\r\n    NumberKeyframeTrack,\r\n    Object3D,\r\n    OrthographicCamera,\r\n    PerspectiveCamera,\r\n    PointLight,\r\n    Points,\r\n    PointsMaterial,\r\n    PropertyBinding,\r\n    QuaternionKeyframeTrack,\r\n    RGBAFormat,\r\n    RGBFormat,\r\n    RepeatWrapping,\r\n    Skeleton,\r\n    SkinnedMesh,\r\n    Sphere,\r\n    SpotLight,\r\n    TangentSpaceNormalMap,\r\n    TextureLoader,\r\n    TriangleFanDrawMode,\r\n    TriangleStripDrawMode,\r\n    Vector2,\r\n    Vector3,\r\n    VectorKeyframeTrack,\r\n    sRGBEncoding\r\n} from 'three';\r\n\r\nconst GLTFLoader = (function () {\r\n    function GLTFLoader(manager) {\r\n        Loader.call(this, manager);\r\n\r\n        this.dracoLoader = null;\r\n        this.ddsLoader = null;\r\n    }\r\n\r\n    GLTFLoader.prototype = Object.assign(Object.create(Loader.prototype), {\r\n        constructor: GLTFLoader,\r\n\r\n        load: function (url, onLoad, onProgress, onError) {\r\n            var scope = this;\r\n\r\n            var resourcePath;\r\n\r\n            if (this.resourcePath !== '') {\r\n                resourcePath = this.resourcePath;\r\n            } else if (this.path !== '') {\r\n                resourcePath = this.path;\r\n            } else {\r\n                resourcePath = LoaderUtils.extractUrlBase(url);\r\n            }\r\n\r\n            // Tells the LoadingManager to track an extra item, which resolves after\r\n            // the model is fully loaded. This means the count of items loaded will\r\n            // be incorrect, but ensures manager.onLoad() does not fire early.\r\n            scope.manager.itemStart(url);\r\n\r\n            var _onError = function (e) {\r\n                if (onError) {\r\n                    onError(e);\r\n                } else {\r\n                    console.error(e);\r\n                }\r\n\r\n                scope.manager.itemError(url);\r\n                scope.manager.itemEnd(url);\r\n            };\r\n\r\n            var loader = new FileLoader(scope.manager);\r\n\r\n            loader.setPath(this.path);\r\n            loader.setResponseType('arraybuffer');\r\n\r\n            if (scope.crossOrigin === 'use-credentials') {\r\n                loader.setWithCredentials(true);\r\n            }\r\n\r\n            loader.load(\r\n                url,\r\n                function (data) {\r\n                    try {\r\n                        scope.parse(\r\n                            data,\r\n                            resourcePath,\r\n                            function (gltf) {\r\n                                onLoad(gltf);\r\n\r\n                                scope.manager.itemEnd(url);\r\n                            },\r\n                            _onError\r\n                        );\r\n                    } catch (e) {\r\n                        _onError(e);\r\n                    }\r\n                },\r\n                onProgress,\r\n                _onError\r\n            );\r\n        },\r\n\r\n        setDRACOLoader: function (dracoLoader) {\r\n            this.dracoLoader = dracoLoader;\r\n            return this;\r\n        },\r\n\r\n        setDDSLoader: function (ddsLoader) {\r\n            this.ddsLoader = ddsLoader;\r\n            return this;\r\n        },\r\n\r\n        parse: function (data, path, onLoad, onError) {\r\n            var content;\r\n            var extensions = {};\r\n\r\n            if (typeof data === 'string') {\r\n                content = data;\r\n            } else {\r\n                var magic = LoaderUtils.decodeText(new Uint8Array(data, 0, 4));\r\n\r\n                if (magic === BINARY_EXTENSION_HEADER_MAGIC) {\r\n                    try {\r\n                        extensions[EXTENSIONS.KHR_BINARY_GLTF] = new GLTFBinaryExtension(data);\r\n                    } catch (error) {\r\n                        if (onError) onError(error);\r\n                        return;\r\n                    }\r\n\r\n                    content = extensions[EXTENSIONS.KHR_BINARY_GLTF].content;\r\n                } else {\r\n                    content = LoaderUtils.decodeText(new Uint8Array(data));\r\n                }\r\n            }\r\n\r\n            var json = JSON.parse(content);\r\n\r\n            if (json.asset === undefined || json.asset.version[0] < 2) {\r\n                if (onError)\r\n                    onError(new Error('THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported.'));\r\n                return;\r\n            }\r\n\r\n            if (json.extensionsUsed) {\r\n                for (var i = 0; i < json.extensionsUsed.length; ++i) {\r\n                    var extensionName = json.extensionsUsed[i];\r\n                    var extensionsRequired = json.extensionsRequired || [];\r\n\r\n                    switch (extensionName) {\r\n                        case EXTENSIONS.KHR_LIGHTS_PUNCTUAL:\r\n                            extensions[extensionName] = new GLTFLightsExtension(json);\r\n                            break;\r\n\r\n                        case EXTENSIONS.KHR_MATERIALS_CLEARCOAT:\r\n                            extensions[extensionName] = new GLTFMaterialsClearcoatExtension();\r\n                            break;\r\n\r\n                        case EXTENSIONS.KHR_MATERIALS_UNLIT:\r\n                            extensions[extensionName] = new GLTFMaterialsUnlitExtension();\r\n                            break;\r\n\r\n                        case EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:\r\n                            extensions[extensionName] = new GLTFMaterialsPbrSpecularGlossinessExtension();\r\n                            break;\r\n\r\n                        case EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\r\n                            extensions[extensionName] = new GLTFDracoMeshCompressionExtension(json, this.dracoLoader);\r\n                            break;\r\n\r\n                        case EXTENSIONS.MSFT_TEXTURE_DDS:\r\n                            extensions[extensionName] = new GLTFTextureDDSExtension(this.ddsLoader);\r\n                            break;\r\n\r\n                        case EXTENSIONS.KHR_TEXTURE_TRANSFORM:\r\n                            extensions[extensionName] = new GLTFTextureTransformExtension();\r\n                            break;\r\n\r\n                        case EXTENSIONS.KHR_MESH_QUANTIZATION:\r\n                            extensions[extensionName] = new GLTFMeshQuantizationExtension();\r\n                            break;\r\n\r\n                        default:\r\n                            if (extensionsRequired.indexOf(extensionName) >= 0) {\r\n                                console.warn('THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".');\r\n                            }\r\n                    }\r\n                }\r\n            }\r\n\r\n            var parser = new GLTFParser(json, extensions, {\r\n                path: path || this.resourcePath || '',\r\n                crossOrigin: this.crossOrigin,\r\n                manager: this.manager\r\n            });\r\n\r\n            parser.parse(onLoad, onError);\r\n        }\r\n    });\r\n\r\n    /* GLTFREGISTRY */\r\n\r\n    function GLTFRegistry() {\r\n        var objects = {};\r\n\r\n        return {\r\n            get: function (key) {\r\n                return objects[key];\r\n            },\r\n\r\n            add: function (key, object) {\r\n                objects[key] = object;\r\n            },\r\n\r\n            remove: function (key) {\r\n                delete objects[key];\r\n            },\r\n\r\n            removeAll: function () {\r\n                objects = {};\r\n            }\r\n        };\r\n    }\r\n\r\n    /*********************************/\r\n    /********** EXTENSIONS ***********/\r\n    /*********************************/\r\n\r\n    var EXTENSIONS = {\r\n        KHR_BINARY_GLTF: 'KHR_binary_glTF',\r\n        KHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\r\n        KHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\r\n        KHR_MATERIALS_CLEARCOAT: 'KHR_materials_clearcoat',\r\n        KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\r\n        KHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\r\n        KHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',\r\n        KHR_MESH_QUANTIZATION: 'KHR_mesh_quantization',\r\n        MSFT_TEXTURE_DDS: 'MSFT_texture_dds'\r\n    };\r\n\r\n    /**\r\n     * DDS Texture Extension\r\n     *\r\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds\r\n     *\r\n     */\r\n    function GLTFTextureDDSExtension(ddsLoader) {\r\n        if (!ddsLoader) {\r\n            throw new Error('THREE.GLTFLoader: Attempting to load .dds texture without importing DDSLoader');\r\n        }\r\n\r\n        this.name = EXTENSIONS.MSFT_TEXTURE_DDS;\r\n        this.ddsLoader = ddsLoader;\r\n    }\r\n\r\n    /**\r\n     * Punctual Lights Extension\r\n     *\r\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\r\n     */\r\n    function GLTFLightsExtension(json) {\r\n        this.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\r\n\r\n        var extension = (json.extensions && json.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL]) || {};\r\n        this.lightDefs = extension.lights || [];\r\n    }\r\n\r\n    GLTFLightsExtension.prototype.loadLight = function (lightIndex) {\r\n        var lightDef = this.lightDefs[lightIndex];\r\n        var lightNode;\r\n\r\n        var color = new Color(0xffffff);\r\n        if (lightDef.color !== undefined) color.fromArray(lightDef.color);\r\n\r\n        var range = lightDef.range !== undefined ? lightDef.range : 0;\r\n\r\n        switch (lightDef.type) {\r\n            case 'directional':\r\n                lightNode = new DirectionalLight(color);\r\n                lightNode.target.position.set(0, 0, -1);\r\n                lightNode.add(lightNode.target);\r\n                break;\r\n\r\n            case 'point':\r\n                lightNode = new PointLight(color);\r\n                lightNode.distance = range;\r\n                break;\r\n\r\n            case 'spot':\r\n                lightNode = new SpotLight(color);\r\n                lightNode.distance = range;\r\n                // Handle spotlight properties.\r\n                lightDef.spot = lightDef.spot || {};\r\n                lightDef.spot.innerConeAngle =\r\n                    lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\r\n                lightDef.spot.outerConeAngle =\r\n                    lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\r\n                lightNode.angle = lightDef.spot.outerConeAngle;\r\n                lightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\r\n                lightNode.target.position.set(0, 0, -1);\r\n                lightNode.add(lightNode.target);\r\n                break;\r\n\r\n            default:\r\n                throw new Error('THREE.GLTFLoader: Unexpected light type, \"' + lightDef.type + '\".');\r\n        }\r\n\r\n        // Some lights (e.g. spot) default to a position other than the origin. Reset the position\r\n        // here, because node-level parsing will only override position if explicitly specified.\r\n        lightNode.position.set(0, 0, 0);\r\n\r\n        lightNode.decay = 2;\r\n\r\n        if (lightDef.intensity !== undefined) lightNode.intensity = lightDef.intensity;\r\n\r\n        lightNode.name = lightDef.name || 'light_' + lightIndex;\r\n\r\n        return Promise.resolve(lightNode);\r\n    };\r\n\r\n    /**\r\n     * Unlit Materials Extension\r\n     *\r\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\r\n     */\r\n    function GLTFMaterialsUnlitExtension() {\r\n        this.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\r\n    }\r\n\r\n    GLTFMaterialsUnlitExtension.prototype.getMaterialType = function () {\r\n        return MeshBasicMaterial;\r\n    };\r\n\r\n    GLTFMaterialsUnlitExtension.prototype.extendParams = function (materialParams, materialDef, parser) {\r\n        var pending = [];\r\n\r\n        materialParams.color = new Color(1.0, 1.0, 1.0);\r\n        materialParams.opacity = 1.0;\r\n\r\n        var metallicRoughness = materialDef.pbrMetallicRoughness;\r\n\r\n        if (metallicRoughness) {\r\n            if (Array.isArray(metallicRoughness.baseColorFactor)) {\r\n                var array = metallicRoughness.baseColorFactor;\r\n\r\n                materialParams.color.fromArray(array);\r\n                materialParams.opacity = array[3];\r\n            }\r\n\r\n            if (metallicRoughness.baseColorTexture !== undefined) {\r\n                pending.push(parser.assignTexture(materialParams, 'map', metallicRoughness.baseColorTexture));\r\n            }\r\n        }\r\n\r\n        return Promise.all(pending);\r\n    };\r\n\r\n    /**\r\n     * Clearcoat Materials Extension\r\n     *\r\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_clearcoat\r\n     */\r\n    function GLTFMaterialsClearcoatExtension() {\r\n        this.name = EXTENSIONS.KHR_MATERIALS_CLEARCOAT;\r\n    }\r\n\r\n    GLTFMaterialsClearcoatExtension.prototype.getMaterialType = function () {\r\n        return MeshPhysicalMaterial;\r\n    };\r\n\r\n    GLTFMaterialsClearcoatExtension.prototype.extendParams = function (materialParams, materialDef, parser) {\r\n        var pending = [];\r\n\r\n        var extension = materialDef.extensions[this.name];\r\n\r\n        if (extension.clearcoatFactor !== undefined) {\r\n            materialParams.clearcoat = extension.clearcoatFactor;\r\n        }\r\n\r\n        if (extension.clearcoatTexture !== undefined) {\r\n            pending.push(parser.assignTexture(materialParams, 'clearcoatMap', extension.clearcoatTexture));\r\n        }\r\n\r\n        if (extension.clearcoatRoughnessFactor !== undefined) {\r\n            materialParams.clearcoatRoughness = extension.clearcoatRoughnessFactor;\r\n        }\r\n\r\n        if (extension.clearcoatRoughnessTexture !== undefined) {\r\n            pending.push(\r\n                parser.assignTexture(materialParams, 'clearcoatRoughnessMap', extension.clearcoatRoughnessTexture)\r\n            );\r\n        }\r\n\r\n        if (extension.clearcoatNormalTexture !== undefined) {\r\n            pending.push(parser.assignTexture(materialParams, 'clearcoatNormalMap', extension.clearcoatNormalTexture));\r\n\r\n            if (extension.clearcoatNormalTexture.scale !== undefined) {\r\n                var scale = extension.clearcoatNormalTexture.scale;\r\n\r\n                materialParams.clearcoatNormalScale = new Vector2(scale, scale);\r\n            }\r\n        }\r\n\r\n        return Promise.all(pending);\r\n    };\r\n\r\n    /* BINARY EXTENSION */\r\n    var BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\r\n    var BINARY_EXTENSION_HEADER_LENGTH = 12;\r\n    var BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4e4f534a, BIN: 0x004e4942 };\r\n\r\n    function GLTFBinaryExtension(data) {\r\n        this.name = EXTENSIONS.KHR_BINARY_GLTF;\r\n        this.content = null;\r\n        this.body = null;\r\n\r\n        var headerView = new DataView(data, 0, BINARY_EXTENSION_HEADER_LENGTH);\r\n\r\n        this.header = {\r\n            magic: LoaderUtils.decodeText(new Uint8Array(data.slice(0, 4))),\r\n            version: headerView.getUint32(4, true),\r\n            length: headerView.getUint32(8, true)\r\n        };\r\n\r\n        if (this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC) {\r\n            throw new Error('THREE.GLTFLoader: Unsupported glTF-Binary header.');\r\n        } else if (this.header.version < 2.0) {\r\n            throw new Error('THREE.GLTFLoader: Legacy binary file detected.');\r\n        }\r\n\r\n        var chunkView = new DataView(data, BINARY_EXTENSION_HEADER_LENGTH);\r\n        var chunkIndex = 0;\r\n\r\n        while (chunkIndex < chunkView.byteLength) {\r\n            var chunkLength = chunkView.getUint32(chunkIndex, true);\r\n            chunkIndex += 4;\r\n\r\n            var chunkType = chunkView.getUint32(chunkIndex, true);\r\n            chunkIndex += 4;\r\n\r\n            if (chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON) {\r\n                var contentArray = new Uint8Array(data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength);\r\n                this.content = LoaderUtils.decodeText(contentArray);\r\n            } else if (chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN) {\r\n                var byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\r\n                this.body = data.slice(byteOffset, byteOffset + chunkLength);\r\n            }\r\n\r\n            // Clients must ignore chunks with unknown types.\r\n\r\n            chunkIndex += chunkLength;\r\n        }\r\n\r\n        if (this.content === null) {\r\n            throw new Error('THREE.GLTFLoader: JSON content not found.');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * DRACO Mesh Compression Extension\r\n     *\r\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression\r\n     */\r\n    function GLTFDracoMeshCompressionExtension(json, dracoLoader) {\r\n        if (!dracoLoader) {\r\n            throw new Error('THREE.GLTFLoader: No DRACOLoader instance provided.');\r\n        }\r\n\r\n        this.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\r\n        this.json = json;\r\n        this.dracoLoader = dracoLoader;\r\n        this.dracoLoader.preload();\r\n    }\r\n\r\n    GLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function (primitive, parser) {\r\n        var json = this.json;\r\n        var dracoLoader = this.dracoLoader;\r\n        var bufferViewIndex = primitive.extensions[this.name].bufferView;\r\n        var gltfAttributeMap = primitive.extensions[this.name].attributes;\r\n        var threeAttributeMap = {};\r\n        var attributeNormalizedMap = {};\r\n        var attributeTypeMap = {};\r\n\r\n        for (var attributeName in gltfAttributeMap) {\r\n            var threeAttributeName = ATTRIBUTES[attributeName] || attributeName.toLowerCase();\r\n\r\n            threeAttributeMap[threeAttributeName] = gltfAttributeMap[attributeName];\r\n        }\r\n\r\n        for (attributeName in primitive.attributes) {\r\n            var threeAttributeName = ATTRIBUTES[attributeName] || attributeName.toLowerCase();\r\n\r\n            if (gltfAttributeMap[attributeName] !== undefined) {\r\n                var accessorDef = json.accessors[primitive.attributes[attributeName]];\r\n                var componentType = WEBGL_COMPONENT_TYPES[accessorDef.componentType];\r\n\r\n                attributeTypeMap[threeAttributeName] = componentType;\r\n                attributeNormalizedMap[threeAttributeName] = accessorDef.normalized === true;\r\n            }\r\n        }\r\n\r\n        return parser.getDependency('bufferView', bufferViewIndex).then(function (bufferView) {\r\n            return new Promise(function (resolve) {\r\n                dracoLoader.decodeDracoFile(\r\n                    bufferView,\r\n                    function (geometry) {\r\n                        for (var attributeName in geometry.attributes) {\r\n                            var attribute = geometry.attributes[attributeName];\r\n                            var normalized = attributeNormalizedMap[attributeName];\r\n\r\n                            if (normalized !== undefined) attribute.normalized = normalized;\r\n                        }\r\n\r\n                        resolve(geometry);\r\n                    },\r\n                    threeAttributeMap,\r\n                    attributeTypeMap\r\n                );\r\n            });\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Texture Transform Extension\r\n     *\r\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_transform\r\n     */\r\n    function GLTFTextureTransformExtension() {\r\n        this.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM;\r\n    }\r\n\r\n    GLTFTextureTransformExtension.prototype.extendTexture = function (texture, transform) {\r\n        texture = texture.clone();\r\n\r\n        if (transform.offset !== undefined) {\r\n            texture.offset.fromArray(transform.offset);\r\n        }\r\n\r\n        if (transform.rotation !== undefined) {\r\n            texture.rotation = transform.rotation;\r\n        }\r\n\r\n        if (transform.scale !== undefined) {\r\n            texture.repeat.fromArray(transform.scale);\r\n        }\r\n\r\n        if (transform.texCoord !== undefined) {\r\n            console.warn('THREE.GLTFLoader: Custom UV sets in \"' + this.name + '\" extension not yet supported.');\r\n        }\r\n\r\n        texture.needsUpdate = true;\r\n\r\n        return texture;\r\n    };\r\n\r\n    /**\r\n     * Specular-Glossiness Extension\r\n     *\r\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\r\n     */\r\n\r\n    /**\r\n     * A sub class of StandardMaterial with some of the functionality\r\n     * changed via the `onBeforeCompile` callback\r\n     * @pailhead\r\n     */\r\n\r\n    function GLTFMeshStandardSGMaterial(params) {\r\n        MeshStandardMaterial.call(this);\r\n\r\n        this.isGLTFSpecularGlossinessMaterial = true;\r\n\r\n        //various chunks that need replacing\r\n        var specularMapParsFragmentChunk = ['#ifdef USE_SPECULARMAP', '\tuniform sampler2D specularMap;', '#endif'].join(\r\n            '\\n'\r\n        );\r\n\r\n        var glossinessMapParsFragmentChunk = [\r\n            '#ifdef USE_GLOSSINESSMAP',\r\n            '\tuniform sampler2D glossinessMap;',\r\n            '#endif'\r\n        ].join('\\n');\r\n\r\n        var specularMapFragmentChunk = [\r\n            'vec3 specularFactor = specular;',\r\n            '#ifdef USE_SPECULARMAP',\r\n            '\tvec4 texelSpecular = texture2D( specularMap, vUv );',\r\n            '\ttexelSpecular = sRGBToLinear( texelSpecular );',\r\n            '\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\r\n            '\tspecularFactor *= texelSpecular.rgb;',\r\n            '#endif'\r\n        ].join('\\n');\r\n\r\n        var glossinessMapFragmentChunk = [\r\n            'float glossinessFactor = glossiness;',\r\n            '#ifdef USE_GLOSSINESSMAP',\r\n            '\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\r\n            '\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\r\n            '\tglossinessFactor *= texelGlossiness.a;',\r\n            '#endif'\r\n        ].join('\\n');\r\n\r\n        var lightPhysicalFragmentChunk = [\r\n            'PhysicalMaterial material;',\r\n            'material.diffuseColor = diffuseColor.rgb;',\r\n            'vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );',\r\n            'float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );',\r\n            'material.specularRoughness = max( 1.0 - glossinessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.',\r\n            'material.specularRoughness += geometryRoughness;',\r\n            'material.specularRoughness = min( material.specularRoughness, 1.0 );',\r\n            'material.specularColor = specularFactor.rgb;'\r\n        ].join('\\n');\r\n\r\n        var uniforms = {\r\n            specular: { value: new Color().setHex(0xffffff) },\r\n            glossiness: { value: 1 },\r\n            specularMap: { value: null },\r\n            glossinessMap: { value: null }\r\n        };\r\n\r\n        this._extraUniforms = uniforms;\r\n\r\n        // please see #14031 or #13198 for an alternate approach\r\n        this.onBeforeCompile = function (shader) {\r\n            for (var uniformName in uniforms) {\r\n                shader.uniforms[uniformName] = uniforms[uniformName];\r\n            }\r\n\r\n            shader.fragmentShader = shader.fragmentShader.replace('uniform float roughness;', 'uniform vec3 specular;');\r\n            shader.fragmentShader = shader.fragmentShader.replace(\r\n                'uniform float metalness;',\r\n                'uniform float glossiness;'\r\n            );\r\n            shader.fragmentShader = shader.fragmentShader.replace(\r\n                '#include <roughnessmap_pars_fragment>',\r\n                specularMapParsFragmentChunk\r\n            );\r\n            shader.fragmentShader = shader.fragmentShader.replace(\r\n                '#include <metalnessmap_pars_fragment>',\r\n                glossinessMapParsFragmentChunk\r\n            );\r\n            shader.fragmentShader = shader.fragmentShader.replace(\r\n                '#include <roughnessmap_fragment>',\r\n                specularMapFragmentChunk\r\n            );\r\n            shader.fragmentShader = shader.fragmentShader.replace(\r\n                '#include <metalnessmap_fragment>',\r\n                glossinessMapFragmentChunk\r\n            );\r\n            shader.fragmentShader = shader.fragmentShader.replace(\r\n                '#include <lights_physical_fragment>',\r\n                lightPhysicalFragmentChunk\r\n            );\r\n        };\r\n\r\n        /*eslint-disable*/\r\n        Object.defineProperties(this, {\r\n            specular: {\r\n                get: function () {\r\n                    return uniforms.specular.value;\r\n                },\r\n                set: function (v) {\r\n                    uniforms.specular.value = v;\r\n                }\r\n            },\r\n            specularMap: {\r\n                get: function () {\r\n                    return uniforms.specularMap.value;\r\n                },\r\n                set: function (v) {\r\n                    uniforms.specularMap.value = v;\r\n                }\r\n            },\r\n            glossiness: {\r\n                get: function () {\r\n                    return uniforms.glossiness.value;\r\n                },\r\n                set: function (v) {\r\n                    uniforms.glossiness.value = v;\r\n                }\r\n            },\r\n            glossinessMap: {\r\n                get: function () {\r\n                    return uniforms.glossinessMap.value;\r\n                },\r\n                set: function (v) {\r\n                    uniforms.glossinessMap.value = v;\r\n                    //how about something like this - @pailhead\r\n                    if (v) {\r\n                        this.defines.USE_GLOSSINESSMAP = '';\r\n                        // set USE_ROUGHNESSMAP to enable vUv\r\n                        this.defines.USE_ROUGHNESSMAP = '';\r\n                    } else {\r\n                        delete this.defines.USE_ROUGHNESSMAP;\r\n                        delete this.defines.USE_GLOSSINESSMAP;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        /*eslint-enable*/\r\n        delete this.metalness;\r\n        delete this.roughness;\r\n        delete this.metalnessMap;\r\n        delete this.roughnessMap;\r\n\r\n        this.setValues(params);\r\n    }\r\n\r\n    GLTFMeshStandardSGMaterial.prototype = Object.create(MeshStandardMaterial.prototype);\r\n    GLTFMeshStandardSGMaterial.prototype.constructor = GLTFMeshStandardSGMaterial;\r\n\r\n    GLTFMeshStandardSGMaterial.prototype.copy = function (source) {\r\n        MeshStandardMaterial.prototype.copy.call(this, source);\r\n        this.specularMap = source.specularMap;\r\n        this.specular.copy(source.specular);\r\n        this.glossinessMap = source.glossinessMap;\r\n        this.glossiness = source.glossiness;\r\n        delete this.metalness;\r\n        delete this.roughness;\r\n        delete this.metalnessMap;\r\n        delete this.roughnessMap;\r\n        return this;\r\n    };\r\n\r\n    function GLTFMaterialsPbrSpecularGlossinessExtension() {\r\n        return {\r\n            name: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\r\n\r\n            specularGlossinessParams: [\r\n                'color',\r\n                'map',\r\n                'lightMap',\r\n                'lightMapIntensity',\r\n                'aoMap',\r\n                'aoMapIntensity',\r\n                'emissive',\r\n                'emissiveIntensity',\r\n                'emissiveMap',\r\n                'bumpMap',\r\n                'bumpScale',\r\n                'normalMap',\r\n                'normalMapType',\r\n                'displacementMap',\r\n                'displacementScale',\r\n                'displacementBias',\r\n                'specularMap',\r\n                'specular',\r\n                'glossinessMap',\r\n                'glossiness',\r\n                'alphaMap',\r\n                'envMap',\r\n                'envMapIntensity',\r\n                'refractionRatio'\r\n            ],\r\n\r\n            getMaterialType: function () {\r\n                return GLTFMeshStandardSGMaterial;\r\n            },\r\n\r\n            extendParams: function (materialParams, materialDef, parser) {\r\n                var pbrSpecularGlossiness = materialDef.extensions[this.name];\r\n\r\n                materialParams.color = new Color(1.0, 1.0, 1.0);\r\n                materialParams.opacity = 1.0;\r\n\r\n                var pending = [];\r\n\r\n                if (Array.isArray(pbrSpecularGlossiness.diffuseFactor)) {\r\n                    var array = pbrSpecularGlossiness.diffuseFactor;\r\n\r\n                    materialParams.color.fromArray(array);\r\n                    materialParams.opacity = array[3];\r\n                }\r\n\r\n                if (pbrSpecularGlossiness.diffuseTexture !== undefined) {\r\n                    pending.push(parser.assignTexture(materialParams, 'map', pbrSpecularGlossiness.diffuseTexture));\r\n                }\r\n\r\n                materialParams.emissive = new Color(0.0, 0.0, 0.0);\r\n                materialParams.glossiness =\r\n                    pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\r\n                materialParams.specular = new Color(1.0, 1.0, 1.0);\r\n\r\n                if (Array.isArray(pbrSpecularGlossiness.specularFactor)) {\r\n                    materialParams.specular.fromArray(pbrSpecularGlossiness.specularFactor);\r\n                }\r\n\r\n                if (pbrSpecularGlossiness.specularGlossinessTexture !== undefined) {\r\n                    var specGlossMapDef = pbrSpecularGlossiness.specularGlossinessTexture;\r\n                    pending.push(parser.assignTexture(materialParams, 'glossinessMap', specGlossMapDef));\r\n                    pending.push(parser.assignTexture(materialParams, 'specularMap', specGlossMapDef));\r\n                }\r\n\r\n                return Promise.all(pending);\r\n            },\r\n\r\n            createMaterial: function (materialParams) {\r\n                var material = new GLTFMeshStandardSGMaterial(materialParams);\r\n                material.fog = true;\r\n\r\n                material.color = materialParams.color;\r\n\r\n                material.map = materialParams.map === undefined ? null : materialParams.map;\r\n\r\n                material.lightMap = null;\r\n                material.lightMapIntensity = 1.0;\r\n\r\n                material.aoMap = materialParams.aoMap === undefined ? null : materialParams.aoMap;\r\n                material.aoMapIntensity = 1.0;\r\n\r\n                material.emissive = materialParams.emissive;\r\n                material.emissiveIntensity = 1.0;\r\n                material.emissiveMap = materialParams.emissiveMap === undefined ? null : materialParams.emissiveMap;\r\n\r\n                material.bumpMap = materialParams.bumpMap === undefined ? null : materialParams.bumpMap;\r\n                material.bumpScale = 1;\r\n\r\n                material.normalMap = materialParams.normalMap === undefined ? null : materialParams.normalMap;\r\n                material.normalMapType = TangentSpaceNormalMap;\r\n\r\n                if (materialParams.normalScale) material.normalScale = materialParams.normalScale;\r\n\r\n                material.displacementMap = null;\r\n                material.displacementScale = 1;\r\n                material.displacementBias = 0;\r\n\r\n                material.specularMap = materialParams.specularMap === undefined ? null : materialParams.specularMap;\r\n                material.specular = materialParams.specular;\r\n\r\n                material.glossinessMap =\r\n                    materialParams.glossinessMap === undefined ? null : materialParams.glossinessMap;\r\n                material.glossiness = materialParams.glossiness;\r\n\r\n                material.alphaMap = null;\r\n\r\n                material.envMap = materialParams.envMap === undefined ? null : materialParams.envMap;\r\n                material.envMapIntensity = 1.0;\r\n\r\n                material.refractionRatio = 0.98;\r\n\r\n                return material;\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Mesh Quantization Extension\r\n     *\r\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_mesh_quantization\r\n     */\r\n    function GLTFMeshQuantizationExtension() {\r\n        this.name = EXTENSIONS.KHR_MESH_QUANTIZATION;\r\n    }\r\n\r\n    /*********************************/\r\n    /********** INTERPOLATION ********/\r\n    /*********************************/\r\n\r\n    // Spline Interpolation\r\n    // Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\r\n    function GLTFCubicSplineInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\r\n        Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\r\n    }\r\n\r\n    GLTFCubicSplineInterpolant.prototype = Object.create(Interpolant.prototype);\r\n    GLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant;\r\n\r\n    GLTFCubicSplineInterpolant.prototype.copySampleValue_ = function (index) {\r\n        // Copies a sample value to the result buffer. See description of glTF\r\n        // CUBICSPLINE values layout in interpolate_() function below.\r\n\r\n        var result = this.resultBuffer,\r\n            values = this.sampleValues,\r\n            valueSize = this.valueSize,\r\n            offset = index * valueSize * 3 + valueSize;\r\n\r\n        for (var i = 0; i !== valueSize; i++) {\r\n            result[i] = values[offset + i];\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    GLTFCubicSplineInterpolant.prototype.beforeStart_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\r\n\r\n    GLTFCubicSplineInterpolant.prototype.afterEnd_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\r\n\r\n    GLTFCubicSplineInterpolant.prototype.interpolate_ = function (i1, t0, t, t1) {\r\n        var result = this.resultBuffer;\r\n        var values = this.sampleValues;\r\n        var stride = this.valueSize;\r\n\r\n        var stride2 = stride * 2;\r\n        var stride3 = stride * 3;\r\n\r\n        var td = t1 - t0;\r\n\r\n        var p = (t - t0) / td;\r\n        var pp = p * p;\r\n        var ppp = pp * p;\r\n\r\n        var offset1 = i1 * stride3;\r\n        var offset0 = offset1 - stride3;\r\n\r\n        var s2 = -2 * ppp + 3 * pp;\r\n        var s3 = ppp - pp;\r\n        var s0 = 1 - s2;\r\n        var s1 = s3 - pp + p;\r\n\r\n        // Layout of keyframe output values for CUBICSPLINE animations:\r\n        //   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\r\n        for (var i = 0; i !== stride; i++) {\r\n            var p0 = values[offset0 + i + stride]; // splineVertex_k\r\n            var m0 = values[offset0 + i + stride2] * td; // outTangent_k * (t_k+1 - t_k)\r\n            var p1 = values[offset1 + i + stride]; // splineVertex_k+1\r\n            var m1 = values[offset1 + i] * td; // inTangent_k+1 * (t_k+1 - t_k)\r\n\r\n            result[i] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    /*********************************/\r\n    /********** INTERNALS ************/\r\n    /*********************************/\r\n\r\n    /* CONSTANTS */\r\n\r\n    var WEBGL_CONSTANTS = {\r\n        FLOAT: 5126,\r\n        //FLOAT_MAT2: 35674,\r\n        FLOAT_MAT3: 35675,\r\n        FLOAT_MAT4: 35676,\r\n        FLOAT_VEC2: 35664,\r\n        FLOAT_VEC3: 35665,\r\n        FLOAT_VEC4: 35666,\r\n        LINEAR: 9729,\r\n        REPEAT: 10497,\r\n        SAMPLER_2D: 35678,\r\n        POINTS: 0,\r\n        LINES: 1,\r\n        LINE_LOOP: 2,\r\n        LINE_STRIP: 3,\r\n        TRIANGLES: 4,\r\n        TRIANGLE_STRIP: 5,\r\n        TRIANGLE_FAN: 6,\r\n        UNSIGNED_BYTE: 5121,\r\n        UNSIGNED_SHORT: 5123\r\n    };\r\n\r\n    var WEBGL_COMPONENT_TYPES = {\r\n        5120: Int8Array,\r\n        5121: Uint8Array,\r\n        5122: Int16Array,\r\n        5123: Uint16Array,\r\n        5125: Uint32Array,\r\n        5126: Float32Array\r\n    };\r\n\r\n    var WEBGL_FILTERS = {\r\n        9728: NearestFilter,\r\n        9729: LinearFilter,\r\n        9984: NearestMipmapNearestFilter,\r\n        9985: LinearMipmapNearestFilter,\r\n        9986: NearestMipmapLinearFilter,\r\n        9987: LinearMipmapLinearFilter\r\n    };\r\n\r\n    var WEBGL_WRAPPINGS = {\r\n        33071: ClampToEdgeWrapping,\r\n        33648: MirroredRepeatWrapping,\r\n        10497: RepeatWrapping\r\n    };\r\n\r\n    var WEBGL_TYPE_SIZES = {\r\n        SCALAR: 1,\r\n        VEC2: 2,\r\n        VEC3: 3,\r\n        VEC4: 4,\r\n        MAT2: 4,\r\n        MAT3: 9,\r\n        MAT4: 16\r\n    };\r\n\r\n    var ATTRIBUTES = {\r\n        POSITION: 'position',\r\n        NORMAL: 'normal',\r\n        TANGENT: 'tangent',\r\n        TEXCOORD_0: 'uv',\r\n        TEXCOORD_1: 'uv2',\r\n        COLOR_0: 'color',\r\n        WEIGHTS_0: 'skinWeight',\r\n        JOINTS_0: 'skinIndex'\r\n    };\r\n\r\n    var PATH_PROPERTIES = {\r\n        scale: 'scale',\r\n        translation: 'position',\r\n        rotation: 'quaternion',\r\n        weights: 'morphTargetInfluences'\r\n    };\r\n\r\n    var INTERPOLATION = {\r\n        CUBICSPLINE: undefined, // We use a custom interpolant (GLTFCubicSplineInterpolation) for CUBICSPLINE tracks. Each\r\n        // keyframe track will be initialized with a default interpolation type, then modified.\r\n        LINEAR: InterpolateLinear,\r\n        STEP: InterpolateDiscrete\r\n    };\r\n\r\n    var ALPHA_MODES = {\r\n        OPAQUE: 'OPAQUE',\r\n        MASK: 'MASK',\r\n        BLEND: 'BLEND'\r\n    };\r\n\r\n    var MIME_TYPE_FORMATS = {\r\n        'image/png': RGBAFormat,\r\n        'image/jpeg': RGBFormat\r\n    };\r\n\r\n    /* UTILITY FUNCTIONS */\r\n\r\n    function resolveURL(url, path) {\r\n        // Invalid URL\r\n        if (typeof url !== 'string' || url === '') return '';\r\n\r\n        // Host Relative URL\r\n        if (/^https?:\\/\\//i.test(path) && /^\\//.test(url)) {\r\n            // eslint-disable-next-line no-useless-escape\r\n            path = path.replace(/(^https?:\\/\\/[^\\/]+).*/i, '$1');\r\n        }\r\n\r\n        // Absolute URL http://,https://,//\r\n        if (/^(https?:)?\\/\\//i.test(url)) return url;\r\n\r\n        // Data URI\r\n        if (/^data:.*,.*$/i.test(url)) return url;\r\n\r\n        // Blob URL\r\n        if (/^blob:.*$/i.test(url)) return url;\r\n\r\n        // Relative URL\r\n        return path + url;\r\n    }\r\n\r\n    /**\r\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\r\n     */\r\n    function createDefaultMaterial(cache) {\r\n        if (cache['DefaultMaterial'] === undefined) {\r\n            cache['DefaultMaterial'] = new MeshStandardMaterial({\r\n                color: 0xffffff,\r\n                emissive: 0x000000,\r\n                metalness: 1,\r\n                roughness: 1,\r\n                transparent: false,\r\n                depthTest: true,\r\n                side: FrontSide\r\n            });\r\n        }\r\n\r\n        return cache['DefaultMaterial'];\r\n    }\r\n\r\n    function addUnknownExtensionsToUserData(knownExtensions, object, objectDef) {\r\n        // Add unknown glTF extensions to an object's userData.\r\n\r\n        for (var name in objectDef.extensions) {\r\n            if (knownExtensions[name] === undefined) {\r\n                object.userData.gltfExtensions = object.userData.gltfExtensions || {};\r\n                object.userData.gltfExtensions[name] = objectDef.extensions[name];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {Object3D|Material|BufferGeometry} object\r\n     * @param {GLTF.definition} gltfDef\r\n     */\r\n    function assignExtrasToUserData(object, gltfDef) {\r\n        if (gltfDef.extras !== undefined) {\r\n            if (typeof gltfDef.extras === 'object') {\r\n                Object.assign(object.userData, gltfDef.extras);\r\n            } else {\r\n                console.warn('THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\r\n     *\r\n     * @param {BufferGeometry} geometry\r\n     * @param {Array<GLTF.Target>} targets\r\n     * @param {GLTFParser} parser\r\n     * @return {Promise<BufferGeometry>}\r\n     */\r\n    function addMorphTargets(geometry, targets, parser) {\r\n        var hasMorphPosition = false;\r\n        var hasMorphNormal = false;\r\n\r\n        for (var i = 0, il = targets.length; i < il; i++) {\r\n            var target = targets[i];\r\n\r\n            if (target.POSITION !== undefined) hasMorphPosition = true;\r\n            if (target.NORMAL !== undefined) hasMorphNormal = true;\r\n\r\n            if (hasMorphPosition && hasMorphNormal) break;\r\n        }\r\n\r\n        if (!hasMorphPosition && !hasMorphNormal) return Promise.resolve(geometry);\r\n\r\n        var pendingPositionAccessors = [];\r\n        var pendingNormalAccessors = [];\r\n\r\n        for (var i = 0, il = targets.length; i < il; i++) {\r\n            var target = targets[i];\r\n\r\n            if (hasMorphPosition) {\r\n                var pendingAccessor =\r\n                    target.POSITION !== undefined\r\n                        ? parser.getDependency('accessor', target.POSITION)\r\n                        : geometry.attributes.position;\r\n\r\n                pendingPositionAccessors.push(pendingAccessor);\r\n            }\r\n\r\n            if (hasMorphNormal) {\r\n                var pendingAccessor =\r\n                    target.NORMAL !== undefined\r\n                        ? parser.getDependency('accessor', target.NORMAL)\r\n                        : geometry.attributes.normal;\r\n\r\n                pendingNormalAccessors.push(pendingAccessor);\r\n            }\r\n        }\r\n\r\n        return Promise.all([Promise.all(pendingPositionAccessors), Promise.all(pendingNormalAccessors)]).then(function (\r\n            accessors\r\n        ) {\r\n            var morphPositions = accessors[0];\r\n            var morphNormals = accessors[1];\r\n\r\n            if (hasMorphPosition) geometry.morphAttributes.position = morphPositions;\r\n            if (hasMorphNormal) geometry.morphAttributes.normal = morphNormals;\r\n            geometry.morphTargetsRelative = true;\r\n\r\n            return geometry;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {Mesh} mesh\r\n     * @param {GLTF.Mesh} meshDef\r\n     */\r\n    function updateMorphTargets(mesh, meshDef) {\r\n        mesh.updateMorphTargets();\r\n\r\n        if (meshDef.weights !== undefined) {\r\n            for (var i = 0, il = meshDef.weights.length; i < il; i++) {\r\n                mesh.morphTargetInfluences[i] = meshDef.weights[i];\r\n            }\r\n        }\r\n\r\n        // .extras has user-defined data, so check that .extras.targetNames is an array.\r\n        if (meshDef.extras && Array.isArray(meshDef.extras.targetNames)) {\r\n            var targetNames = meshDef.extras.targetNames;\r\n\r\n            if (mesh.morphTargetInfluences.length === targetNames.length) {\r\n                mesh.morphTargetDictionary = {};\r\n\r\n                for (var i = 0, il = targetNames.length; i < il; i++) {\r\n                    mesh.morphTargetDictionary[targetNames[i]] = i;\r\n                }\r\n            } else {\r\n                console.warn('THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.');\r\n            }\r\n        }\r\n    }\r\n\r\n    function createPrimitiveKey(primitiveDef) {\r\n        var dracoExtension = primitiveDef.extensions && primitiveDef.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION];\r\n        var geometryKey;\r\n\r\n        if (dracoExtension) {\r\n            geometryKey =\r\n                'draco:' +\r\n                dracoExtension.bufferView +\r\n                ':' +\r\n                dracoExtension.indices +\r\n                ':' +\r\n                createAttributesKey(dracoExtension.attributes);\r\n        } else {\r\n            geometryKey =\r\n                primitiveDef.indices + ':' + createAttributesKey(primitiveDef.attributes) + ':' + primitiveDef.mode;\r\n        }\r\n\r\n        return geometryKey;\r\n    }\r\n\r\n    function createAttributesKey(attributes) {\r\n        var attributesKey = '';\r\n\r\n        var keys = Object.keys(attributes).sort();\r\n\r\n        for (var i = 0, il = keys.length; i < il; i++) {\r\n            attributesKey += keys[i] + ':' + attributes[keys[i]] + ';';\r\n        }\r\n\r\n        return attributesKey;\r\n    }\r\n\r\n    /* GLTF PARSER */\r\n\r\n    function GLTFParser(json, extensions, options) {\r\n        this.json = json || {};\r\n        this.extensions = extensions || {};\r\n        this.options = options || {};\r\n\r\n        // loader object cache\r\n        this.cache = new GLTFRegistry();\r\n\r\n        // BufferGeometry caching\r\n        this.primitiveCache = {};\r\n\r\n        this.textureLoader = new TextureLoader(this.options.manager);\r\n        this.textureLoader.setCrossOrigin(this.options.crossOrigin);\r\n\r\n        this.fileLoader = new FileLoader(this.options.manager);\r\n        this.fileLoader.setResponseType('arraybuffer');\r\n\r\n        if (this.options.crossOrigin === 'use-credentials') {\r\n            this.fileLoader.setWithCredentials(true);\r\n        }\r\n    }\r\n\r\n    GLTFParser.prototype.parse = function (onLoad, onError) {\r\n        var parser = this;\r\n        var json = this.json;\r\n        var extensions = this.extensions;\r\n\r\n        // Clear the loader cache\r\n        this.cache.removeAll();\r\n\r\n        // Mark the special nodes/meshes in json for efficient parse\r\n        this.markDefs();\r\n\r\n        Promise.all([this.getDependencies('scene'), this.getDependencies('animation'), this.getDependencies('camera')])\r\n            .then(function (dependencies) {\r\n                var result = {\r\n                    scene: dependencies[0][json.scene || 0],\r\n                    scenes: dependencies[0],\r\n                    animations: dependencies[1],\r\n                    cameras: dependencies[2],\r\n                    asset: json.asset,\r\n                    parser: parser,\r\n                    userData: {}\r\n                };\r\n\r\n                addUnknownExtensionsToUserData(extensions, result, json);\r\n\r\n                assignExtrasToUserData(result, json);\r\n\r\n                onLoad(result);\r\n            })\r\n            .catch(onError);\r\n    };\r\n\r\n    /**\r\n     * Marks the special nodes/meshes in json for efficient parse.\r\n     */\r\n    GLTFParser.prototype.markDefs = function () {\r\n        var nodeDefs = this.json.nodes || [];\r\n        var skinDefs = this.json.skins || [];\r\n        var meshDefs = this.json.meshes || [];\r\n\r\n        var meshReferences = {};\r\n        var meshUses = {};\r\n\r\n        // Nothing in the node definition indicates whether it is a Bone or an\r\n        // Object3D. Use the skins' joint references to mark bones.\r\n        for (var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex++) {\r\n            var joints = skinDefs[skinIndex].joints;\r\n\r\n            for (var i = 0, il = joints.length; i < il; i++) {\r\n                nodeDefs[joints[i]].isBone = true;\r\n            }\r\n        }\r\n\r\n        // Meshes can (and should) be reused by multiple nodes in a glTF asset. To\r\n        // avoid having more than one Mesh with the same name, count\r\n        // references and rename instances below.\r\n        //\r\n        // Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\r\n        for (var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex++) {\r\n            var nodeDef = nodeDefs[nodeIndex];\r\n\r\n            if (nodeDef.mesh !== undefined) {\r\n                if (meshReferences[nodeDef.mesh] === undefined) {\r\n                    meshReferences[nodeDef.mesh] = meshUses[nodeDef.mesh] = 0;\r\n                }\r\n\r\n                meshReferences[nodeDef.mesh]++;\r\n\r\n                // Nothing in the mesh definition indicates whether it is\r\n                // a SkinnedMesh or Mesh. Use the node's mesh reference\r\n                // to mark SkinnedMesh if node has skin.\r\n                if (nodeDef.skin !== undefined) {\r\n                    meshDefs[nodeDef.mesh].isSkinnedMesh = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.json.meshReferences = meshReferences;\r\n        this.json.meshUses = meshUses;\r\n    };\r\n\r\n    /**\r\n     * Requests the specified dependency asynchronously, with caching.\r\n     * @param {string} type\r\n     * @param {number} index\r\n     * @return {Promise<Object3D|Material|THREE.Texture|AnimationClip|ArrayBuffer|Object>}\r\n     */\r\n    GLTFParser.prototype.getDependency = function (type, index) {\r\n        var cacheKey = type + ':' + index;\r\n        var dependency = this.cache.get(cacheKey);\r\n\r\n        if (!dependency) {\r\n            switch (type) {\r\n                case 'scene':\r\n                    dependency = this.loadScene(index);\r\n                    break;\r\n\r\n                case 'node':\r\n                    dependency = this.loadNode(index);\r\n                    break;\r\n\r\n                case 'mesh':\r\n                    dependency = this.loadMesh(index);\r\n                    break;\r\n\r\n                case 'accessor':\r\n                    dependency = this.loadAccessor(index);\r\n                    break;\r\n\r\n                case 'bufferView':\r\n                    dependency = this.loadBufferView(index);\r\n                    break;\r\n\r\n                case 'buffer':\r\n                    dependency = this.loadBuffer(index);\r\n                    break;\r\n\r\n                case 'material':\r\n                    dependency = this.loadMaterial(index);\r\n                    break;\r\n\r\n                case 'texture':\r\n                    dependency = this.loadTexture(index);\r\n                    break;\r\n\r\n                case 'skin':\r\n                    dependency = this.loadSkin(index);\r\n                    break;\r\n\r\n                case 'animation':\r\n                    dependency = this.loadAnimation(index);\r\n                    break;\r\n\r\n                case 'camera':\r\n                    dependency = this.loadCamera(index);\r\n                    break;\r\n\r\n                case 'light':\r\n                    dependency = this.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].loadLight(index);\r\n                    break;\r\n\r\n                default:\r\n                    throw new Error('Unknown type: ' + type);\r\n            }\r\n\r\n            this.cache.add(cacheKey, dependency);\r\n        }\r\n\r\n        return dependency;\r\n    };\r\n\r\n    /**\r\n     * Requests all dependencies of the specified type asynchronously, with caching.\r\n     * @param {string} type\r\n     * @return {Promise<Array<Object>>}\r\n     */\r\n    GLTFParser.prototype.getDependencies = function (type) {\r\n        var dependencies = this.cache.get(type);\r\n\r\n        if (!dependencies) {\r\n            var parser = this;\r\n            var defs = this.json[type + (type === 'mesh' ? 'es' : 's')] || [];\r\n\r\n            dependencies = Promise.all(\r\n                defs.map(function (def, index) {\r\n                    return parser.getDependency(type, index);\r\n                })\r\n            );\r\n\r\n            this.cache.add(type, dependencies);\r\n        }\r\n\r\n        return dependencies;\r\n    };\r\n\r\n    /**\r\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\r\n     * @param {number} bufferIndex\r\n     * @return {Promise<ArrayBuffer>}\r\n     */\r\n    GLTFParser.prototype.loadBuffer = function (bufferIndex) {\r\n        var bufferDef = this.json.buffers[bufferIndex];\r\n        var loader = this.fileLoader;\r\n\r\n        if (bufferDef.type && bufferDef.type !== 'arraybuffer') {\r\n            throw new Error('THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.');\r\n        }\r\n\r\n        // If present, GLB container is required to be the first buffer.\r\n        if (bufferDef.uri === undefined && bufferIndex === 0) {\r\n            return Promise.resolve(this.extensions[EXTENSIONS.KHR_BINARY_GLTF].body);\r\n        }\r\n\r\n        var options = this.options;\r\n\r\n        return new Promise(function (resolve, reject) {\r\n            loader.load(resolveURL(bufferDef.uri, options.path), resolve, undefined, function () {\r\n                reject(new Error('THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".'));\r\n            });\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\r\n     * @param {number} bufferViewIndex\r\n     * @return {Promise<ArrayBuffer>}\r\n     */\r\n    GLTFParser.prototype.loadBufferView = function (bufferViewIndex) {\r\n        var bufferViewDef = this.json.bufferViews[bufferViewIndex];\r\n\r\n        return this.getDependency('buffer', bufferViewDef.buffer).then(function (buffer) {\r\n            var byteLength = bufferViewDef.byteLength || 0;\r\n            var byteOffset = bufferViewDef.byteOffset || 0;\r\n            return buffer.slice(byteOffset, byteOffset + byteLength);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\r\n     * @param {number} accessorIndex\r\n     * @return {Promise<BufferAttribute|InterleavedBufferAttribute>}\r\n     */\r\n    GLTFParser.prototype.loadAccessor = function (accessorIndex) {\r\n        var parser = this;\r\n        var json = this.json;\r\n\r\n        var accessorDef = this.json.accessors[accessorIndex];\r\n\r\n        if (accessorDef.bufferView === undefined && accessorDef.sparse === undefined) {\r\n            // Ignore empty accessors, which may be used to declare runtime\r\n            // information about attributes coming from another source (e.g. Draco\r\n            // compression extension).\r\n            return Promise.resolve(null);\r\n        }\r\n\r\n        var pendingBufferViews = [];\r\n\r\n        if (accessorDef.bufferView !== undefined) {\r\n            pendingBufferViews.push(this.getDependency('bufferView', accessorDef.bufferView));\r\n        } else {\r\n            pendingBufferViews.push(null);\r\n        }\r\n\r\n        if (accessorDef.sparse !== undefined) {\r\n            pendingBufferViews.push(this.getDependency('bufferView', accessorDef.sparse.indices.bufferView));\r\n            pendingBufferViews.push(this.getDependency('bufferView', accessorDef.sparse.values.bufferView));\r\n        }\r\n\r\n        return Promise.all(pendingBufferViews).then(function (bufferViews) {\r\n            var bufferView = bufferViews[0];\r\n\r\n            var itemSize = WEBGL_TYPE_SIZES[accessorDef.type];\r\n            var TypedArray = WEBGL_COMPONENT_TYPES[accessorDef.componentType];\r\n\r\n            // For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\r\n            var elementBytes = TypedArray.BYTES_PER_ELEMENT;\r\n            var itemBytes = elementBytes * itemSize;\r\n            var byteOffset = accessorDef.byteOffset || 0;\r\n            var byteStride =\r\n                accessorDef.bufferView !== undefined ? json.bufferViews[accessorDef.bufferView].byteStride : undefined;\r\n            var normalized = accessorDef.normalized === true;\r\n            var array, bufferAttribute;\r\n\r\n            // The buffer is not interleaved if the stride is the item size in bytes.\r\n            if (byteStride && byteStride !== itemBytes) {\r\n                // Each \"slice\" of the buffer, as defined by 'count' elements of 'byteStride' bytes, gets its own InterleavedBuffer\r\n                // This makes sure that IBA.count reflects accessor.count properly\r\n                var ibSlice = Math.floor(byteOffset / byteStride);\r\n                var ibCacheKey =\r\n                    'InterleavedBuffer:' +\r\n                    accessorDef.bufferView +\r\n                    ':' +\r\n                    accessorDef.componentType +\r\n                    ':' +\r\n                    ibSlice +\r\n                    ':' +\r\n                    accessorDef.count;\r\n                var ib = parser.cache.get(ibCacheKey);\r\n\r\n                if (!ib) {\r\n                    array = new TypedArray(\r\n                        bufferView,\r\n                        ibSlice * byteStride,\r\n                        (accessorDef.count * byteStride) / elementBytes\r\n                    );\r\n\r\n                    // Integer parameters to IB/IBA are in array elements, not bytes.\r\n                    ib = new InterleavedBuffer(array, byteStride / elementBytes);\r\n\r\n                    parser.cache.add(ibCacheKey, ib);\r\n                }\r\n\r\n                bufferAttribute = new InterleavedBufferAttribute(\r\n                    ib,\r\n                    itemSize,\r\n                    (byteOffset % byteStride) / elementBytes,\r\n                    normalized\r\n                );\r\n            } else {\r\n                if (bufferView === null) {\r\n                    array = new TypedArray(accessorDef.count * itemSize);\r\n                } else {\r\n                    array = new TypedArray(bufferView, byteOffset, accessorDef.count * itemSize);\r\n                }\r\n\r\n                bufferAttribute = new BufferAttribute(array, itemSize, normalized);\r\n            }\r\n\r\n            // https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\r\n            if (accessorDef.sparse !== undefined) {\r\n                var itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\r\n                var TypedArrayIndices = WEBGL_COMPONENT_TYPES[accessorDef.sparse.indices.componentType];\r\n\r\n                var byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\r\n                var byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\r\n\r\n                var sparseIndices = new TypedArrayIndices(\r\n                    bufferViews[1],\r\n                    byteOffsetIndices,\r\n                    accessorDef.sparse.count * itemSizeIndices\r\n                );\r\n                var sparseValues = new TypedArray(\r\n                    bufferViews[2],\r\n                    byteOffsetValues,\r\n                    accessorDef.sparse.count * itemSize\r\n                );\r\n\r\n                if (bufferView !== null) {\r\n                    // Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\r\n                    bufferAttribute = new BufferAttribute(\r\n                        bufferAttribute.array.slice(),\r\n                        bufferAttribute.itemSize,\r\n                        bufferAttribute.normalized\r\n                    );\r\n                }\r\n\r\n                for (var i = 0, il = sparseIndices.length; i < il; i++) {\r\n                    var index = sparseIndices[i];\r\n\r\n                    bufferAttribute.setX(index, sparseValues[i * itemSize]);\r\n                    if (itemSize >= 2) bufferAttribute.setY(index, sparseValues[i * itemSize + 1]);\r\n                    if (itemSize >= 3) bufferAttribute.setZ(index, sparseValues[i * itemSize + 2]);\r\n                    if (itemSize >= 4) bufferAttribute.setW(index, sparseValues[i * itemSize + 3]);\r\n                    if (itemSize >= 5)\r\n                        throw new Error('THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.');\r\n                }\r\n            }\r\n\r\n            return bufferAttribute;\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\r\n     * @param {number} textureIndex\r\n     * @return {Promise<THREE.Texture>}\r\n     */\r\n    GLTFParser.prototype.loadTexture = function (textureIndex) {\r\n        var parser = this;\r\n        var json = this.json;\r\n        var options = this.options;\r\n        var textureLoader = this.textureLoader;\r\n\r\n        var URL = self.URL || self.webkitURL;\r\n\r\n        var textureDef = json.textures[textureIndex];\r\n\r\n        var textureExtensions = textureDef.extensions || {};\r\n\r\n        var source;\r\n\r\n        if (textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS]) {\r\n            source = json.images[textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS].source];\r\n        } else {\r\n            source = json.images[textureDef.source];\r\n        }\r\n\r\n        var sourceURI = source.uri;\r\n        var isObjectURL = false;\r\n\r\n        if (source.bufferView !== undefined) {\r\n            // Load binary image data from bufferView, if provided.\r\n\r\n            sourceURI = parser.getDependency('bufferView', source.bufferView).then(function (bufferView) {\r\n                isObjectURL = true;\r\n                var blob = new Blob([bufferView], { type: source.mimeType });\r\n                sourceURI = URL.createObjectURL(blob);\r\n                return sourceURI;\r\n            });\r\n        }\r\n\r\n        return Promise.resolve(sourceURI)\r\n            .then(function (sourceURI) {\r\n                // Load Texture resource.\r\n\r\n                var loader = options.manager.getHandler(sourceURI);\r\n\r\n                if (!loader) {\r\n                    loader = textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS]\r\n                        ? parser.extensions[EXTENSIONS.MSFT_TEXTURE_DDS].ddsLoader\r\n                        : textureLoader;\r\n                }\r\n\r\n                return new Promise(function (resolve, reject) {\r\n                    loader.load(resolveURL(sourceURI, options.path), resolve, undefined, reject);\r\n                });\r\n            })\r\n            .then(function (texture) {\r\n                // Clean up resources and configure Texture.\r\n\r\n                if (isObjectURL === true) {\r\n                    URL.revokeObjectURL(sourceURI);\r\n                }\r\n\r\n                texture.flipY = false;\r\n\r\n                if (textureDef.name) texture.name = textureDef.name;\r\n\r\n                // Ignore unknown mime types, like DDS files.\r\n                if (source.mimeType in MIME_TYPE_FORMATS) {\r\n                    texture.format = MIME_TYPE_FORMATS[source.mimeType];\r\n                }\r\n\r\n                var samplers = json.samplers || {};\r\n                var sampler = samplers[textureDef.sampler] || {};\r\n\r\n                texture.magFilter = WEBGL_FILTERS[sampler.magFilter] || LinearFilter;\r\n                texture.minFilter = WEBGL_FILTERS[sampler.minFilter] || LinearMipmapLinearFilter;\r\n                texture.wrapS = WEBGL_WRAPPINGS[sampler.wrapS] || RepeatWrapping;\r\n                texture.wrapT = WEBGL_WRAPPINGS[sampler.wrapT] || RepeatWrapping;\r\n\r\n                return texture;\r\n            });\r\n    };\r\n\r\n    /**\r\n     * Asynchronously assigns a texture to the given material parameters.\r\n     * @param {Object} materialParams\r\n     * @param {string} mapName\r\n     * @param {Object} mapDef\r\n     * @return {Promise}\r\n     */\r\n    GLTFParser.prototype.assignTexture = function (materialParams, mapName, mapDef) {\r\n        var parser = this;\r\n\r\n        return this.getDependency('texture', mapDef.index).then(function (texture) {\r\n            if (!texture.isCompressedTexture) {\r\n                switch (mapName) {\r\n                    case 'aoMap':\r\n                    case 'emissiveMap':\r\n                    case 'metalnessMap':\r\n                    case 'normalMap':\r\n                    case 'roughnessMap':\r\n                        texture.format = RGBFormat;\r\n                        break;\r\n                }\r\n            }\r\n\r\n            // Materials sample aoMap from UV set 1 and other maps from UV set 0 - this can't be configured\r\n            // However, we will copy UV set 0 to UV set 1 on demand for aoMap\r\n            if (\r\n                mapDef.texCoord !== undefined &&\r\n                mapDef.texCoord != 0 &&\r\n                !(mapName === 'aoMap' && mapDef.texCoord == 1)\r\n            ) {\r\n                console.warn(\r\n                    'THREE.GLTFLoader: Custom UV set ' +\r\n                        mapDef.texCoord +\r\n                        ' for texture ' +\r\n                        mapName +\r\n                        ' not yet supported.'\r\n                );\r\n            }\r\n\r\n            if (parser.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM]) {\r\n                var transform =\r\n                    mapDef.extensions !== undefined ? mapDef.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM] : undefined;\r\n\r\n                if (transform) {\r\n                    texture = parser.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM].extendTexture(texture, transform);\r\n                }\r\n            }\r\n\r\n            materialParams[mapName] = texture;\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Assigns final material to a Mesh, Line, or Points instance. The instance\r\n     * already has a material (generated from the glTF material options alone)\r\n     * but reuse of the same glTF material may require multiple threejs materials\r\n     * to accomodate different primitive types, defines, etc. New materials will\r\n     * be created if necessary, and reused from a cache.\r\n     * @param  {Object3D} mesh Mesh, Line, or Points instance.\r\n     */\r\n    GLTFParser.prototype.assignFinalMaterial = function (mesh) {\r\n        var geometry = mesh.geometry;\r\n        var material = mesh.material;\r\n\r\n        var useVertexTangents = geometry.attributes.tangent !== undefined;\r\n        var useVertexColors = geometry.attributes.color !== undefined;\r\n        var useFlatShading = geometry.attributes.normal === undefined;\r\n        var useSkinning = mesh.isSkinnedMesh === true;\r\n        var useMorphTargets = Object.keys(geometry.morphAttributes).length > 0;\r\n        var useMorphNormals = useMorphTargets && geometry.morphAttributes.normal !== undefined;\r\n\r\n        if (mesh.isPoints) {\r\n            var cacheKey = 'PointsMaterial:' + material.uuid;\r\n\r\n            var pointsMaterial = this.cache.get(cacheKey);\r\n\r\n            if (!pointsMaterial) {\r\n                pointsMaterial = new PointsMaterial();\r\n                Material.prototype.copy.call(pointsMaterial, material);\r\n                pointsMaterial.color.copy(material.color);\r\n                pointsMaterial.map = material.map;\r\n                pointsMaterial.sizeAttenuation = false; // glTF spec says points should be 1px\r\n\r\n                this.cache.add(cacheKey, pointsMaterial);\r\n            }\r\n\r\n            material = pointsMaterial;\r\n        } else if (mesh.isLine) {\r\n            var cacheKey = 'LineBasicMaterial:' + material.uuid;\r\n\r\n            var lineMaterial = this.cache.get(cacheKey);\r\n\r\n            if (!lineMaterial) {\r\n                lineMaterial = new LineBasicMaterial();\r\n                Material.prototype.copy.call(lineMaterial, material);\r\n                lineMaterial.color.copy(material.color);\r\n\r\n                this.cache.add(cacheKey, lineMaterial);\r\n            }\r\n\r\n            material = lineMaterial;\r\n        }\r\n\r\n        // Clone the material if it will be modified\r\n        if (useVertexTangents || useVertexColors || useFlatShading || useSkinning || useMorphTargets) {\r\n            var cacheKey = 'ClonedMaterial:' + material.uuid + ':';\r\n\r\n            if (material.isGLTFSpecularGlossinessMaterial) cacheKey += 'specular-glossiness:';\r\n            if (useSkinning) cacheKey += 'skinning:';\r\n            if (useVertexTangents) cacheKey += 'vertex-tangents:';\r\n            if (useVertexColors) cacheKey += 'vertex-colors:';\r\n            if (useFlatShading) cacheKey += 'flat-shading:';\r\n            if (useMorphTargets) cacheKey += 'morph-targets:';\r\n            if (useMorphNormals) cacheKey += 'morph-normals:';\r\n\r\n            var cachedMaterial = this.cache.get(cacheKey);\r\n\r\n            if (!cachedMaterial) {\r\n                cachedMaterial = material.clone();\r\n\r\n                if (useSkinning) cachedMaterial.skinning = true;\r\n                if (useVertexTangents) cachedMaterial.vertexTangents = true;\r\n                if (useVertexColors) cachedMaterial.vertexColors = true;\r\n                if (useFlatShading) cachedMaterial.flatShading = true;\r\n                if (useMorphTargets) cachedMaterial.morphTargets = true;\r\n                if (useMorphNormals) cachedMaterial.morphNormals = true;\r\n\r\n                this.cache.add(cacheKey, cachedMaterial);\r\n            }\r\n\r\n            material = cachedMaterial;\r\n        }\r\n\r\n        // workarounds for mesh and geometry\r\n\r\n        if (material.aoMap && geometry.attributes.uv2 === undefined && geometry.attributes.uv !== undefined) {\r\n            geometry.setAttribute('uv2', geometry.attributes.uv);\r\n        }\r\n\r\n        // https://github.com/mrdoob/three.js/issues/11438#issuecomment-507003995\r\n        if (material.normalScale && !useVertexTangents) {\r\n            material.normalScale.y = -material.normalScale.y;\r\n        }\r\n\r\n        if (material.clearcoatNormalScale && !useVertexTangents) {\r\n            material.clearcoatNormalScale.y = -material.clearcoatNormalScale.y;\r\n        }\r\n\r\n        mesh.material = material;\r\n    };\r\n\r\n    /**\r\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\r\n     * @param {number} materialIndex\r\n     * @return {Promise<Material>}\r\n     */\r\n    GLTFParser.prototype.loadMaterial = function (materialIndex) {\r\n        var parser = this;\r\n        var json = this.json;\r\n        var extensions = this.extensions;\r\n        var materialDef = json.materials[materialIndex];\r\n\r\n        var materialType;\r\n        var materialParams = {};\r\n        var materialExtensions = materialDef.extensions || {};\r\n\r\n        var pending = [];\r\n\r\n        if (materialExtensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS]) {\r\n            var sgExtension = extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS];\r\n            materialType = sgExtension.getMaterialType();\r\n            pending.push(sgExtension.extendParams(materialParams, materialDef, parser));\r\n        } else if (materialExtensions[EXTENSIONS.KHR_MATERIALS_UNLIT]) {\r\n            var kmuExtension = extensions[EXTENSIONS.KHR_MATERIALS_UNLIT];\r\n            materialType = kmuExtension.getMaterialType();\r\n            pending.push(kmuExtension.extendParams(materialParams, materialDef, parser));\r\n        } else {\r\n            // Specification:\r\n            // https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\r\n\r\n            materialType = MeshStandardMaterial;\r\n\r\n            var metallicRoughness = materialDef.pbrMetallicRoughness || {};\r\n\r\n            materialParams.color = new Color(1.0, 1.0, 1.0);\r\n            materialParams.opacity = 1.0;\r\n\r\n            if (Array.isArray(metallicRoughness.baseColorFactor)) {\r\n                var array = metallicRoughness.baseColorFactor;\r\n\r\n                materialParams.color.fromArray(array);\r\n                materialParams.opacity = array[3];\r\n            }\r\n\r\n            if (metallicRoughness.baseColorTexture !== undefined) {\r\n                pending.push(parser.assignTexture(materialParams, 'map', metallicRoughness.baseColorTexture));\r\n            }\r\n\r\n            materialParams.metalness =\r\n                metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\r\n            materialParams.roughness =\r\n                metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\r\n\r\n            if (metallicRoughness.metallicRoughnessTexture !== undefined) {\r\n                pending.push(\r\n                    parser.assignTexture(materialParams, 'metalnessMap', metallicRoughness.metallicRoughnessTexture)\r\n                );\r\n                pending.push(\r\n                    parser.assignTexture(materialParams, 'roughnessMap', metallicRoughness.metallicRoughnessTexture)\r\n                );\r\n            }\r\n        }\r\n\r\n        if (materialDef.doubleSided === true) {\r\n            materialParams.side = DoubleSide;\r\n        }\r\n\r\n        var alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\r\n\r\n        if (alphaMode === ALPHA_MODES.BLEND) {\r\n            materialParams.transparent = true;\r\n\r\n            // See: https://github.com/mrdoob/three.js/issues/17706\r\n            materialParams.depthWrite = false;\r\n        } else {\r\n            materialParams.transparent = false;\r\n\r\n            if (alphaMode === ALPHA_MODES.MASK) {\r\n                materialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\r\n            }\r\n        }\r\n\r\n        if (materialDef.normalTexture !== undefined && materialType !== MeshBasicMaterial) {\r\n            pending.push(parser.assignTexture(materialParams, 'normalMap', materialDef.normalTexture));\r\n\r\n            materialParams.normalScale = new Vector2(1, 1);\r\n\r\n            if (materialDef.normalTexture.scale !== undefined) {\r\n                materialParams.normalScale.set(materialDef.normalTexture.scale, materialDef.normalTexture.scale);\r\n            }\r\n        }\r\n\r\n        if (materialDef.occlusionTexture !== undefined && materialType !== MeshBasicMaterial) {\r\n            pending.push(parser.assignTexture(materialParams, 'aoMap', materialDef.occlusionTexture));\r\n\r\n            if (materialDef.occlusionTexture.strength !== undefined) {\r\n                materialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\r\n            }\r\n        }\r\n\r\n        if (materialDef.emissiveFactor !== undefined && materialType !== MeshBasicMaterial) {\r\n            materialParams.emissive = new Color().fromArray(materialDef.emissiveFactor);\r\n        }\r\n\r\n        if (materialDef.emissiveTexture !== undefined && materialType !== MeshBasicMaterial) {\r\n            pending.push(parser.assignTexture(materialParams, 'emissiveMap', materialDef.emissiveTexture));\r\n        }\r\n\r\n        if (materialExtensions[EXTENSIONS.KHR_MATERIALS_CLEARCOAT]) {\r\n            var clearcoatExtension = extensions[EXTENSIONS.KHR_MATERIALS_CLEARCOAT];\r\n            materialType = clearcoatExtension.getMaterialType();\r\n            pending.push(clearcoatExtension.extendParams(materialParams, { extensions: materialExtensions }, parser));\r\n        }\r\n\r\n        return Promise.all(pending).then(function () {\r\n            var material;\r\n\r\n            if (materialType === GLTFMeshStandardSGMaterial) {\r\n                material = extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].createMaterial(materialParams);\r\n            } else {\r\n                material = new materialType(materialParams);\r\n            }\r\n\r\n            if (materialDef.name) material.name = materialDef.name;\r\n\r\n            // baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\r\n            if (material.map) material.map.encoding = sRGBEncoding;\r\n            if (material.emissiveMap) material.emissiveMap.encoding = sRGBEncoding;\r\n\r\n            assignExtrasToUserData(material, materialDef);\r\n\r\n            if (materialDef.extensions) addUnknownExtensionsToUserData(extensions, material, materialDef);\r\n\r\n            return material;\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @param {BufferGeometry} geometry\r\n     * @param {GLTF.Primitive} primitiveDef\r\n     * @param {GLTFParser} parser\r\n     */\r\n    function computeBounds(geometry, primitiveDef, parser) {\r\n        var attributes = primitiveDef.attributes;\r\n\r\n        var box = new Box3();\r\n\r\n        if (attributes.POSITION !== undefined) {\r\n            var accessor = parser.json.accessors[attributes.POSITION];\r\n\r\n            var min = accessor.min;\r\n            var max = accessor.max;\r\n\r\n            // glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\r\n\r\n            if (min !== undefined && max !== undefined) {\r\n                box.set(new Vector3(min[0], min[1], min[2]), new Vector3(max[0], max[1], max[2]));\r\n            } else {\r\n                console.warn('THREE.GLTFLoader: Missing min/max properties for accessor POSITION.');\r\n\r\n                return;\r\n            }\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        var targets = primitiveDef.targets;\r\n\r\n        if (targets !== undefined) {\r\n            var maxDisplacement = new Vector3();\r\n            var vector = new Vector3();\r\n\r\n            for (var i = 0, il = targets.length; i < il; i++) {\r\n                var target = targets[i];\r\n\r\n                if (target.POSITION !== undefined) {\r\n                    var accessor = parser.json.accessors[target.POSITION];\r\n                    var min = accessor.min;\r\n                    var max = accessor.max;\r\n\r\n                    // glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\r\n\r\n                    if (min !== undefined && max !== undefined) {\r\n                        // we need to get max of absolute components because target weight is [-1,1]\r\n                        vector.setX(Math.max(Math.abs(min[0]), Math.abs(max[0])));\r\n                        vector.setY(Math.max(Math.abs(min[1]), Math.abs(max[1])));\r\n                        vector.setZ(Math.max(Math.abs(min[2]), Math.abs(max[2])));\r\n\r\n                        // Note: this assumes that the sum of all weights is at most 1. This isn't quite correct - it's more conservative\r\n                        // to assume that each target can have a max weight of 1. However, for some use cases - notably, when morph targets\r\n                        // are used to implement key-frame animations and as such only two are active at a time - this results in very large\r\n                        // boxes. So for now we make a box that's sometimes a touch too small but is hopefully mostly of reasonable size.\r\n                        maxDisplacement.max(vector);\r\n                    } else {\r\n                        console.warn('THREE.GLTFLoader: Missing min/max properties for accessor POSITION.');\r\n                    }\r\n                }\r\n            }\r\n\r\n            // As per comment above this box isn't conservative, but has a reasonable size for a very large number of morph targets.\r\n            box.expandByVector(maxDisplacement);\r\n        }\r\n\r\n        geometry.boundingBox = box;\r\n\r\n        var sphere = new Sphere();\r\n\r\n        box.getCenter(sphere.center);\r\n        sphere.radius = box.min.distanceTo(box.max) / 2;\r\n\r\n        geometry.boundingSphere = sphere;\r\n    }\r\n\r\n    /**\r\n     * @param {BufferGeometry} geometry\r\n     * @param {GLTF.Primitive} primitiveDef\r\n     * @param {GLTFParser} parser\r\n     * @return {Promise<BufferGeometry>}\r\n     */\r\n    function addPrimitiveAttributes(geometry, primitiveDef, parser) {\r\n        var attributes = primitiveDef.attributes;\r\n\r\n        var pending = [];\r\n\r\n        function assignAttributeAccessor(accessorIndex, attributeName) {\r\n            return parser.getDependency('accessor', accessorIndex).then(function (accessor) {\r\n                geometry.setAttribute(attributeName, accessor);\r\n            });\r\n        }\r\n\r\n        for (var gltfAttributeName in attributes) {\r\n            var threeAttributeName = ATTRIBUTES[gltfAttributeName] || gltfAttributeName.toLowerCase();\r\n\r\n            // Skip attributes already provided by e.g. Draco extension.\r\n            if (threeAttributeName in geometry.attributes) continue;\r\n\r\n            pending.push(assignAttributeAccessor(attributes[gltfAttributeName], threeAttributeName));\r\n        }\r\n\r\n        if (primitiveDef.indices !== undefined && !geometry.index) {\r\n            var accessor = parser.getDependency('accessor', primitiveDef.indices).then(function (accessor) {\r\n                geometry.setIndex(accessor);\r\n            });\r\n\r\n            pending.push(accessor);\r\n        }\r\n\r\n        assignExtrasToUserData(geometry, primitiveDef);\r\n\r\n        computeBounds(geometry, primitiveDef, parser);\r\n\r\n        return Promise.all(pending).then(function () {\r\n            return primitiveDef.targets !== undefined\r\n                ? addMorphTargets(geometry, primitiveDef.targets, parser)\r\n                : geometry;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {BufferGeometry} geometry\r\n     * @param {Number} drawMode\r\n     * @return {BufferGeometry}\r\n     */\r\n    function toTrianglesDrawMode(geometry, drawMode) {\r\n        var index = geometry.getIndex();\r\n\r\n        // generate index if not present\r\n\r\n        if (index === null) {\r\n            var indices = [];\r\n\r\n            var position = geometry.getAttribute('position');\r\n\r\n            if (position !== undefined) {\r\n                for (var i = 0; i < position.count; i++) {\r\n                    indices.push(i);\r\n                }\r\n\r\n                geometry.setIndex(indices);\r\n                index = geometry.getIndex();\r\n            } else {\r\n                console.error(\r\n                    'THREE.GLTFLoader.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.'\r\n                );\r\n                return geometry;\r\n            }\r\n        }\r\n\r\n        //\r\n\r\n        var numberOfTriangles = index.count - 2;\r\n        var newIndices = [];\r\n\r\n        if (drawMode === TriangleFanDrawMode) {\r\n            // gl.TRIANGLE_FAN\r\n\r\n            for (var i = 1; i <= numberOfTriangles; i++) {\r\n                newIndices.push(index.getX(0));\r\n                newIndices.push(index.getX(i));\r\n                newIndices.push(index.getX(i + 1));\r\n            }\r\n        } else {\r\n            // gl.TRIANGLE_STRIP\r\n\r\n            for (var i = 0; i < numberOfTriangles; i++) {\r\n                if (i % 2 === 0) {\r\n                    newIndices.push(index.getX(i));\r\n                    newIndices.push(index.getX(i + 1));\r\n                    newIndices.push(index.getX(i + 2));\r\n                } else {\r\n                    newIndices.push(index.getX(i + 2));\r\n                    newIndices.push(index.getX(i + 1));\r\n                    newIndices.push(index.getX(i));\r\n                }\r\n            }\r\n        }\r\n\r\n        if (newIndices.length / 3 !== numberOfTriangles) {\r\n            console.error('THREE.GLTFLoader.toTrianglesDrawMode(): Unable to generate correct amount of triangles.');\r\n        }\r\n\r\n        // build final geometry\r\n\r\n        var newGeometry = geometry.clone();\r\n        newGeometry.setIndex(newIndices);\r\n\r\n        return newGeometry;\r\n    }\r\n\r\n    /**\r\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\r\n     *\r\n     * Creates BufferGeometries from primitives.\r\n     *\r\n     * @param {Array<GLTF.Primitive>} primitives\r\n     * @return {Promise<Array<BufferGeometry>>}\r\n     */\r\n    GLTFParser.prototype.loadGeometries = function (primitives) {\r\n        var parser = this;\r\n        var extensions = this.extensions;\r\n        var cache = this.primitiveCache;\r\n\r\n        function createDracoPrimitive(primitive) {\r\n            return extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION]\r\n                .decodePrimitive(primitive, parser)\r\n                .then(function (geometry) {\r\n                    return addPrimitiveAttributes(geometry, primitive, parser);\r\n                });\r\n        }\r\n\r\n        var pending = [];\r\n\r\n        for (var i = 0, il = primitives.length; i < il; i++) {\r\n            var primitive = primitives[i];\r\n            var cacheKey = createPrimitiveKey(primitive);\r\n\r\n            // See if we've already created this geometry\r\n            var cached = cache[cacheKey];\r\n\r\n            if (cached) {\r\n                // Use the cached geometry if it exists\r\n                pending.push(cached.promise);\r\n            } else {\r\n                var geometryPromise;\r\n\r\n                if (primitive.extensions && primitive.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION]) {\r\n                    // Use DRACO geometry if available\r\n                    geometryPromise = createDracoPrimitive(primitive);\r\n                } else {\r\n                    // Otherwise create a new geometry\r\n                    geometryPromise = addPrimitiveAttributes(new BufferGeometry(), primitive, parser);\r\n                }\r\n\r\n                // Cache this geometry\r\n                cache[cacheKey] = { primitive: primitive, promise: geometryPromise };\r\n\r\n                pending.push(geometryPromise);\r\n            }\r\n        }\r\n\r\n        return Promise.all(pending);\r\n    };\r\n\r\n    /**\r\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\r\n     * @param {number} meshIndex\r\n     * @return {Promise<Group|Mesh|SkinnedMesh>}\r\n     */\r\n    GLTFParser.prototype.loadMesh = function (meshIndex) {\r\n        var parser = this;\r\n        var json = this.json;\r\n\r\n        var meshDef = json.meshes[meshIndex];\r\n        var primitives = meshDef.primitives;\r\n\r\n        var pending = [];\r\n\r\n        for (var i = 0, il = primitives.length; i < il; i++) {\r\n            var material =\r\n                primitives[i].material === undefined\r\n                    ? createDefaultMaterial(this.cache)\r\n                    : this.getDependency('material', primitives[i].material);\r\n\r\n            pending.push(material);\r\n        }\r\n\r\n        pending.push(parser.loadGeometries(primitives));\r\n\r\n        return Promise.all(pending).then(function (results) {\r\n            var materials = results.slice(0, results.length - 1);\r\n            var geometries = results[results.length - 1];\r\n\r\n            var meshes = [];\r\n\r\n            for (var i = 0, il = geometries.length; i < il; i++) {\r\n                var geometry = geometries[i];\r\n                var primitive = primitives[i];\r\n\r\n                // 1. create Mesh\r\n\r\n                var mesh;\r\n\r\n                var material = materials[i];\r\n\r\n                if (\r\n                    primitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\r\n                    primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\r\n                    primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\r\n                    primitive.mode === undefined\r\n                ) {\r\n                    // .isSkinnedMesh isn't in glTF spec. See .markDefs()\r\n                    mesh =\r\n                        meshDef.isSkinnedMesh === true\r\n                            ? new SkinnedMesh(geometry, material)\r\n                            : new Mesh(geometry, material);\r\n\r\n                    if (mesh.isSkinnedMesh === true && !mesh.geometry.attributes.skinWeight.normalized) {\r\n                        // we normalize floating point skin weight array to fix malformed assets (see #15319)\r\n                        // it's important to skip this for non-float32 data since normalizeSkinWeights assumes non-normalized inputs\r\n                        mesh.normalizeSkinWeights();\r\n                    }\r\n\r\n                    if (primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP) {\r\n                        mesh.geometry = toTrianglesDrawMode(mesh.geometry, TriangleStripDrawMode);\r\n                    } else if (primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN) {\r\n                        mesh.geometry = toTrianglesDrawMode(mesh.geometry, TriangleFanDrawMode);\r\n                    }\r\n                } else if (primitive.mode === WEBGL_CONSTANTS.LINES) {\r\n                    mesh = new LineSegments(geometry, material);\r\n                } else if (primitive.mode === WEBGL_CONSTANTS.LINE_STRIP) {\r\n                    mesh = new Line(geometry, material);\r\n                } else if (primitive.mode === WEBGL_CONSTANTS.LINE_LOOP) {\r\n                    mesh = new LineLoop(geometry, material);\r\n                } else if (primitive.mode === WEBGL_CONSTANTS.POINTS) {\r\n                    mesh = new Points(geometry, material);\r\n                } else {\r\n                    throw new Error('THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode);\r\n                }\r\n\r\n                if (Object.keys(mesh.geometry.morphAttributes).length > 0) {\r\n                    updateMorphTargets(mesh, meshDef);\r\n                }\r\n\r\n                mesh.name = meshDef.name || 'mesh_' + meshIndex;\r\n\r\n                if (geometries.length > 1) mesh.name += '_' + i;\r\n\r\n                assignExtrasToUserData(mesh, meshDef);\r\n\r\n                parser.assignFinalMaterial(mesh);\r\n\r\n                meshes.push(mesh);\r\n            }\r\n\r\n            if (meshes.length === 1) {\r\n                return meshes[0];\r\n            }\r\n\r\n            var group = new Group();\r\n\r\n            for (var i = 0, il = meshes.length; i < il; i++) {\r\n                group.add(meshes[i]);\r\n            }\r\n\r\n            return group;\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\r\n     * @param {number} cameraIndex\r\n     * @return {Promise<THREE.Camera>}\r\n     */\r\n    GLTFParser.prototype.loadCamera = function (cameraIndex) {\r\n        var camera;\r\n        var cameraDef = this.json.cameras[cameraIndex];\r\n        var params = cameraDef[cameraDef.type];\r\n\r\n        if (!params) {\r\n            console.warn('THREE.GLTFLoader: Missing camera parameters.');\r\n            return;\r\n        }\r\n\r\n        if (cameraDef.type === 'perspective') {\r\n            camera = new PerspectiveCamera(\r\n                MathUtils.radToDeg(params.yfov),\r\n                params.aspectRatio || 1,\r\n                params.znear || 1,\r\n                params.zfar || 2e6\r\n            );\r\n        } else if (cameraDef.type === 'orthographic') {\r\n            camera = new OrthographicCamera(\r\n                -params.xmag,\r\n                params.xmag,\r\n                params.ymag,\r\n                -params.ymag,\r\n                params.znear,\r\n                params.zfar\r\n            );\r\n        }\r\n\r\n        if (cameraDef.name) camera.name = cameraDef.name;\r\n\r\n        assignExtrasToUserData(camera, cameraDef);\r\n\r\n        return Promise.resolve(camera);\r\n    };\r\n\r\n    /**\r\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\r\n     * @param {number} skinIndex\r\n     * @return {Promise<Object>}\r\n     */\r\n    GLTFParser.prototype.loadSkin = function (skinIndex) {\r\n        var skinDef = this.json.skins[skinIndex];\r\n\r\n        var skinEntry = { joints: skinDef.joints };\r\n\r\n        if (skinDef.inverseBindMatrices === undefined) {\r\n            return Promise.resolve(skinEntry);\r\n        }\r\n\r\n        return this.getDependency('accessor', skinDef.inverseBindMatrices).then(function (accessor) {\r\n            skinEntry.inverseBindMatrices = accessor;\r\n\r\n            return skinEntry;\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\r\n     * @param {number} animationIndex\r\n     * @return {Promise<AnimationClip>}\r\n     */\r\n    GLTFParser.prototype.loadAnimation = function (animationIndex) {\r\n        var json = this.json;\r\n\r\n        var animationDef = json.animations[animationIndex];\r\n\r\n        var pendingNodes = [];\r\n        var pendingInputAccessors = [];\r\n        var pendingOutputAccessors = [];\r\n        var pendingSamplers = [];\r\n        var pendingTargets = [];\r\n\r\n        for (var i = 0, il = animationDef.channels.length; i < il; i++) {\r\n            var channel = animationDef.channels[i];\r\n            var sampler = animationDef.samplers[channel.sampler];\r\n            var target = channel.target;\r\n            var name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\r\n            var input = animationDef.parameters !== undefined ? animationDef.parameters[sampler.input] : sampler.input;\r\n            var output =\r\n                animationDef.parameters !== undefined ? animationDef.parameters[sampler.output] : sampler.output;\r\n\r\n            pendingNodes.push(this.getDependency('node', name));\r\n            pendingInputAccessors.push(this.getDependency('accessor', input));\r\n            pendingOutputAccessors.push(this.getDependency('accessor', output));\r\n            pendingSamplers.push(sampler);\r\n            pendingTargets.push(target);\r\n        }\r\n\r\n        return Promise.all([\r\n            Promise.all(pendingNodes),\r\n            Promise.all(pendingInputAccessors),\r\n            Promise.all(pendingOutputAccessors),\r\n            Promise.all(pendingSamplers),\r\n            Promise.all(pendingTargets)\r\n        ]).then(function (dependencies) {\r\n            var nodes = dependencies[0];\r\n            var inputAccessors = dependencies[1];\r\n            var outputAccessors = dependencies[2];\r\n            var samplers = dependencies[3];\r\n            var targets = dependencies[4];\r\n\r\n            var tracks = [];\r\n\r\n            for (var i = 0, il = nodes.length; i < il; i++) {\r\n                var node = nodes[i];\r\n                var inputAccessor = inputAccessors[i];\r\n                var outputAccessor = outputAccessors[i];\r\n                var sampler = samplers[i];\r\n                var target = targets[i];\r\n\r\n                if (node === undefined) continue;\r\n\r\n                node.updateMatrix();\r\n                node.matrixAutoUpdate = true;\r\n\r\n                var TypedKeyframeTrack;\r\n\r\n                switch (PATH_PROPERTIES[target.path]) {\r\n                    case PATH_PROPERTIES.weights:\r\n                        TypedKeyframeTrack = NumberKeyframeTrack;\r\n                        break;\r\n\r\n                    case PATH_PROPERTIES.rotation:\r\n                        TypedKeyframeTrack = QuaternionKeyframeTrack;\r\n                        break;\r\n\r\n                    case PATH_PROPERTIES.position:\r\n                    case PATH_PROPERTIES.scale:\r\n                    default:\r\n                        TypedKeyframeTrack = VectorKeyframeTrack;\r\n                        break;\r\n                }\r\n\r\n                var targetName = node.name ? node.name : node.uuid;\r\n\r\n                var interpolation =\r\n                    sampler.interpolation !== undefined ? INTERPOLATION[sampler.interpolation] : InterpolateLinear;\r\n\r\n                var targetNames = [];\r\n\r\n                if (PATH_PROPERTIES[target.path] === PATH_PROPERTIES.weights) {\r\n                    // Node may be a Group (glTF mesh with several primitives) or a Mesh.\r\n                    node.traverse(function (object) {\r\n                        if (object.isMesh === true && object.morphTargetInfluences) {\r\n                            targetNames.push(object.name ? object.name : object.uuid);\r\n                        }\r\n                    });\r\n                } else {\r\n                    targetNames.push(targetName);\r\n                }\r\n\r\n                var outputArray = outputAccessor.array;\r\n\r\n                if (outputAccessor.normalized) {\r\n                    var scale;\r\n\r\n                    if (outputArray.constructor === Int8Array) {\r\n                        scale = 1 / 127;\r\n                    } else if (outputArray.constructor === Uint8Array) {\r\n                        scale = 1 / 255;\r\n                    } else if (outputArray.constructor == Int16Array) {\r\n                        scale = 1 / 32767;\r\n                    } else if (outputArray.constructor === Uint16Array) {\r\n                        scale = 1 / 65535;\r\n                    } else {\r\n                        throw new Error('THREE.GLTFLoader: Unsupported output accessor component type.');\r\n                    }\r\n\r\n                    var scaled = new Float32Array(outputArray.length);\r\n\r\n                    for (var j = 0, jl = outputArray.length; j < jl; j++) {\r\n                        scaled[j] = outputArray[j] * scale;\r\n                    }\r\n\r\n                    outputArray = scaled;\r\n                }\r\n\r\n                for (var j = 0, jl = targetNames.length; j < jl; j++) {\r\n                    var track = new TypedKeyframeTrack(\r\n                        targetNames[j] + '.' + PATH_PROPERTIES[target.path],\r\n                        inputAccessor.array,\r\n                        outputArray,\r\n                        interpolation\r\n                    );\r\n\r\n                    // Override interpolation with custom factory method.\r\n                    if (sampler.interpolation === 'CUBICSPLINE') {\r\n                        track.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline(result) {\r\n                            // A CUBICSPLINE keyframe in glTF has three output values for each input value,\r\n                            // representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\r\n                            // must be divided by three to get the interpolant's sampleSize argument.\r\n\r\n                            return new GLTFCubicSplineInterpolant(\r\n                                this.times,\r\n                                this.values,\r\n                                this.getValueSize() / 3,\r\n                                result\r\n                            );\r\n                        };\r\n\r\n                        // Mark as CUBICSPLINE. `track.getInterpolation()` doesn't support custom interpolants.\r\n                        track.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\r\n                    }\r\n\r\n                    tracks.push(track);\r\n                }\r\n            }\r\n\r\n            var name = animationDef.name ? animationDef.name : 'animation_' + animationIndex;\r\n\r\n            return new AnimationClip(name, undefined, tracks);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\r\n     * @param {number} nodeIndex\r\n     * @return {Promise<Object3D>}\r\n     */\r\n    GLTFParser.prototype.loadNode = function (nodeIndex) {\r\n        var json = this.json;\r\n        var extensions = this.extensions;\r\n        var parser = this;\r\n\r\n        var meshReferences = json.meshReferences;\r\n        var meshUses = json.meshUses;\r\n\r\n        var nodeDef = json.nodes[nodeIndex];\r\n\r\n        return (function () {\r\n            var pending = [];\r\n\r\n            if (nodeDef.mesh !== undefined) {\r\n                pending.push(\r\n                    parser.getDependency('mesh', nodeDef.mesh).then(function (mesh) {\r\n                        var node;\r\n\r\n                        if (meshReferences[nodeDef.mesh] > 1) {\r\n                            var instanceNum = meshUses[nodeDef.mesh]++;\r\n\r\n                            node = mesh.clone();\r\n                            node.name += '_instance_' + instanceNum;\r\n                        } else {\r\n                            node = mesh;\r\n                        }\r\n\r\n                        // if weights are provided on the node, override weights on the mesh.\r\n                        if (nodeDef.weights !== undefined) {\r\n                            node.traverse(function (o) {\r\n                                if (!o.isMesh) return;\r\n\r\n                                for (var i = 0, il = nodeDef.weights.length; i < il; i++) {\r\n                                    o.morphTargetInfluences[i] = nodeDef.weights[i];\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        return node;\r\n                    })\r\n                );\r\n            }\r\n\r\n            if (nodeDef.camera !== undefined) {\r\n                pending.push(parser.getDependency('camera', nodeDef.camera));\r\n            }\r\n\r\n            if (\r\n                nodeDef.extensions &&\r\n                nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL] &&\r\n                nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].light !== undefined\r\n            ) {\r\n                pending.push(parser.getDependency('light', nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].light));\r\n            }\r\n\r\n            return Promise.all(pending);\r\n        })().then(function (objects) {\r\n            var node;\r\n\r\n            // .isBone isn't in glTF spec. See .markDefs\r\n            if (nodeDef.isBone === true) {\r\n                node = new Bone();\r\n            } else if (objects.length > 1) {\r\n                node = new Group();\r\n            } else if (objects.length === 1) {\r\n                node = objects[0];\r\n            } else {\r\n                node = new Object3D();\r\n            }\r\n\r\n            if (node !== objects[0]) {\r\n                for (var i = 0, il = objects.length; i < il; i++) {\r\n                    node.add(objects[i]);\r\n                }\r\n            }\r\n\r\n            if (nodeDef.name) {\r\n                node.userData.name = nodeDef.name;\r\n                node.name = PropertyBinding.sanitizeNodeName(nodeDef.name);\r\n            }\r\n\r\n            assignExtrasToUserData(node, nodeDef);\r\n\r\n            if (nodeDef.extensions) addUnknownExtensionsToUserData(extensions, node, nodeDef);\r\n\r\n            if (nodeDef.matrix !== undefined) {\r\n                var matrix = new Matrix4();\r\n                matrix.fromArray(nodeDef.matrix);\r\n                node.applyMatrix4(matrix);\r\n            } else {\r\n                if (nodeDef.translation !== undefined) {\r\n                    node.position.fromArray(nodeDef.translation);\r\n                }\r\n\r\n                if (nodeDef.rotation !== undefined) {\r\n                    node.quaternion.fromArray(nodeDef.rotation);\r\n                }\r\n\r\n                if (nodeDef.scale !== undefined) {\r\n                    node.scale.fromArray(nodeDef.scale);\r\n                }\r\n            }\r\n\r\n            return node;\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\r\n     * @param {number} sceneIndex\r\n     * @return {Promise<Group>}\r\n     */\r\n    GLTFParser.prototype.loadScene = (function () {\r\n        // scene node hierachy builder\r\n\r\n        function buildNodeHierachy(nodeId, parentObject, json, parser) {\r\n            var nodeDef = json.nodes[nodeId];\r\n\r\n            return parser\r\n                .getDependency('node', nodeId)\r\n                .then(function (node) {\r\n                    if (nodeDef.skin === undefined) return node;\r\n\r\n                    // build skeleton here as well\r\n\r\n                    var skinEntry;\r\n\r\n                    return parser\r\n                        .getDependency('skin', nodeDef.skin)\r\n                        .then(function (skin) {\r\n                            skinEntry = skin;\r\n\r\n                            var pendingJoints = [];\r\n\r\n                            for (var i = 0, il = skinEntry.joints.length; i < il; i++) {\r\n                                pendingJoints.push(parser.getDependency('node', skinEntry.joints[i]));\r\n                            }\r\n\r\n                            return Promise.all(pendingJoints);\r\n                        })\r\n                        .then(function (jointNodes) {\r\n                            node.traverse(function (mesh) {\r\n                                if (!mesh.isMesh) return;\r\n\r\n                                var bones = [];\r\n                                var boneInverses = [];\r\n\r\n                                for (var j = 0, jl = jointNodes.length; j < jl; j++) {\r\n                                    var jointNode = jointNodes[j];\r\n\r\n                                    if (jointNode) {\r\n                                        bones.push(jointNode);\r\n\r\n                                        var mat = new Matrix4();\r\n\r\n                                        if (skinEntry.inverseBindMatrices !== undefined) {\r\n                                            mat.fromArray(skinEntry.inverseBindMatrices.array, j * 16);\r\n                                        }\r\n\r\n                                        boneInverses.push(mat);\r\n                                    } else {\r\n                                        console.warn(\r\n                                            'THREE.GLTFLoader: Joint \"%s\" could not be found.',\r\n                                            skinEntry.joints[j]\r\n                                        );\r\n                                    }\r\n                                }\r\n\r\n                                mesh.bind(new Skeleton(bones, boneInverses), mesh.matrixWorld);\r\n                            });\r\n\r\n                            return node;\r\n                        });\r\n                })\r\n                .then(function (node) {\r\n                    // build node hierachy\r\n\r\n                    parentObject.add(node);\r\n\r\n                    var pending = [];\r\n\r\n                    if (nodeDef.children) {\r\n                        var children = nodeDef.children;\r\n\r\n                        for (var i = 0, il = children.length; i < il; i++) {\r\n                            var child = children[i];\r\n                            pending.push(buildNodeHierachy(child, node, json, parser));\r\n                        }\r\n                    }\r\n\r\n                    return Promise.all(pending);\r\n                });\r\n        }\r\n\r\n        return function loadScene(sceneIndex) {\r\n            var json = this.json;\r\n            var extensions = this.extensions;\r\n            var sceneDef = this.json.scenes[sceneIndex];\r\n            var parser = this;\r\n\r\n            // Loader returns Group, not Scene.\r\n            // See: https://github.com/mrdoob/three.js/issues/18342#issuecomment-578981172\r\n            var scene = new Group();\r\n            if (sceneDef.name) scene.name = sceneDef.name;\r\n\r\n            assignExtrasToUserData(scene, sceneDef);\r\n\r\n            if (sceneDef.extensions) addUnknownExtensionsToUserData(extensions, scene, sceneDef);\r\n\r\n            var nodeIds = sceneDef.nodes || [];\r\n\r\n            var pending = [];\r\n\r\n            for (var i = 0, il = nodeIds.length; i < il; i++) {\r\n                pending.push(buildNodeHierachy(nodeIds[i], scene, json, parser));\r\n            }\r\n\r\n            return Promise.all(pending).then(function () {\r\n                return scene;\r\n            });\r\n        };\r\n    })();\r\n\r\n    return GLTFLoader;\r\n})();\r\n\r\nexport { GLTFLoader };\r\n","const ALIAS = {\r\n    left: 37,\r\n    up: 38,\r\n    right: 39,\r\n    down: 40,\r\n    space: 32,\r\n    tab: 9,\r\n    escape: 27\r\n};\r\n\r\nexport default class Keyboard {\r\n    constructor(domElement) {\r\n        this.domElement = domElement || document;\r\n        this.keyCodes = {};\r\n\r\n        // bind keyEvents\r\n        this.domElement.addEventListener('keydown', (event) => this.onKeyChange(event), false);\r\n        this.domElement.addEventListener('keyup', (event) => this.onKeyChange(event), false);\r\n\r\n        // bind window blur\r\n        window.addEventListener('blur', () => this.onBlur, false);\r\n    }\r\n\r\n    destroy() {\r\n        this.domElement.removeEventListener('keydown', (event) => this.onKeyChange(event), false);\r\n        this.domElement.removeEventListener('keyup', (event) => this.onKeyChange(event), false);\r\n\r\n        // unbind window blur event\r\n        window.removeEventListener('blur', () => this.onBlur, false);\r\n    }\r\n\r\n    onBlur() {\r\n        for (const prop in this.keyCodes) this.keyCodes[prop] = false;\r\n    }\r\n\r\n    onKeyChange(event) {\r\n        // log to debug\r\n        //console.log('onKeyChange', event, event.keyCode, event.shiftKey, event.ctrlKey, event.altKey, event.metaKey)\r\n\r\n        // update this.keyCodes\r\n        const keyCode = event.keyCode;\r\n        this.keyCodes[keyCode] = event.type === 'keydown';\r\n    }\r\n\r\n    pressed(keyDesc) {\r\n        const keys = keyDesc.split('+');\r\n        for (let i = 0; i < keys.length; i++) {\r\n            const key = keys[i];\r\n            let pressed = false;\r\n            if (Object.keys(ALIAS).indexOf(key) != -1) {\r\n                pressed = this.keyCodes[ALIAS[key]];\r\n            } else {\r\n                pressed = this.keyCodes[key.toUpperCase().charCodeAt(0)];\r\n            }\r\n            if (!pressed) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    eventMatches(event, keyDesc) {\r\n        const aliases = ALIAS;\r\n        const aliasKeys = Object.keys(aliases);\r\n        const keys = keyDesc.split('+');\r\n        // log to debug\r\n        // console.log('eventMatches', event, event.keyCode, event.shiftKey, event.ctrlKey, event.altKey, event.metaKey)\r\n        for (let i = 0; i < keys.length; i++) {\r\n            const key = keys[i];\r\n            let pressed = false;\r\n            if (key === 'shift') {\r\n                pressed = event.shiftKey ? true : false;\r\n            } else if (key === 'ctrl') {\r\n                pressed = event.ctrlKey ? true : false;\r\n            } else if (key === 'alt') {\r\n                pressed = event.altKey ? true : false;\r\n            } else if (key === 'meta') {\r\n                pressed = event.metaKey ? true : false;\r\n            } else if (aliasKeys.indexOf(key) !== -1) {\r\n                pressed = event.keyCode === aliases[key];\r\n            } else if (event.keyCode === key.toUpperCase().charCodeAt(0)) {\r\n                pressed = true;\r\n            }\r\n            if (!pressed) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n","import Keyboard from '../../utils/keyboard';\r\nimport Helpers from '../../utils/helpers';\r\nimport Config from '../../data/config';\r\n\r\n// Manages all input interactions\r\nexport default class Interaction {\r\n    constructor(renderer, scene, camera, controls) {\r\n        // Properties\r\n        this.renderer = renderer;\r\n        this.scene = scene;\r\n        this.camera = camera;\r\n        this.controls = controls;\r\n\r\n        this.timeout = null;\r\n\r\n        // Instantiate keyboard helper\r\n        this.keyboard = new Keyboard();\r\n\r\n        // Listeners\r\n        // Mouse events\r\n        this.renderer.domElement.addEventListener(\r\n            'mousemove',\r\n            (event) => Helpers.throttle(this.onMouseMove(event), 250),\r\n            false\r\n        );\r\n        this.renderer.domElement.addEventListener('mouseleave', (event) => this.onMouseLeave(event), false);\r\n        this.renderer.domElement.addEventListener('mouseover', (event) => this.onMouseOver(event), false);\r\n\r\n        // Keyboard events\r\n        this.keyboard.domElement.addEventListener('keydown', (event) => {\r\n            // Only once\r\n            if (event.repeat) {\r\n                return;\r\n            }\r\n\r\n            if (this.keyboard.eventMatches(event, 'escape')) {\r\n                console.log('Escape pressed');\r\n            }\r\n        });\r\n    }\r\n\r\n    onMouseOver(event) {\r\n        event.preventDefault();\r\n\r\n        Config.isMouseOver = true;\r\n    }\r\n\r\n    onMouseLeave(event) {\r\n        event.preventDefault();\r\n\r\n        Config.isMouseOver = false;\r\n    }\r\n\r\n    onMouseMove(event) {\r\n        event.preventDefault();\r\n\r\n        clearTimeout(this.timeout);\r\n\r\n        this.timeout = setTimeout(function () {\r\n            Config.isMouseMoving = false;\r\n        }, 200);\r\n\r\n        Config.isMouseMoving = true;\r\n    }\r\n}\r\n","import Config, { saveConfig } from '../../data/config';\r\n\r\n// COMMENT(NuwanJ)\r\n// Store the last state of the toggles in the window.localStorage\r\n// Refer: https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage\r\n// Refer: https://github.com/dataarts/dat.gui/blob/master/API.md#GUI+useLocalStorage\r\n\r\n// Manages all dat.GUI interactions\r\nexport default class DatGUI {\r\n    constructor(main) {\r\n        this.gui = new dat.GUI();\r\n\r\n        this.gui.useLocalStorage = true;\r\n\r\n        this.camera = main.camera.threeCamera;\r\n        this.controls = main.controls.threeControls;\r\n        this.light = main.light;\r\n        this.scene = main.scene;\r\n\r\n        this.model = null;\r\n        this.meshHelper = null;\r\n    }\r\n\r\n    load(main, mesh) {\r\n        // Add folders\r\n        this.gui\r\n            .add(Config, 'isShowingRobotSnapshots')\r\n            .name('Robot Snapshots')\r\n            .onChange((value) => {\r\n                Config.isShowingRobotSnapshots = value;\r\n                saveConfig(Config);\r\n            });\r\n\r\n        /* Labels Folder */\r\n        const labelsFolder = this.gui.addFolder('Labels');\r\n        // labelsFolder\r\n        //     .add(Config, 'isShowingLables')\r\n        //     .name('All Labels')\r\n        //     .onChange((value) => {\r\n        //         Config.isShowingLables = value;\r\n        //         Config.labelsVisibility = {\r\n        //             obstacles: value,\r\n        //             robots: value\r\n        //         };\r\n        //         saveConfig(Config);\r\n        //     });\r\n\r\n        labelsFolder\r\n            .add(Config.labelsVisibility, 'obstacles')\r\n            .name('Obstacle Labels')\r\n            .onChange((value) => {\r\n                this.toggleLabels(this.scene.children, 'Obstacle', value);\r\n            });\r\n        labelsFolder\r\n            .add(Config.labelsVisibility, 'robots')\r\n            .name('Robot Labels')\r\n            .onChange((value) => {\r\n                this.toggleLabels(this.scene.children, 'Robot', value);\r\n            });\r\n\r\n        /* Reality Folder */\r\n        const realityFolder = this.gui.addFolder('Reality');\r\n\r\n        realityFolder\r\n            .add(Config.selectedRealities, 'real')\r\n            .name('Physical Reality')\r\n            .listen()\r\n            .onChange((value) => {\r\n                this.toggleReality('real', 'R');\r\n            });\r\n        realityFolder\r\n            .add(Config.selectedRealities, 'virtual')\r\n            .name('Virtual Reality')\r\n            .listen()\r\n            .onChange((value) => {\r\n                this.toggleReality('virtual', 'V');\r\n            });\r\n\r\n        // Other\r\n        const otherFolder = this.gui.addFolder('Other');\r\n        otherFolder\r\n            .add(Config.controls, 'autoRotate')\r\n            .name('Auto Rotate')\r\n            .listen()\r\n            .onChange((value) => {\r\n                // alert('Toggle AutoRotate');\r\n                Config.controls.autoRotate = value;\r\n                saveConfig(Config);\r\n                location.reload();\r\n            });\r\n        otherFolder\r\n            .add(Config.controls, 'autoRotateSpeed')\r\n            .min(-5)\r\n            .max(5)\r\n            .name('Auto Rotate Speed')\r\n            .listen()\r\n            .onChange((value) => {\r\n                Config.controls.autoRotateSpeed = value;\r\n                saveConfig(Config);\r\n                // location.reload();\r\n            });\r\n        /* Global */\r\n        // this.gui.open();\r\n        this.gui.close();\r\n\r\n        // this.model = main.model;\r\n        // this.meshHelper = main.meshHelper;\r\n    }\r\n\r\n    toggleLabels(objects, type, value) {\r\n        saveConfig(Config);\r\n        if (Array.isArray(objects) && type !== undefined && type !== '') {\r\n            for (var variable of objects) {\r\n                if (variable.name.startsWith(type)) {\r\n                    variable.children[0].visible = value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleReality(reality, selected) {\r\n        // by default visualizer will intercept all the communication coming to the channel regardless of the reality.\r\n        // this control panel will only toggle the 'visibility' of objects in the selected realities.\r\n        const objects = scene.children;\r\n        saveConfig(Config);\r\n        Object.entries(objects).forEach((obj) => {\r\n            const name = obj[1]['name'];\r\n            const reality = obj[1]['reality'];\r\n\r\n            if (reality !== undefined && reality === 'R') {\r\n                // obj[1].transparent = Config.selectedRealities.real;\r\n                obj[1].material.opacity = Config.selectedRealities.real ? 1.0 : Config.hiddenOpacity;\r\n            } else if (reality !== undefined && reality === 'V') {\r\n                // obj[1].transparent = Config.selectedRealities.virtual;\r\n                obj[1].material.opacity = Config.selectedRealities.virtual ? 1.0 : Config.hiddenOpacity;\r\n            }\r\n        });\r\n    }\r\n\r\n    show() {\r\n        this.gui.show();\r\n    }\r\n\r\n    unload() {\r\n        this.gui.destroy();\r\n        this.gui = new dat.GUI();\r\n    }\r\n}\r\n","import * as THREE from 'three';\r\n\r\nimport Config from '../../data/config';\r\nimport { addLabel, removeLabel } from './label';\r\n\r\nconst OBSTACLE_PREFIX = 'Obstacle_';\r\n\r\nexport default class Obstacle {\r\n    constructor(scene, callback) {\r\n        this.scene = scene;\r\n        console.log('Obstacle Reality:', Config.mixedReality.obstacles);\r\n\r\n        if (callback !== undefined) {\r\n            callback();\r\n        }\r\n    }\r\n\r\n    // Create a given list of obstacles\r\n    createList(obstacles) {\r\n        Object.entries(obstacles).forEach((obs) => {\r\n            if (obs !== undefined) {\r\n                //console.log(obs[1]);\r\n                this.create(obs[1]);\r\n            }\r\n        });\r\n    }\r\n\r\n    // Create a obstacle\r\n    create(obstacle) {\r\n        const geometry = this.createGeometry(obstacle.geometry);\r\n        const material = this.createMaterial(obstacle.material);\r\n        material.userData.originalColor = new THREE.Color(0x666666);\r\n        material.userData.labelVisibility = Config.isShowingLables && Config.labelsVisibility.obstacles;\r\n        material.userData.originalEmmisive = material.emissive.getHex();\r\n        material.selected = false;\r\n        material.transparent = true;\r\n        const id = obstacle.id || 1000 + Math.floor(900 * Math.random());\r\n\r\n        const reality = obstacle.reality == undefined ? 'V' : obstacle.reality;\r\n        const mesh = new THREE.Mesh(geometry, material);\r\n\r\n        // TODO: add the name defined in env.config.json as discussed on 2021-02-18\r\n        //      Need some obstacle protocol revision + simulator updates\r\n        const name_temp = 'Obs_' + id.toString().substring(0, 8) + '...';\r\n\r\n        mesh.name = OBSTACLE_PREFIX + id;\r\n        mesh.reality = reality; // set reality flag\r\n\r\n        if (mesh.reality === 'V') {\r\n            // material.visible = Config.selectedRealities.virtual;\r\n            material.opacity = Config.selectedRealities.virtual ? 1.0 : Config.hiddenOpacity;\r\n        } else if (mesh.reality === 'R') {\r\n            // material.visible = Config.selectedRealities.real;\r\n            material.opacity = Config.selectedRealities.real ? 1.0 : Config.hiddenOpacity;\r\n        }\r\n\r\n        // Remove if object is already defined\r\n        this.deleteIfExists(id);\r\n\r\n        // Add the mesh object to arena\r\n        this.scene.add(mesh);\r\n\r\n        // update the position of the object\r\n        if (obstacle.position !== undefined) {\r\n            const { x, y } = obstacle.position;\r\n            const z = this.calculateZ(obstacle);\r\n\r\n            mesh.scale.set(scene_scale, scene_scale, scene_scale);\r\n            mesh.position.set(scene_scale * x, scene_scale * y, scene_scale * z);\r\n        }\r\n\r\n        // Rotate the object, after translate degrees into radians\r\n        if (obstacle.rotation !== undefined) {\r\n            const { x, y, z } = obstacle.rotation;\r\n            const radX = ((90 + x) / 360) * 2 * Math.PI; // transformation due to coordinate system\r\n            const radY = (y / 360) * 2 * Math.PI;\r\n            const radZ = (z / 360) * 2 * Math.PI;\r\n\r\n            mesh.rotation.set(radX, radY, radZ);\r\n        }\r\n\r\n        // Show shadows of the object if enabled\r\n        if (Config.shadow.enabled) mesh.receiveShadow = true;\r\n\r\n        // Add labels to every obstacle, immediately displayed if enabled\r\n        addLabel(OBSTACLE_PREFIX, { id: obstacle.id, name: name_temp }, mesh, Config.labelsVisibility.obstacles);\r\n\r\n        console.log('Created>', mesh.name);\r\n    }\r\n\r\n    createGeometry(g) {\r\n        if (g.type == undefined) throw new TypeError('type unspecified');\r\n\r\n        if (g.type == 'BoxGeometry') {\r\n            return this.createBoxGeometry(g.width, g.height, g.depth);\r\n        } else if (g.type == 'CylinderGeometry') {\r\n            return this.createCylinderGeometry(g.radiusTop, g.radiusBottom, g.height);\r\n        } else if (g.type == 'SphereGeometry') {\r\n            return this.createSphereGeometry(g.radius);\r\n        }\r\n        throw new TypeError('unsupported geometry type');\r\n    }\r\n\r\n    createBoxGeometry(width, height, depth) {\r\n        if (width == undefined) throw new TypeError('width unspecified');\r\n        if (height == undefined) throw new TypeError('height unspecified');\r\n        if (depth == undefined) throw new TypeError('depth unspecified');\r\n\r\n        // https://threejs.org/docs/#api/en/geometries/BoxGeometry\r\n        return new THREE.BoxGeometry(width, height, depth);\r\n    }\r\n\r\n    createCylinderGeometry(radiusTop, radiusBottom, height) {\r\n        if (radiusTop == undefined) throw new TypeError('radiusTop unspecified');\r\n        if (radiusBottom == undefined) throw new TypeError('radiusBottom unspecified');\r\n        if (height == undefined) throw new TypeError('height unspecified');\r\n\r\n        // https://threejs.org/docs/#api/en/geometries/CylinderGeometry\r\n        const heightSegments = heightSegments || 2;\r\n        const radialSegments = radialSegments || 16;\r\n\r\n        return new THREE.CylinderGeometry(radiusTop, radiusBottom, height, radialSegments, heightSegments);\r\n    }\r\n\r\n    createSphereGeometry(radius) {\r\n        if (radius == undefined) throw new TypeError('radius unspecified');\r\n\r\n        // https://threejs.org/docs/#api/en/geometries/SphereGeometry\r\n        const widthSegments = widthSegments || 16;\r\n        const heightSegments = heightSegments || 16;\r\n        return new THREE.SphereGeometry(radius, widthSegments, heightSegments);\r\n    }\r\n\r\n    createMaterial(m) {\r\n        let material;\r\n        if (m.type == 'MeshBasicMaterial') {\r\n            // https://threejs.org/docs/#api/en/materials/MeshBasicMaterial\r\n            return new THREE.MeshBasicMaterial(m.properties);\r\n        } else if (m.type == 'MeshNormalMaterial') {\r\n            // https://threejs.org/docs/api/en/materials/MeshNormalMaterial.html\r\n            return new THREE.MeshNormalMaterial(m.properties);\r\n        } else if (m.type == 'MeshPhongMaterial') {\r\n            // https://threejs.org/docs/#api/en/materials/MeshPhongMaterial\r\n            return new THREE.MeshPhongMaterial(m.properties);\r\n        } else if (m.type == 'MeshPhysicalMaterial') {\r\n            // https://threejs.org/docs/#api/en/materials/MeshPhysicalMaterial\r\n            return new THREE.MeshPhysicalMaterial(m.properties);\r\n        } else if (m.type == 'MeshStandardMaterial') {\r\n            // https://threejs.org/docs/#api/en/materials/MeshStandardMaterial\r\n            return new THREE.MeshStandardMaterial(m.properties);\r\n        }\r\n        // Default material type\r\n        return new THREE.MeshStandardMaterial(m.properties);\r\n    }\r\n\r\n    calculateZ(obstacle) {\r\n        // If z is undefined, place the object in top of the arena\r\n        if (obstacle.position.z == undefined) {\r\n            if (obstacle.geometry.height !== undefined) {\r\n                // Box and Cylinder objects\r\n                return obstacle.geometry.height / 2;\r\n            } else if (obstacle.geometry.radius !== undefined) {\r\n                // Sphere objects\r\n                return obstacle.geometry.radius;\r\n            }\r\n            return 0;\r\n        }\r\n        return obstacle.position.z;\r\n    }\r\n\r\n    deleteIfExists(id) {\r\n        // Delete obstacle if it already exists\r\n        const name = OBSTACLE_PREFIX + id;\r\n        const obstacle = this.scene.getObjectByName(name);\r\n        if (obstacle !== undefined) {\r\n            this.scene.remove(obstacle);\r\n            console.log('Deleted>', name);\r\n        }\r\n    }\r\n\r\n    deleteAll() {\r\n        // Delete all obstacles\r\n        const objects = this.scene.children;\r\n        Object.entries(objects).forEach((obj) => {\r\n            const name = obj[1]['name'];\r\n            if (name.startsWith(OBSTACLE_PREFIX)) {\r\n                console.log('Deleted>', name);\r\n                removeLabel(obj[1]);\r\n                this.scene.remove(obj[1]);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import * as THREE from 'three';\r\nimport TWEEN, { update } from '@tweenjs/tween.js';\r\n\r\nimport Config from '../../data/config';\r\nimport { addLabel, removeLabel } from './label';\r\n\r\nvar STLLoader = require('three-stl-loader')(THREE);\r\n\r\nconst ROBOT_PREFIX = 'Robot_';\r\n\r\nexport default class Robot {\r\n    constructor(scene) {\r\n        this.scene = scene;\r\n        console.log('Robot Reality:', Config.mixedReality.robots);\r\n\r\n        // This will check for duplicated instances of robots and delete them\r\n        const that = this;\r\n        this.created = true;\r\n        setInterval(() => {\r\n            if (this.created === true) {\r\n                // console.log('call prune');\r\n                that.prune();\r\n                this.created = false;\r\n            }\r\n        }, 2500);\r\n    }\r\n\r\n    changeColor(id, R, G, B, ambient, callback) {\r\n        var r = this.scene.getObjectByName(ROBOT_PREFIX + id);\r\n        if (r != undefined) {\r\n            r.material.color.setRGB(R / 256, G / 256, B / 265);\r\n            //console.log(\"Color> id:\", id, \" | R:\", R, \"G:\", G, \"B:\", B);\r\n\r\n            if (callback != null) callback('success');\r\n        } else if (callback != null) callback('undefined');\r\n\r\n        return r;\r\n    }\r\n\r\n    create(id, x, y, heading, reality = 'V', callback) {\r\n        var r = this.scene.getObjectByName(ROBOT_PREFIX + id);\r\n        const REALITY = Config.mixedReality.robots;\r\n\r\n        if (r == undefined) {\r\n            // Create only if not exists\r\n\r\n            if (reality === REALITY || REALITY === 'M') {\r\n                // Can create\r\n                // Limit the arena that robot can go\r\n                x =\r\n                    scene_scale *\r\n                    Math.min(Math.max(x, Config.arena.minX), Config.arena.maxX);\r\n                y =\r\n                    scene_scale *\r\n                    Math.min(Math.max(y, Config.arena.minY), Config.arena.maxY);\r\n\r\n                var loader = new STLLoader();\r\n                loader.load('./assets/models/model.stl', function (geometry, scene) {\r\n                    // Set less opacity for virtual robots\r\n                    const opacity = 1; // reality == 'V' ? 0.5 : 1;\r\n\r\n                    const material = new THREE.MeshStandardMaterial({\r\n                        color: 0x666666,\r\n                        opacity: opacity,\r\n                        transparent: true\r\n                    });\r\n                    material.userData.originalColor = new THREE.Color(0x666666);\r\n                    material.userData.labelVisibility =\r\n                        Config.isShowingLables && Config.labelsVisibility.robots;\r\n                    material.selected = false;\r\n\r\n                    var r = new THREE.Mesh(geometry, material);\r\n                    r.receiveShadow = true;\r\n                    r.robotId = id;\r\n                    r.name = ROBOT_PREFIX + id;\r\n                    r.scale.set(scene_scale, scene_scale, scene_scale);\r\n                    r.position.set(x, y, 0);\r\n                    r.rotation.x = 90 * THREE.Math.DEG2RAD;\r\n                    r.rotation.y = (heading - 90) * THREE.Math.DEG2RAD;\r\n                    r.reality = reality; // set reality flag\r\n\r\n                    if (reality === 'V') {\r\n                        // material.visible = Config.selectedRealities.virtual;\r\n                        material.opacity = Config.selectedRealities.virtual\r\n                            ? 1.0\r\n                            : Config.hiddenOpacity;\r\n                    } else if (reality === 'R') {\r\n                        // material.visible = Config.selectedRealities.real;\r\n                        material.opacity = Config.selectedRealities.real\r\n                            ? 1.0\r\n                            : Config.hiddenOpacity;\r\n                    }\r\n\r\n                    // Add robot to the scene\r\n                    window.scene.add(r);\r\n\r\n                    r.clickEvent = function (m) {\r\n                        window.robot.alert(m);\r\n                    };\r\n\r\n                    // Add labels to every robot, immediately displayed if enabled\r\n                    addLabel(\r\n                        ROBOT_PREFIX,\r\n                        { id, name: r.name },\r\n                        r,\r\n                        Config.labelsVisibility.robots\r\n                    );\r\n\r\n                    console.log(\r\n                        `Created> Robot: id:${id} | x:${x} y: ${y} heading: ${heading} | reality: ${reality}`\r\n                    );\r\n\r\n                    // Callback function\r\n                    if (callback != undefined) callback('success');\r\n                });\r\n            } else {\r\n                console.error(\r\n                    `Creation Failed> Robot: id:${id}  reality: ${reality}!=${REALITY}`\r\n                );\r\n            }\r\n        } else if (reality === REALITY || REALITY === 'M') {\r\n            // Reality matches\r\n\r\n            this.setReality(id, reality);\r\n            this.move(id, x, y, heading, () => {\r\n                if (callback != undefined) callback('already defined, so moved');\r\n            });\r\n        } else {\r\n            // Robot reality not matching with environment reality\r\n            this.delete(id);\r\n        }\r\n\r\n        this.created = true; // asked to prune in next cycle\r\n        return r;\r\n    }\r\n\r\n    delete(id, callback) {\r\n        if (id != undefined) {\r\n            var r = this.scene.getObjectByName(ROBOT_PREFIX + id);\r\n\r\n            if (r != undefined) {\r\n                removeLabel(r);\r\n                scene.remove(r);\r\n                console.log('Deleted> id:', id);\r\n                if (callback != undefined) callback('success');\r\n            } else if (callback != undefined) callback('not found');\r\n        } else if (callback != undefined) callback('id not specified');\r\n    }\r\n\r\n    deleteAll() {\r\n        // Delete all robots\r\n        const objects = this.scene.children;\r\n\r\n        Object.entries(objects).forEach((obj) => {\r\n            const name = obj[1]['name'];\r\n\r\n            if (name.startsWith(ROBOT_PREFIX)) {\r\n                console.log('Deleted>', name);\r\n                removeLabel(obj[1]);\r\n                this.scene.remove(obj[1]);\r\n            }\r\n        });\r\n    }\r\n\r\n    setReality(id, reality) {\r\n        var r = this.scene.getObjectByName(ROBOT_PREFIX + id);\r\n        if (r != undefined) {\r\n            r.reality = reality;\r\n        }\r\n    }\r\n    exists(id) {\r\n        var r = this.scene.getObjectByName(ROBOT_PREFIX + id);\r\n        return r;\r\n    }\r\n\r\n    move(id, x, y, heading, callback) {\r\n        var r = this.scene.getObjectByName(ROBOT_PREFIX + id);\r\n        if (r != undefined) {\r\n            const currentHeading = r.rotation.y;\r\n            const newHeading = (heading - 90) * THREE.Math.DEG2RAD;\r\n            var position = { x: r.position.x, y: r.position.y, heading: r.rotation.y };\r\n\r\n            // TODO: need a smoother way than this rough trick\r\n            // If current and target rotations in different signs\r\n            const rotationFlag = currentHeading * newHeading >= 0 ? true : false;\r\n\r\n            // Limit the arena that robot can go\r\n            x =\r\n                scene_scale *\r\n                Math.min(\r\n                    Math.max(Math.round(x * 10) / 10, Config.arena.minX),\r\n                    Config.arena.maxX\r\n                );\r\n            y =\r\n                scene_scale *\r\n                Math.min(\r\n                    Math.max(Math.round(y * 10) / 10, Config.arena.minY),\r\n                    Config.arena.maxY\r\n                );\r\n            heading = Math.round(heading * 10) / 10;\r\n\r\n            // const speed = 10;\r\n            const distance = Math.sqrt(\r\n                Math.pow(x - position.x, 2) + Math.pow(y - position.y, 2)\r\n            );\r\n\r\n            const moveTime = 1; //distance / speed;\r\n            // TODO: If distance is 0, need to handle only the rotation\r\n\r\n            if (distance != 0) {\r\n                var tween = new TWEEN.Tween(position)\r\n                    .to({ x: x, y: y, heading: newHeading }, 1000 * moveTime)\r\n                    /*.easing(TWEEN.Easing.Quartic.InOut)*/\r\n                    .onUpdate(function () {\r\n                        r.position.x = position.x;\r\n                        r.position.y = position.y;\r\n\r\n                        if (rotationFlag) {\r\n                            r.rotation.y = position.heading;\r\n                        } else {\r\n                            //console.log(currentHeading, newHeading);\r\n                        }\r\n                    })\r\n                    .onComplete(() => {\r\n                        //console.log('Moved> id:',id,'x:',x,'y:',y,'heading:',heading);\r\n                        r.rotation.y = position.heading;\r\n                        if (callback != null) callback('success');\r\n                    })\r\n                    .delay(50)\r\n                    .start();\r\n            } else {\r\n                // No move, only the rotation\r\n                r.rotation.y = newHeading;\r\n            }\r\n            return r;\r\n        }\r\n        if (callback != null) callback('undefined');\r\n    }\r\n\r\n    get_coordinates(id) {\r\n        var r = this.scene.getObjectByName(ROBOT_PREFIX + id);\r\n        if (r != undefined) {\r\n            console.log(`${r.position.x},${r.position.y},${r.position.z}`);\r\n            return r;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    update() {\r\n        TWEEN.update();\r\n    }\r\n\r\n    requestSnapshot(mesh) {\r\n        return new Promise((resolve, reject) => {\r\n            const req = window.mqtt.publish(\r\n                window.channel + '/mgt/robots/snapshot',\r\n                JSON.stringify({ id: mesh.robotId })\r\n            );\r\n            resolve(!req);\r\n        });\r\n    }\r\n\r\n    alert(mesh) {\r\n        // Display an alert on window\r\n        const disp = document.querySelector('#msg-box');\r\n        const prevContent = document.getElementById('msg-content');\r\n        let content = document.createElement('div');\r\n        content.setAttribute('id', 'msg-content');\r\n        let nodeContent;\r\n        if (Config.isShowingRobotSnapshots) {\r\n            nodeContent = document.createTextNode(`${mesh.name} Snapshot Loading...`);\r\n            this.requestSnapshot(mesh);\r\n        } else {\r\n            nodeContent = document.createTextNode(`${mesh.name}`);\r\n        }\r\n        content.appendChild(nodeContent);\r\n        disp.replaceChild(content, prevContent);\r\n        disp.style.display = 'block';\r\n        setTimeout(function () {\r\n            disp.style.opacity = '1.0';\r\n            disp.style.display = 'none';\r\n        }, 10000);\r\n    }\r\n\r\n    prune() {\r\n        // Delete all duplicate robots\r\n        const objects = this.scene.children;\r\n        let valid = [];\r\n        Object.entries(objects).forEach((obj) => {\r\n            const name = obj[1]['name'];\r\n            // console.log('checking: ', name);\r\n\r\n            if (name.startsWith(ROBOT_PREFIX)) {\r\n                if (valid[name] === undefined) {\r\n                    // mark as valid\r\n                    valid[name] = 'valid';\r\n                } else {\r\n                    // this is a duplicate\r\n                    // console.log(obj[1]);\r\n                    removeLabel(obj[1]);\r\n                    this.scene.remove(obj[1]);\r\n                    console.log(name, ': duplicate');\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n","function getUrlVars() {\r\n    var vars = {};\r\n    var parts = window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (m, key, value) {\r\n        vars[key] = value;\r\n    });\r\n    return vars;\r\n}\r\n\r\nfunction getUrlParam(parameter, defaultvalue) {\r\n    var urlparameter = defaultvalue;\r\n    if (window.location.href.indexOf(parameter) > -1) {\r\n        urlparameter = getUrlVars()[parameter];\r\n    }\r\n    return urlparameter;\r\n}\r\n\r\nexport function getCredentials() {\r\n    // TODO: Add channel, host and port into URL (as optional parameters)\r\n    // Suggestion: Use JWT insted of exposed credentials\r\n    // Simulator server can provide the JWT token\r\n    const storedCredentials = localStorage.getItem('pera-swarm-credentials');\r\n    const key = getUrlParam('key', false);\r\n\r\n    const username = getUrlParam('username', false);\r\n    const password = getUrlParam('password', false);\r\n    const channel = getUrlParam('channel', false);\r\n    const port = getUrlParam('port', false);\r\n    const server = getUrlParam('server', false);\r\n    clearParams();\r\n\r\n    setTimeout(() => {\r\n        if (server !== false) {\r\n            localStorage.setItem('pera-swarm-server', server);\r\n        }\r\n        if (channel !== false) {\r\n            localStorage.setItem('pera-swarm-channel', channel);\r\n        }\r\n        if (port !== false) {\r\n            localStorage.setItem('pera-swarm-port', port);\r\n        }\r\n        if (key !== false) {\r\n            localStorage.setItem('pera-swarm-key', key);\r\n        }\r\n    }, 2000);\r\n\r\n    // Load the credentails\r\n    if (key !== false) {\r\n        // Having JWT Token\r\n        // TODO: manage token expiring\r\n\r\n        // Default: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJjcmVhdGVkQXQiOiIyMDIxLTA0LTE1IDEyOjU0OjI0IiwiZXhwaXJlZEF0IjoiMjAyMS0wNC0xNSAwMTo1NDoyNCIsImhvc3QiOiJ3ZWJzZXJ2aWNlcy5jZXlrb2QuY29tIiwicG9ydCI6ODg4MywicGF0aCI6IlwvbXF0dCIsImNoYW5uZWwiOiJ2MSIsInVzZXIiOiJzd2FybV91c2VyIiwicGFzcyI6InN3YXJtX3VzZXJlMTUifQ.F1jqHyu1jE0zTa03yYTwwdy8AJofBLXWLvYMYLNlna6dUjTkz6WdtwjBcrF_zDARM95r67RykOiWJCHDiWM52MQFx3EivqTYUNnA5fyNfsdJgrBR0q7eESM28MTSFoxnVi7memIKCSnkju3qDRZuZZdB5jaLP2BYg7ipgEFzt7E\r\n        console.log('Credentails: Loaded from JWT');\r\n\r\n        const credentials = parseJwt(key);\r\n        const username = credentials.user;\r\n        const password = credentials.pass;\r\n        const channel = credentials.channel;\r\n\r\n        if (credentials.host !== undefined) localStorage.setItem('pera-swarm-server', credentials.host);\r\n        if (credentials.port !== undefined) localStorage.setItem('pera-swarm-port', parseInt(credentials.port));\r\n        if (credentials.path !== undefined) localStorage.setItem('pera-swarm-path', credentials.path);\r\n        if (credentials.channel !== undefined) localStorage.setItem('pera-swarm-channel', credentials.channel);\r\n\r\n        localStorage.setItem('pera-swarm-credentials', JSON.stringify({ username, password, channel }));\r\n\r\n        return {\r\n            username,\r\n            password,\r\n            channel\r\n        };\r\n    } else if (username !== false && password !== false) {\r\n        // Having URL parameters\r\n        console.log('Credentails: Loaded from URL parameters');\r\n        localStorage.setItem('pera-swarm-credentials', JSON.stringify({ username, password, channel }));\r\n        return {\r\n            username,\r\n            password,\r\n            channel\r\n        };\r\n    } else if (username === false && password === false && storedCredentials !== null) {\r\n        // Having stored credentials\r\n        console.log('Credentails: Loaded from local storage');\r\n        return JSON.parse(storedCredentials);\r\n    }\r\n    return -1;\r\n}\r\n\r\nfunction parseJwt(token) {\r\n    var base64Url = token.split('.')[1];\r\n    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n    var jsonPayload = decodeURIComponent(\r\n        atob(base64)\r\n            .split('')\r\n            .map(function (c) {\r\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n            })\r\n            .join('')\r\n    );\r\n\r\n    return JSON.parse(jsonPayload);\r\n}\r\n\r\nfunction clearParams() {\r\n    const path = window.location.origin + window.location.pathname;\r\n    window.history.pushState({}, document.title, path);\r\n}\r\n","import * as THREE from 'three';\r\nimport TWEEN, { update } from '@tweenjs/tween.js';\r\nimport MQTT from 'paho-mqtt';\r\n\r\nimport Config from '../../data/config';\r\nimport Obstacle from '../components/obstacle';\r\nimport Robot from '../components/robot';\r\nimport { getCredentials } from '../helpers/urlHelper';\r\n\r\n// -----------------------------------------------------------------------------\r\n// MQTT Topics\r\n\r\n// Create and delete robot objects\r\nconst TOPIC_ROBOT_CREATE = 'robot/create';\r\nconst TOPIC_ROBOT_DELETE = 'robot/delete';\r\nconst TOPIC_ROBOT_BROADCAST = 'robot/msg/broadcast';\r\n\r\n// This will provide location data to the GUI\r\nconst TOPIC_LOC_INFO_FROM_SERVER = 'localization/data';\r\nconst TOPIC_LOC_INFO_FROM_LOC_SYSTEMS = 'localization/update';\r\n\r\n// This will request the localization data update from the server\r\nconst TOPIC_LOC_REQUEST = 'localization/data/?';\r\n\r\n// This will request obstacle data from the server\r\nconst TOPIC_OBSTACLE_REQUEST = 'obstacles/?';\r\n\r\n// This will send obstacle data as a JSON list\r\nconst TOPIC_OBSTACLES_LIST = 'obstacles';\r\nconst TOPIC_OBSTACLES_DELETE = 'obstacles/delete';\r\nconst TOPIC_OBSTACLES_DELETE_ALL = 'obstacles/delete/all';\r\n\r\n// Robot Color - NeoPixel\r\nconst TOPIC_CHANGE_COLOR = 'output/neopixel';\r\n\r\nconst TOPIC_ARENA_CONFIG = \"config/arena/\";\r\n\r\n// This will help to remote update the parameters in here\r\nconst TOPIC_MANAGEMENT_VISUALIZER = 'mgt/visualizer';\r\n\r\n// Robot management snapshot topic\r\nconst TOPIC_MANAGEMENT_SNAPSHOT = 'mgt/robots/?';\r\n\r\n// -----------------------------------------------------------------------------\r\n\r\nexport default class MQTTClient {\r\n    constructor(scene) {\r\n        this.scene = scene;\r\n        this.robot = new Robot(scene);\r\n        this.obstacles = new Obstacle(scene);\r\n\r\n        const credentials = getCredentials();\r\n        this.updateChannel();\r\n\r\n        if (credentials === -1) {\r\n            alert('Unauthorized access! The Visualizer will not work properly.');\r\n        } else {\r\n            const { username, password } = credentials;\r\n            // create a random client Id\r\n            const client_id = 'client_' + Math.random().toString(36).substring(2, 15);\r\n            this.client = new MQTT.Client(Config.mqtt.server, Config.mqtt.port, Config.mqtt.path, client_id);\r\n\r\n            window.mqtt = this.client;\r\n            window.channel = credentials.channel === undefined ? 'v1' : credentials.channel;\r\n\r\n            this.client.connect({\r\n                userName: username,\r\n                password: password,\r\n                reconnect: true,\r\n                useSSL: true,\r\n                cleanSession: false,\r\n                onSuccess: () => {\r\n                    console.log('MQTT: connected');\r\n\r\n                    // Subscribe to topics\r\n                    this.subscribe(TOPIC_LOC_INFO_FROM_SERVER);\r\n                    this.subscribe(TOPIC_LOC_INFO_FROM_LOC_SYSTEMS);\r\n\r\n                    this.subscribe(TOPIC_ROBOT_CREATE);\r\n                    this.subscribe(TOPIC_ROBOT_DELETE);\r\n                    this.subscribe(TOPIC_ROBOT_BROADCAST);\r\n\r\n                    this.subscribe(TOPIC_CHANGE_COLOR);\r\n                    this.subscribe(TOPIC_OBSTACLES_LIST);\r\n                    this.subscribe(TOPIC_OBSTACLES_DELETE);\r\n                    this.subscribe(TOPIC_OBSTACLES_DELETE_ALL);\r\n                    this.subscribe(TOPIC_MANAGEMENT_VISUALIZER);\r\n                    this.subscribe(TOPIC_ARENA_CONFIG);\r\n                    this.subscribe(TOPIC_MANAGEMENT_SNAPSHOT);\r\n\r\n                    // Request for obstacle data\r\n                    // this.publish(TOPIC_OBSTACLE_REQUEST, Config.mixedReality.obstacles);\r\n                    this.publish(TOPIC_OBSTACLE_REQUEST, 'M');\r\n\r\n                    // Request for coordinate data\r\n                    this.publish(TOPIC_LOC_REQUEST, Config.mixedReality.robots);\r\n\r\n                    // Access globally\r\n                    window.robot = this.robot;\r\n                    window.obstacles = this.obstacles;\r\n\r\n                    this.client.onMessageArrived = this.onMessageArrived;\r\n                    this.client.onConnectionLost = this.onConnectionLost;\r\n                },\r\n                onFailure: () => {\r\n                    console.log('MQTT: connection failed');\r\n                    alert('MQTT: connection failed!');\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    updateChannel() {\r\n        // const channelHash = window.location.hash;\r\n        // if ((channelHash != '') & (channelHash.length > 1)) {\r\n        //     // window.channel = channelHash.substring(1);\r\n        //     window.channel = channelHash.split('#')[1].split('?')[0];\r\n        // } else {\r\n        //     window.channel = Config.mqtt.channel;\r\n        // }\r\n        // console.log('MQTT: channel=', window.channel, channelHash);\r\n        // return true;\r\n    }\r\n\r\n    onConnectionLost(responseObject) {\r\n        if (responseObject.errorCode !== 0) {\r\n            console.log('MQTT: onConnectionLost:' + responseObject.errorMessage);\r\n            console.log('MQTT: reconnecting');\r\n        }\r\n    }\r\n\r\n    onMessageArrived(packet) {\r\n        const msg = packet.payloadString.trim();\r\n        const t = packet.destinationName;\r\n        const topic = t.substring(t.indexOf('/') + 1);\r\n\r\n        // console.log('MQTT: ' + topic + ' > ' + msg);\r\n\r\n        if (topic == TOPIC_ROBOT_CREATE) {\r\n            try {\r\n                const data = JSON.parse(msg);\r\n                window.robot.create(data.id, data.x, data.y, data.heading, data.reality);\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        } else if (topic == TOPIC_ROBOT_DELETE) {\r\n            try {\r\n                var data = JSON.parse(msg);\r\n                window.robot.delete(data.id);\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        } else if (topic == TOPIC_LOC_INFO_FROM_LOC_SYSTEMS || topic == TOPIC_LOC_INFO_FROM_SERVER) {\r\n            //Data from the localization server or virtual robots\r\n            try {\r\n                const data = JSON.parse(msg);\r\n                const REALITY = Config.mixedReality.robots;\r\n\r\n                // Render only the received data is same as configured reality\r\n                // or configuration allowed mixed reality\r\n                if (data != undefined) {\r\n                    // Have data on this reality\r\n                    for (const i in data) {\r\n                        const { id, x, y, heading } = data[i];\r\n                        const reality = data[i].reality == undefined ? 'V' : data[i].reality;\r\n\r\n                        if (reality === REALITY || REALITY === 'M') {\r\n                            // Create only if robots match with platform's allowed reality\r\n                            if (window.robot.exists(id) == undefined) {\r\n                                window.robot.create(id, x, y, heading, reality);\r\n                            } else {\r\n                                window.robot.move(id, x, y, heading);\r\n                                window.robot.setReality(id, reality);\r\n                            }\r\n                        } else {\r\n                            // reality not matching; remove\r\n                            robot.delete(id);\r\n                        }\r\n                    }\r\n                }\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        } else if (topic == TOPIC_OBSTACLES_LIST) {\r\n            // Create obstacles in the arena\r\n            try {\r\n                const data = JSON.parse(msg);\r\n                window.obstacles.createList(data);\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        } else if (topic == TOPIC_OBSTACLES_DELETE) {\r\n            // Delete obstacle given in the id\r\n            const data = JSON.parse(msg);\r\n            console.log(data);\r\n\r\n            window.obstacles.deleteIfExists(data.id);\r\n        } else if (topic == TOPIC_OBSTACLES_DELETE_ALL) {\r\n            // Delete all obstacles\r\n            window.obstacles.deleteAll();\r\n        } else if (topic == TOPIC_CHANGE_COLOR) {\r\n            try {\r\n                const data = JSON.parse(msg);\r\n                window.robot.changeColor(data.id, data.R, data.G, data.B, data.ambient);\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        } else if (topic == TOPIC_ROBOT_BROADCAST) {\r\n            // Display a popup message\r\n            // TODO: Do this by a generalized function call\r\n\r\n            if (msg != 'ID? -1') {\r\n                const m = 'Broadcast Message: ' + msg.split(' ')[0];\r\n                const t = 1000 + msg.length * 95;\r\n\r\n                const disp = document.querySelector('#msg-box');\r\n                disp.innerHTML = m;\r\n                disp.style.display = 'block';\r\n\r\n                setTimeout(function () {\r\n                    document.querySelector('#msg-box').style.display = 'none';\r\n                }, t);\r\n            }\r\n        } else if (topic == TOPIC_MANAGEMENT_VISUALIZER) {\r\n            if (msg === 'REFRESH') {\r\n                console.log('page refresh request');\r\n                location.reload();\r\n            } else if (msg.startsWith('MSG')) {\r\n                const m = 'Notice: ' + msg.substring(4);\r\n                const t = 2000 + m.length * 95;\r\n\r\n                // Display a popup message\r\n                // TODO: Do this by a generalized function call\r\n                const disp = document.querySelector('#msg-box');\r\n                disp.innerHTML = m;\r\n                disp.style.display = 'block';\r\n\r\n                setTimeout(function () {\r\n                    document.querySelector('#msg-box').style.display = 'none';\r\n                }, t);\r\n            } else {\r\n                console.log('>Management:', msg);\r\n            }\r\n        } else if (topic == TOPIC_MANAGEMENT_SNAPSHOT) {\r\n            const snapshot = JSON.parse(msg);\r\n            console.log('Robot:Snapshot', snapshot);\r\n            if (snapshot !== -1) {\r\n                let i = 0,\r\n                    subElement;\r\n                const disp = document.querySelector('#msg-box');\r\n                const prevContent = document.getElementById('msg-content');\r\n                const content = document.createElement('div');\r\n                content.setAttribute('id', 'msg-content');\r\n                const titleElement = document.createElement('h3');\r\n                titleElement.textContent = `Robot [${snapshot.id}] Snapshot`;\r\n                content.appendChild(titleElement);\r\n                for (const variable in snapshot) {\r\n                    if (Object.prototype.hasOwnProperty.call(snapshot, variable)) {\r\n                        if (i === 0) {\r\n                            subElement = document.createElement('h4');\r\n                        } else {\r\n                            subElement = document.createElement('p');\r\n                        }\r\n                        if (variable === 'data') {\r\n                            for (const [key, value] of Object.entries(snapshot.data)) {\r\n                                subElement.textContent = `${key}: ${value}`;\r\n                            }\r\n                        } else {\r\n                            subElement.textContent = `${variable}: ${JSON.stringify(snapshot[variable])}`;\r\n                        }\r\n                        content.appendChild(subElement);\r\n                        i += 1;\r\n                    }\r\n                }\r\n                disp.replaceChild(content, prevContent);\r\n                disp.style.display = 'block';\r\n                disp.style.opacity = '0.5';\r\n                setTimeout(function () {\r\n                    disp.style.opacity = '1.0';\r\n                    disp.style.display = 'none';\r\n                }, 6000);\r\n            }\r\n        } else if (topic == TOPIC_ARENA_CONFIG){\r\n            const config = JSON.parse(msg);\r\n            console.log('Config:Arena', config);\r\n            if (window.environment){\r\n                window.environment.update(config);\r\n            }\r\n        }\r\n    }\r\n\r\n    subscribe(topic, callback) {\r\n        const subTopic = window.channel + '/' + topic;\r\n        this.client.subscribe(subTopic);\r\n        console.log('MQTT: subscribed', subTopic);\r\n        if (callback != null) callback();\r\n    }\r\n\r\n    publish(topic, message, callback) {\r\n        var payload = new MQTT.Message(message);\r\n        const pubTopic = window.channel + '/' + topic;\r\n        payload.destinationName = pubTopic;\r\n        this.client.send(payload);\r\n        console.log('MQTT: published', pubTopic);\r\n\r\n        if (callback != null) callback();\r\n    }\r\n}\r\n","// Global imports -\r\nimport * as THREE from 'three';\r\n\r\nimport TWEEN, { update } from '@tweenjs/tween.js';\r\n\r\n// Components\r\nimport Renderer from './components/renderer';\r\nimport label from './components/label';\r\nimport Camera from './components/camera';\r\nimport Light from './components/light';\r\nimport Controls from './components/controls';\r\nimport Geometry from './components/geometry';\r\nimport Environment from './components/environment';\r\n\r\n// Helpers\r\nimport MeshHelper from './helpers/meshHelper';\r\n\r\n// Model\r\nimport Texture from './model/texture';\r\nimport Model from './model/model';\r\n\r\n// Managers\r\nimport Interaction from './managers/interaction';\r\nimport DatGUI from './managers/datGUI';\r\n\r\n// Newly implemented classes\r\nimport MQTTClient from './managers/mqttClient';\r\n\r\n// Config data\r\nimport Config from './../data/config';\r\n\r\n// STLLoader\r\nconst STLLoader = require('three-stl-loader')(THREE);\r\n\r\n// Global Variables\r\nlet camera, labelRenderer, INTERSECTED, selectedLabel;\r\n\r\n// For click event on robots\r\nconst raycaster = new THREE.Raycaster();\r\nconst mouse = new THREE.Vector2();\r\n\r\n// This class instantiates and ties all of the components together, starts the loading process and renders the main loop\r\nexport default class Main {\r\n    constructor(container) {\r\n        // Set container property to container element\r\n        this.container = container;\r\n\r\n        // Start Three clock\r\n        this.clock = new THREE.Clock();\r\n\r\n        // Main scene creation\r\n        this.scene = new THREE.Scene();\r\n        window.scene = this.scene; // config as a global variable\r\n        window.scene_scale = Config.scale;\r\n        // High level reality flag\r\n        window.selectedReality = Config.selectedReality;\r\n\r\n        this.scene.fog = new THREE.FogExp2(Config.fog.color, Config.fog.near);\r\n\r\n        this.mqtt = new MQTTClient(this.scene);\r\n\r\n        // Get Device Pixel Ratio first for retina\r\n        if (window.devicePixelRatio) {\r\n            Config.dpr = window.devicePixelRatio;\r\n        }\r\n\r\n        // Main renderer constructor\r\n        this.renderer = new Renderer(this.scene, container);\r\n\r\n        // Components instantiations\r\n        camera = new Camera(this.renderer.threeRenderer);\r\n        this.controls = new Controls(camera.threeCamera, container);\r\n        this.light = new Light(this.scene);\r\n        this.camera = camera;\r\n\r\n        // Create and place lights in scene\r\n        const lights = ['ambient', 'directional', 'point', 'hemi'];\r\n        lights.forEach((light) => this.light.place(light));\r\n\r\n        // Set up Stats if dev environment\r\n        if (Config.isDev && Config.isShowingStats) {\r\n            this.stats = new Stats();\r\n            this.container.appendChild(this.stats.dom);\r\n        }\r\n\r\n        if (Config.isShowingLables) {\r\n            this.labelRenderer = label();\r\n            this.container.appendChild(this.labelRenderer.domElement);\r\n        }\r\n\r\n        // Set up gui\r\n        if (Config.isDev) {\r\n            this.gui = new DatGUI(this);\r\n        }\r\n\r\n        // Instantiate texture class\r\n        this.texture = new Texture();\r\n\r\n        // Start loading the textures and then go on to load the model after the texture Promises have resolved\r\n        this.texture.load().then(() => {\r\n            this.manager = new THREE.LoadingManager();\r\n\r\n            // Create the environment ---------------------------------------------\r\n            this.environment = new Environment();\r\n        \r\n            // Access globally \r\n            window.environment = this.environment;\r\n\r\n            // -----------------------------------------------------------------\r\n\r\n            if (Config.isDev) {\r\n                // this.meshHelper = new MeshHelper(this.scene, this.model.obj);\r\n                //\r\n                // if (Config.mesh.enableHelper) this.meshHelper.enable();\r\n\r\n                this.gui.load(this);\r\n                this.gui.show();\r\n            }\r\n            // -----------------------------------------------------------------\r\n\r\n            // onProgress callback\r\n            this.manager.onProgress = (item, loaded, total) => {\r\n                console.log(`${item}: ${loaded} ${total}`);\r\n            };\r\n\r\n            // All loaders done now\r\n            this.manager.onLoad = () => {\r\n                // alert('Loaded');\r\n                console.log('Loading complete!');\r\n\r\n                // Set up interaction manager with the app now that the model is finished loading\r\n                new Interaction(\r\n                    this.renderer.threeRenderer,\r\n                    this.scene,\r\n                    camera.threeCamera,\r\n                    this.controls.threeControls\r\n                );\r\n\r\n                // Add dat.GUI controls if dev\r\n                if (Config.isDev) {\r\n                    this.meshHelper = new MeshHelper(this.scene, this.model.obj);\r\n\r\n                    if (Config.mesh.enableHelper) this.meshHelper.enable();\r\n\r\n                    // this.gui.load(this, this.model.obj);\r\n                    // this.gui.show();\r\n                }\r\n\r\n                // Everything is now fully loaded\r\n                Config.isLoaded = true;\r\n                this.container.querySelector('#loading').style.display = 'none';\r\n            };\r\n        });\r\n\r\n        // Start render which does not wait for model fully loaded\r\n\r\n        this.render();\r\n        this.container.querySelector('#loading').style.display = 'none';\r\n\r\n        // Eventlistner for catching mouse click events\r\n        window.addEventListener('click', this.onDocumentMouseDown, false);\r\n        // Eventlistner for catching mouse move events\r\n        // document.addEventListener('mousemove', this.onDocumentMouseMove);\r\n    }\r\n\r\n    onDocumentMouseDown(event) {\r\n        event.preventDefault();\r\n\r\n        mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n        mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\r\n\r\n        raycaster.setFromCamera(mouse, camera.threeCamera);\r\n\r\n        const intersects = raycaster.intersectObjects(scene.children);\r\n        if (intersects.length > 0) {\r\n            const object = intersects[0].object;\r\n            if (INTERSECTED) INTERSECTED.material.setValues({ opacity: INTERSECTED.currentOpacity });\r\n            INTERSECTED = object;\r\n            selectedLabel = INTERSECTED.children[0];\r\n            INTERSECTED.currentOpacity = INTERSECTED.material.opacity;\r\n            INTERSECTED.labelsVisibility = INTERSECTED.material.labelVisibility;\r\n            if (selectedLabel !== undefined && selectedLabel.visible !== undefined && Config.isShowingLables) {\r\n                selectedLabel.visible = !selectedLabel.visible;\r\n            }\r\n            INTERSECTED.material.selected = !INTERSECTED.material.selected;\r\n            if (INTERSECTED.name.startsWith('Obstacle')) {\r\n                // Obstacle selection event handling\r\n                // if (INTERSECTED.material.selected) {\r\n                //     INTERSECTED.currentHex = INTERSECTED.material.emissive.getHex();\r\n                //     INTERSECTED.material.emissive.setHex(0xf95f4a);\r\n                // } else {\r\n                //     INTERSECTED.currentHex = INTERSECTED.material.userData.originalEmmisive;\r\n                //     INTERSECTED.material.emissive.setHex(INTERSECTED.currentHex);\r\n                // }\r\n            } else if (INTERSECTED.name.startsWith('Robot')) {\r\n                // Robot selection event handling\r\n                // TODO: Consider Reality filtering too...\r\n                if (INTERSECTED.material.selected) {\r\n                    INTERSECTED.material.setValues({ opacity: 0.5 });\r\n                } else {\r\n                    INTERSECTED.material.setValues({ opacity: 1 });\r\n                }\r\n                if (INTERSECTED.clickEvent !== undefined) {\r\n                    INTERSECTED.clickEvent(INTERSECTED);\r\n                }\r\n            }\r\n        } else {\r\n            if (INTERSECTED) INTERSECTED.material.setValues({ opacity: INTERSECTED.currentOpacity });\r\n            INTERSECTED = null;\r\n        }\r\n    }\r\n\r\n    onDocumentMouseMove(event) {\r\n        event.preventDefault();\r\n\r\n        mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n        mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\r\n\r\n        raycaster.setFromCamera(mouse, camera.threeCamera);\r\n\r\n        const intersects = raycaster.intersectObjects(scene.children, true);\r\n        if (intersects.length > 0) {\r\n            const object = intersects[0].object;\r\n            if (INTERSECTED !== object) {\r\n                if (INTERSECTED) INTERSECTED.material.setValues({ opacity: INTERSECTED.currentOpacity });\r\n                INTERSECTED = object;\r\n                selectedLabel = INTERSECTED.children[0];\r\n                INTERSECTED.currentOpacity = INTERSECTED.material.opacity;\r\n                INTERSECTED.currentColor = INTERSECTED.material.opacity;\r\n                INTERSECTED.material.setValues({ color: 0x03dffc, opacity: 0.75 });\r\n            }\r\n        } else {\r\n            if (INTERSECTED)\r\n                INTERSECTED.material.setValues({ opacity: 1.0, color: INTERSECTED.material.userData.originalColor });\r\n            INTERSECTED = null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // Call render function and pass in created scene and camera\r\n        this.renderer.render(this.scene, camera.threeCamera);\r\n\r\n        // render labels if enabled\r\n        if (Config.isShowingLables) {\r\n            this.labelRenderer.domElement.hidden = false;\r\n        } else {\r\n            this.labelRenderer.domElement.hidden = true;\r\n        }\r\n        this.labelRenderer.render(this.scene, camera.threeCamera);\r\n\r\n        // Delta time is sometimes needed for certain updates\r\n        //const delta = this.clock.getDelta();\r\n\r\n        // Call any vendor or module frame updates here\r\n        TWEEN.update();\r\n        this.controls.threeControls.update();\r\n\r\n        camera.threeCamera.updateMatrixWorld();\r\n\r\n        // update stats if dev environment\r\n        if (Config.isDev && Config.isShowingStats) {\r\n            this.stats.update();\r\n        }\r\n\r\n        // RAF\r\n        requestAnimationFrame(this.render.bind(this)); // Bind the main class instead of window object\r\n    }\r\n}\r\n","import Config from './data/config';\nimport Detector from './utils/detector';\nimport Main from './app/main';\n\n// Styles\nimport './../css/app.scss';\n// Check environment and set the Config helper\nif (__ENV__ === 'dev') {\n    console.log('----- RUNNING IN DEV ENVIRONMENT! -----');\n    Config.isDev = true;\n}\n\nfunction init() {\n    // Check for webGL capabilities\n    if (!Detector.webgl) {\n        Detector.addGetWebGLMessage();\n    } else {\n        const container = document.getElementById('appContainer');\n        new Main(container);\n    }\n}\n\ninit();\n"],"names":["resolvedConfig","config","scale","arena","size","minX","maxX","minY","maxY","mqtt","server","localStorage","getItem","port","parseInt","path","channel","mixedReality","obstacles","robots","selectedReality","selectedRealities","real","virtual","hiddenOpacity","isDev","isShowingStats","isShowingLables","labelsVisibility","isShowingRobotSnapshots","isLoaded","isTweening","isRotating","isMouseMoving","isMouseOver","maxAnisotropy","dpr","easing","TWEEN","duration","texture","imageFiles","name","image","mesh","enableHelper","wireframe","translucent","material","color","emissive","fog","near","camera","fov","far","aspect","posX","posY","posZ","controls","autoRotate","autoRotateSpeed","rotateSpeed","zoomSpeed","minDistance","maxDistance","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","Infinity","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","target","x","y","z","ambientLight","enabled","directionalLight","intensity","shadow","helperEnabled","bias","mapWidth","mapHeight","top","right","bottom","left","pointLight","distance","hemiLight","groundColor","storedConfig","document","location","href","JSON","parse","saveConfig","data","setItem","stringify","canvas","window","CanvasRenderingContext2D","webgl","createElement","WebGLRenderingContext","getContext","e","workers","Worker","fileapi","File","FileReader","FileList","Blob","getWebGLErrorMessage","element","id","style","fontFamily","fontSize","fontWeight","textAlign","background","padding","width","margin","this","innerHTML","join","addGetWebGLMessage","parameters","parent","undefined","body","appendChild","Renderer","scene","container","threeRenderer","THREE","antialias","setClearColor","setPixelRatio","devicePixelRatio","domElement","shadowMap","type","Config","capabilities","getMaxAnisotropy","updateSize","addEventListener","setSize","offsetWidth","offsetHeight","render","addLabel","prefix","object","visibility","className","textContent","reality","marginTop","elementLabel","CSS2DObject","position","set","visible","add","removeLabel","remove","Camera","renderer","height","threeCamera","up","updateProjectionMatrix","Light","init","castShadow","mapSize","directionalLightHelper","lightName","Controls","threeControls","OrbitControls","enableRotate","Environment","console","log","scene_scale","createGround","createGrid","ground","getObjectByName","geometry","depthWrite","userData","originalColor","receiveShadow","grid","round","rotation","opacity","transparent","xMin","xMax","yMin","yMax","abs","_v1","Vector3","_v2","_normalMatrix","Matrix3","_keys","VertexNormalsHelper","hex","nNormals","objGeometry","isGeometry","faces","length","isBufferGeometry","attributes","normal","count","BufferGeometry","positions","Float32BufferAttribute","setAttribute","LineSegments","LineBasicMaterial","toneMapped","matrixAutoUpdate","update","prototype","Object","create","constructor","idx","updateMatrixWorld","getNormalMatrix","matrixWorld","vertices","i","l","face","j","jl","vertexNormals","vertex","copy","applyMatrix4","applyMatrix3","normalize","multiplyScalar","setXYZ","objPos","objNorm","getX","getY","getZ","needsUpdate","MeshHelper","wireLine","depthTest","edges","edgesLine","vertexHelper","boxHelper","Helpers","fn","threshhold","scope","last","deferTimer","context","now","Date","args","arguments","clearTimeout","setTimeout","apply","xhr","lengthComputable","percentComplete","loaded","total","error","value","replace","setHex","shading","vertexColors","side","verticesNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","materialKey","textures","key","Texture","loader","promiseArray","setPath","forEach","imageFile","push","Promise","resolve","reject","load","anisotropy","modelOBJ","Error","then","keys","reason","GLTFLoader","manager","Loader","dracoLoader","ddsLoader","GLTFRegistry","objects","get","removeAll","assign","url","onLoad","onProgress","onError","resourcePath","LoaderUtils","itemStart","_onError","itemError","itemEnd","FileLoader","setResponseType","crossOrigin","setWithCredentials","gltf","setDRACOLoader","setDDSLoader","content","extensions","Uint8Array","BINARY_EXTENSION_HEADER_MAGIC","EXTENSIONS","KHR_BINARY_GLTF","GLTFBinaryExtension","json","asset","version","extensionsUsed","extensionName","extensionsRequired","KHR_LIGHTS_PUNCTUAL","GLTFLightsExtension","KHR_MATERIALS_CLEARCOAT","GLTFMaterialsClearcoatExtension","KHR_MATERIALS_UNLIT","GLTFMaterialsUnlitExtension","KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS","GLTFMaterialsPbrSpecularGlossinessExtension","KHR_DRACO_MESH_COMPRESSION","GLTFDracoMeshCompressionExtension","MSFT_TEXTURE_DDS","GLTFTextureDDSExtension","KHR_TEXTURE_TRANSFORM","GLTFTextureTransformExtension","KHR_MESH_QUANTIZATION","GLTFMeshQuantizationExtension","indexOf","warn","GLTFParser","extension","lightDefs","lights","loadLight","lightIndex","lightNode","lightDef","Color","fromArray","range","DirectionalLight","PointLight","SpotLight","spot","innerConeAngle","outerConeAngle","angle","penumbra","decay","getMaterialType","MeshBasicMaterial","extendParams","materialParams","materialDef","parser","pending","metallicRoughness","pbrMetallicRoughness","Array","isArray","baseColorFactor","array","baseColorTexture","assignTexture","all","MeshPhysicalMaterial","clearcoatFactor","clearcoat","clearcoatTexture","clearcoatRoughnessFactor","clearcoatRoughness","clearcoatRoughnessTexture","clearcoatNormalTexture","clearcoatNormalScale","Vector2","BINARY_EXTENSION_HEADER_LENGTH","BINARY_EXTENSION_CHUNK_TYPES","BIN","headerView","DataView","header","magic","slice","getUint32","chunkView","chunkIndex","byteLength","chunkLength","chunkType","contentArray","byteOffset","preload","GLTFMeshStandardSGMaterial","params","MeshStandardMaterial","isGLTFSpecularGlossinessMaterial","specularMapParsFragmentChunk","glossinessMapParsFragmentChunk","specularMapFragmentChunk","glossinessMapFragmentChunk","lightPhysicalFragmentChunk","uniforms","specular","glossiness","specularMap","glossinessMap","_extraUniforms","onBeforeCompile","shader","uniformName","fragmentShader","defineProperties","v","defines","USE_GLOSSINESSMAP","USE_ROUGHNESSMAP","metalness","roughness","metalnessMap","roughnessMap","setValues","specularGlossinessParams","pbrSpecularGlossiness","diffuseFactor","diffuseTexture","glossinessFactor","specularFactor","specularGlossinessTexture","specGlossMapDef","createMaterial","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","normalMapType","TangentSpaceNormalMap","normalScale","displacementMap","displacementScale","displacementBias","alphaMap","envMap","envMapIntensity","refractionRatio","GLTFCubicSplineInterpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","Interpolant","decodePrimitive","primitive","bufferViewIndex","bufferView","gltfAttributeMap","threeAttributeMap","attributeNormalizedMap","attributeTypeMap","attributeName","threeAttributeName","ATTRIBUTES","toLowerCase","accessorDef","accessors","componentType","WEBGL_COMPONENT_TYPES","normalized","getDependency","decodeDracoFile","attribute","extendTexture","transform","clone","offset","repeat","texCoord","source","copySampleValue_","index","result","values","valueSize","beforeStart_","afterEnd_","interpolate_","i1","t0","t","t1","stride","stride2","stride3","td","p","pp","ppp","offset1","offset0","s2","s3","s0","s1","p0","m0","p1","m1","WEBGL_CONSTANTS","Int8Array","Int16Array","Uint16Array","Uint32Array","Float32Array","WEBGL_FILTERS","NearestFilter","LinearFilter","NearestMipmapNearestFilter","LinearMipmapNearestFilter","NearestMipmapLinearFilter","LinearMipmapLinearFilter","WEBGL_WRAPPINGS","ClampToEdgeWrapping","MirroredRepeatWrapping","RepeatWrapping","WEBGL_TYPE_SIZES","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","WEIGHTS_0","JOINTS_0","PATH_PROPERTIES","translation","weights","INTERPOLATION","CUBICSPLINE","LINEAR","InterpolateLinear","STEP","InterpolateDiscrete","ALPHA_MODES","MIME_TYPE_FORMATS","RGBAFormat","RGBFormat","resolveURL","test","addUnknownExtensionsToUserData","knownExtensions","objectDef","gltfExtensions","assignExtrasToUserData","gltfDef","extras","updateMorphTargets","meshDef","il","morphTargetInfluences","targetNames","morphTargetDictionary","createAttributesKey","attributesKey","sort","options","cache","primitiveCache","textureLoader","TextureLoader","setCrossOrigin","fileLoader","addPrimitiveAttributes","primitiveDef","assignAttributeAccessor","accessorIndex","accessor","gltfAttributeName","indices","setIndex","box","Box3","min","max","targets","maxDisplacement","vector","setX","setY","setZ","expandByVector","boundingBox","sphere","Sphere","getCenter","center","radius","distanceTo","boundingSphere","computeBounds","hasMorphPosition","hasMorphNormal","pendingPositionAccessors","pendingNormalAccessors","pendingAccessor","morphPositions","morphNormals","morphAttributes","morphTargetsRelative","addMorphTargets","toTrianglesDrawMode","drawMode","getIndex","getAttribute","numberOfTriangles","newIndices","TriangleFanDrawMode","newGeometry","markDefs","getDependencies","dependencies","scenes","animations","cameras","nodeDefs","nodes","skinDefs","skins","meshDefs","meshes","meshReferences","meshUses","skinIndex","skinLength","joints","isBone","nodeIndex","nodeLength","nodeDef","skin","isSkinnedMesh","cacheKey","dependency","loadScene","loadNode","loadMesh","loadAccessor","loadBufferView","loadBuffer","loadMaterial","loadTexture","loadSkin","loadAnimation","loadCamera","defs","def","bufferIndex","bufferDef","buffers","uri","bufferViewDef","bufferViews","buffer","sparse","pendingBufferViews","bufferAttribute","itemSize","TypedArray","elementBytes","BYTES_PER_ELEMENT","itemBytes","byteStride","ibSlice","floor","ibCacheKey","ib","InterleavedBuffer","InterleavedBufferAttribute","BufferAttribute","itemSizeIndices","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","setW","textureIndex","URL","self","webkitURL","textureDef","textureExtensions","sourceURI","images","isObjectURL","blob","mimeType","createObjectURL","getHandler","revokeObjectURL","flipY","format","sampler","samplers","magFilter","minFilter","wrapS","wrapT","mapName","mapDef","isCompressedTexture","assignFinalMaterial","useVertexTangents","tangent","useVertexColors","useFlatShading","useSkinning","useMorphTargets","useMorphNormals","isPoints","uuid","pointsMaterial","PointsMaterial","Material","sizeAttenuation","isLine","lineMaterial","cachedMaterial","skinning","vertexTangents","flatShading","morphTargets","uv2","uv","materialIndex","materialType","materials","materialExtensions","sgExtension","kmuExtension","metallicFactor","roughnessFactor","metallicRoughnessTexture","doubleSided","DoubleSide","alphaMode","alphaTest","alphaCutoff","normalTexture","occlusionTexture","strength","emissiveFactor","emissiveTexture","clearcoatExtension","encoding","sRGBEncoding","loadGeometries","primitives","createDracoPrimitive","dracoExtension","geometryPromise","mode","cached","promise","meshIndex","FrontSide","results","geometries","SkinnedMesh","Mesh","skinWeight","normalizeSkinWeights","TriangleStripDrawMode","Line","LineLoop","Points","group","Group","cameraIndex","cameraDef","PerspectiveCamera","MathUtils","yfov","aspectRatio","znear","zfar","OrthographicCamera","xmag","ymag","skinDef","skinEntry","inverseBindMatrices","animationIndex","animationDef","pendingNodes","pendingInputAccessors","pendingOutputAccessors","pendingSamplers","pendingTargets","channels","node","input","output","inputAccessors","outputAccessors","tracks","inputAccessor","outputAccessor","TypedKeyframeTrack","updateMatrix","NumberKeyframeTrack","QuaternionKeyframeTrack","VectorKeyframeTrack","targetName","interpolation","traverse","isMesh","outputArray","scaled","track","createInterpolant","times","getValueSize","isInterpolantFactoryMethodGLTFCubicSpline","AnimationClip","instanceNum","o","light","Bone","Object3D","PropertyBinding","matrix","Matrix4","quaternion","buildNodeHierachy","nodeId","parentObject","pendingJoints","jointNodes","bones","boneInverses","jointNode","mat","bind","Skeleton","children","child","sceneIndex","sceneDef","nodeIds","ALIAS","down","space","tab","escape","Keyboard","keyCodes","event","onKeyChange","onBlur","removeEventListener","prop","keyCode","keyDesc","split","pressed","toUpperCase","charCodeAt","aliases","aliasKeys","shiftKey","ctrlKey","altKey","metaKey","Interaction","timeout","keyboard","onMouseMove","onMouseLeave","onMouseOver","eventMatches","preventDefault","DatGUI","main","gui","dat","GUI","useLocalStorage","model","meshHelper","onChange","labelsFolder","addFolder","toggleLabels","realityFolder","listen","toggleReality","otherFolder","reload","close","variable","startsWith","selected","entries","obj","show","destroy","OBSTACLE_PREFIX","Obstacle","callback","obs","obstacle","createGeometry","labelVisibility","originalEmmisive","getHex","random","name_temp","toString","substring","deleteIfExists","calculateZ","radX","radY","radZ","g","TypeError","createBoxGeometry","depth","createCylinderGeometry","radiusTop","radiusBottom","createSphereGeometry","heightSegments","radialSegments","widthSegments","m","properties","STLLoader","require","ROBOT_PREFIX","Robot","that","created","setInterval","prune","R","G","B","ambient","r","setRGB","heading","REALITY","robotId","clickEvent","robot","alert","setReality","move","currentHeading","newHeading","rotationFlag","sqrt","pow","to","onUpdate","onComplete","delay","start","publish","nodeContent","disp","querySelector","prevContent","getElementById","createTextNode","requestSnapshot","replaceChild","display","valid","getUrlParam","parameter","defaultvalue","vars","urlparameter","getCredentials","base64","jsonPayload","storedCredentials","username","password","origin","pathname","history","pushState","title","credentials","decodeURIComponent","atob","c","user","pass","host","TOPIC_ROBOT_CREATE","TOPIC_ROBOT_DELETE","TOPIC_ROBOT_BROADCAST","TOPIC_LOC_INFO_FROM_SERVER","TOPIC_LOC_INFO_FROM_LOC_SYSTEMS","TOPIC_LOC_REQUEST","TOPIC_OBSTACLE_REQUEST","TOPIC_OBSTACLES_LIST","TOPIC_OBSTACLES_DELETE","TOPIC_OBSTACLES_DELETE_ALL","TOPIC_CHANGE_COLOR","TOPIC_ARENA_CONFIG","TOPIC_MANAGEMENT_VISUALIZER","TOPIC_MANAGEMENT_SNAPSHOT","MQTTClient","updateChannel","client_id","client","MQTT","connect","userName","reconnect","useSSL","cleanSession","onSuccess","subscribe","onMessageArrived","onConnectionLost","onFailure","responseObject","errorCode","errorMessage","packet","msg","payloadString","trim","destinationName","topic","exists","createList","deleteAll","changeColor","snapshot","subElement","titleElement","hasOwnProperty","call","environment","subTopic","message","payload","pubTopic","send","INTERSECTED","selectedLabel","raycaster","mouse","Main","clock","place","stats","Stats","dom","labelRenderer","CSS2DRenderer","innerWidth","innerHeight","isShowingObstacleLables","isShowingRobotLables","item","enable","onDocumentMouseDown","clientX","clientY","setFromCamera","intersects","intersectObjects","currentOpacity","currentColor","hidden","requestAnimationFrame","Detector"],"sourceRoot":""}